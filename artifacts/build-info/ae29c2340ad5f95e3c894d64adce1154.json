{
	"id": "ae29c2340ad5f95e3c894d64adce1154",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"NFTFlatten.sol": {
				"content": "// Sources flattened with hardhat v2.19.3 https://hardhat.org\n\n// SPDX-License-Identifier: GPL-3.0\n// File @openzeppelin/contracts/utils/Context.sol@v5.0.1\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n\n// File @openzeppelin/contracts/access/Ownable.sol@v5.0.1\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n\n// File @openzeppelin/contracts/interfaces/draft-IERC6093.sol@v5.0.1\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`ΓÇÖs `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`ΓÇÖs approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`ΓÇÖs approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n\n// File @openzeppelin/contracts/utils/introspection/IERC165.sol@v5.0.1\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n\n// File @openzeppelin/contracts/token/ERC721/IERC721.sol@v5.0.1\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n\n\n// File @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol@v5.0.1\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n\n// File @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol@v5.0.1\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n\n// File @openzeppelin/contracts/utils/introspection/ERC165.sol@v5.0.1\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n\n// File @openzeppelin/contracts/utils/math/Math.sol@v5.0.1\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // ΓåÆ `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // ΓåÆ `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n\n// File @openzeppelin/contracts/utils/math/SignedMath.sol@v5.0.1\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n\n\n// File @openzeppelin/contracts/utils/Strings.sol@v5.0.1\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n\n\n// File @openzeppelin/contracts/token/ERC721/ERC721.sol@v5.0.1\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n// File @openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol@v5.0.1\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n\n\n// File @openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol@v5.0.1\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n * of all the token ids in the contract as well as all token ids owned by each account.\n *\n * CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n * interfere with enumerability and should not be used together with `ERC721Enumerable`.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    mapping(address owner => mapping(uint256 index => uint256)) private _ownedTokens;\n    mapping(uint256 tokenId => uint256) private _ownedTokensIndex;\n\n    uint256[] private _allTokens;\n    mapping(uint256 tokenId => uint256) private _allTokensIndex;\n\n    /**\n     * @dev An `owner`'s token query was out of bounds for `index`.\n     *\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\n     */\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\n\n    /**\n     * @dev Batch mint is not allowed.\n     */\n    error ERC721EnumerableForbiddenBatchMint();\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {\n        if (index >= balanceOf(owner)) {\n            revert ERC721OutOfBoundsIndex(owner, index);\n        }\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\n        if (index >= totalSupply()) {\n            revert ERC721OutOfBoundsIndex(address(0), index);\n        }\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev See {ERC721-_update}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\n        address previousOwner = super._update(to, tokenId, auth);\n\n        if (previousOwner == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (previousOwner != to) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n\n        return previousOwner;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = balanceOf(to) - 1;\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = balanceOf(from);\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n\n    /**\n     * See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch\n     */\n    function _increaseBalance(address account, uint128 amount) internal virtual override {\n        if (amount > 0) {\n            revert ERC721EnumerableForbiddenBatchMint();\n        }\n        super._increaseBalance(account, amount);\n    }\n}\n\n\n// File @openzeppelin/contracts/utils/Pausable.sol@v5.0.1\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n\n\n// File @openzeppelin/contracts/token/ERC721/extensions/ERC721Pausable.sol@v5.0.1\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721Pausable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev ERC721 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC721Pausable is ERC721, Pausable {\n    /**\n     * @dev See {ERC721-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(\n        address to,\n        uint256 tokenId,\n        address auth\n    ) internal virtual override whenNotPaused returns (address) {\n        return super._update(to, tokenId, auth);\n    }\n}\n\n\n// File contracts/DHB.sol\n\n\npragma solidity ^0.8.20;\ncontract DatHieuBin is ERC721, ERC721Enumerable, ERC721Pausable, Ownable {\n    uint256 private _nextTokenId;\n    uint256 maxSupply = 100;\n    bool public publicMintOpen = false;\n    bool public allowistMintOpen = false;\n\n    mapping(address => bool) public allowList;\n    constructor(address initialOwner)\n        ERC721(\"DatHieuBin\", \"DHB\")\n        Ownable(initialOwner)\n    {}\n\n    function _baseURI() internal pure override returns (string memory) {\n        return \"https://emerald-wooden-gamefowl-472.mypinata.cloud/ipfs/QmcrnyLZr4y5tHcz1WmKGLWCYrUTEdC2GUfdkbBWhCn51w/\";\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n    // Type in the allowlist\n    function setAllowList(address[] calldata addresses) external onlyOwner {\n        for (uint256 i = 0; i < addresses.length; i++) {\n            allowList[addresses[i]] = true;\n        }\n    }\n\n    function editMintWindows(\n        bool _publicMintOpen,\n        bool _allowistMintOpen\n    ) external onlyOwner {\n        publicMintOpen = _publicMintOpen;\n        allowistMintOpen = _allowistMintOpen;\n\n    }\n\n    // Add Payment\n    // Add supply limitations\n    function publicMint() public payable {\n        require(publicMintOpen, \"Public Mint Closed\");\n        require(msg.value == 0.02 ether, \"Khong du tien\");\n        internalMint();\n    }\n    // Only people with permission can mint nft with lower fee\n    function allowistMint() public payable {\n        require(allowistMintOpen, \"Allowist Mint Closed\");\n        require(allowList[msg.sender], \"Ban khong co quyen!\");\n        require(msg.value == 0.0002 ether, \"Khong du tien\");\n        internalMint();\n    }\n\n    function internalMint() internal {\n        require(totalSupply() < maxSupply, \"Khong con NFT!\");\n        uint256 tokenId = _nextTokenId++;\n        _safeMint(msg.sender, tokenId);\n    }\n\n\n\n    // The following functions are overrides required by Solidity.\n\n    function _update(address to, uint256 tokenId, address auth)\n        internal\n        override(ERC721, ERC721Enumerable, ERC721Pausable)\n        returns (address)\n    {\n        return super._update(to, tokenId, auth);\n    }\n\n    function _increaseBalance(address account, uint128 value)\n        internal\n        override(ERC721, ERC721Enumerable)\n    {\n        super._increaseBalance(account, value);\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC721, ERC721Enumerable)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"NFTFlatten.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"DatHieuBin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowList",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allowistMint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allowistMintOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_publicMintOpen",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_allowistMintOpen",
									"type": "bool"
								}
							],
							"name": "editMintWindows",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "publicMint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "publicMintOpen",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"name": "setAllowList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`ΓÇÖs approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NFTFlatten.sol\":68562:71155  contract DatHieuBin is ERC721, ERC721Enumerable, ERC721Pausable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"NFTFlatten.sol\":68695:68698  100 */\n  0x64\n    /* \"NFTFlatten.sol\":68675:68698  uint256 maxSupply = 100 */\n  0x0c\n  sstore\n    /* \"NFTFlatten.sol\":68733:68738  false */\n  0x00\n    /* \"NFTFlatten.sol\":68704:68738  bool public publicMintOpen = false */\n  0x0d\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"NFTFlatten.sol\":68775:68780  false */\n  0x00\n    /* \"NFTFlatten.sol\":68744:68780  bool public allowistMintOpen = false */\n  0x0d\n  exp(0x0100, 0x01)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"NFTFlatten.sol\":68834:68940  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"NFTFlatten.sol\":68920:68932  initialOwner */\n  dup1\n    /* \"NFTFlatten.sol\":39846:39959  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x4461744869657542696e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4448420000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"NFTFlatten.sol\":39920:39925  name_ */\n  dup2\n    /* \"NFTFlatten.sol\":39912:39917  _name */\n  0x00\n    /* \"NFTFlatten.sol\":39912:39925  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"NFTFlatten.sol\":39945:39952  symbol_ */\n  dup1\n    /* \"NFTFlatten.sol\":39935:39942  _symbol */\n  0x01\n    /* \"NFTFlatten.sol\":39935:39952  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"NFTFlatten.sol\":39846:39959  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"NFTFlatten.sol\":65629:65634  false */\n  0x00\n    /* \"NFTFlatten.sol\":65619:65626  _paused */\n  0x0a\n  0x00\n    /* \"NFTFlatten.sol\":65619:65634  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"NFTFlatten.sol\":2369:2370  0 */\n  0x00\n    /* \"NFTFlatten.sol\":2345:2371  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"NFTFlatten.sol\":2345:2357  initialOwner */\n  dup2\n    /* \"NFTFlatten.sol\":2345:2371  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"NFTFlatten.sol\":2341:2436  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"NFTFlatten.sol\":2422:2423  0 */\n  0x00\n    /* \"NFTFlatten.sol\":2394:2425  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"NFTFlatten.sol\":2341:2436  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"NFTFlatten.sol\":2445:2477  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"NFTFlatten.sol\":2464:2476  initialOwner */\n  dup2\n    /* \"NFTFlatten.sol\":2445:2463  _transferOwnership */\n  shl(0x20, tag_18)\n    /* \"NFTFlatten.sol\":2445:2477  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"NFTFlatten.sol\":2297:2484  constructor(address initialOwner) {... */\n  pop\n    /* \"NFTFlatten.sol\":68834:68940  constructor(address initialOwner)... */\n  pop\n    /* \"NFTFlatten.sol\":68562:71155  contract DatHieuBin is ERC721, ERC721Enumerable, ERC721Pausable, Ownable {... */\n  jump(tag_20)\n    /* \"NFTFlatten.sol\":3984:4171  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"NFTFlatten.sol\":4057:4073  address oldOwner */\n  0x00\n    /* \"NFTFlatten.sol\":4076:4082  _owner */\n  0x0a\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"NFTFlatten.sol\":4057:4082  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"NFTFlatten.sol\":4101:4109  newOwner */\n  dup2\n    /* \"NFTFlatten.sol\":4092:4098  _owner */\n  0x0a\n  0x01\n    /* \"NFTFlatten.sol\":4092:4109  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"NFTFlatten.sol\":4155:4163  newOwner */\n  dup2\n    /* \"NFTFlatten.sol\":4124:4164  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"NFTFlatten.sol\":4145:4153  oldOwner */\n  dup2\n    /* \"NFTFlatten.sol\":4124:4164  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"NFTFlatten.sol\":4047:4171  {... */\n  pop\n    /* \"NFTFlatten.sol\":3984:4171  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_23:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_25:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_26:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_56\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_25\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_27:\n    /* \"#utility.yul\":641:665   */\n  tag_58\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_59:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_28:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_61\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_27\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_64\n  tag_23\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":932:1051   */\ntag_63:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_65\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_28\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_29:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_30:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_31:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_32:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_70\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_70:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_71\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_72\n  tag_31\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1909:1993   */\ntag_71:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_33:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_34:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_35:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_36:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_77\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_35\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2624:2663   */\n  tag_78\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_35\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_37:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_38:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_39:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_82\n    /* \"#utility.yul\":3013:3047   */\n  tag_83\n    /* \"#utility.yul\":3022:3046   */\n  tag_84\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_37\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3013:3047   */\n  tag_38\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2995:3048   */\n  tag_37\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_40:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_41:\n    /* \"#utility.yul\":3251:3290   */\n  tag_87\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_39\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3312:3403   */\n  tag_88\n    /* \"#utility.yul\":3361:3402   */\n  tag_89\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_40\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_36\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_42:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_43:\n    /* \"#utility.yul\":3572:3604   */\n  tag_92\n  tag_42\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3613:3678   */\n  tag_93\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_41\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_44:\n    /* \"#utility.yul\":3750:3870   */\ntag_95:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_98\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_43\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_95)\ntag_97:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_45:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_101\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_33\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4101:4130   */\n  tag_102\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_34\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_103:\n    /* \"#utility.yul\":4328:4408   */\n  tag_104\n    /* \"#utility.yul\":4384:4406   */\n  tag_105\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_34\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_44\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_100:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_46:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_47:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_108\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_46\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_48:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_110\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_47\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_10:\n    /* \"#utility.yul\":5145:5182   */\n  tag_112\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_29\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_114\n  tag_30\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5233:5289   */\ntag_113:\n    /* \"#utility.yul\":5313:5351   */\n  tag_115\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_32\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5398:5465   */\n  tag_116\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_45\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_118\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_119:\n    /* \"#utility.yul\":6339:6406   */\n  tag_120\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_48\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_117)\n    /* \"#utility.yul\":5560:6178   */\ntag_118:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_121\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_33\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_122:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_122)\ntag_124:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_126\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_47\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_125:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_117:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_49:\n    /* \"#utility.yul\":6516:6540   */\n  tag_128\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_26\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_16:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_130\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_49\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"NFTFlatten.sol\":68562:71155  contract DatHieuBin is ERC721, ERC721Enumerable, ERC721Pausable, Ownable {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NFTFlatten.sol\":68562:71155  contract DatHieuBin is ERC721, ERC721Enumerable, ERC721Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xc5b8bbb9\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xc5b8bbb9\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      jump(tag_1)\n    tag_33:\n      dup1\n      0x95d89b41\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xbcc9ca5b\n      eq\n      tag_26\n      jumpi\n      jump(tag_1)\n    tag_32:\n      dup1\n      0x70a08231\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_22\n      jumpi\n      jump(tag_1)\n    tag_34:\n      dup1\n      0x5c975abb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x6447c35d\n      eq\n      tag_18\n      jumpi\n      jump(tag_1)\n    tag_31:\n      dup1\n      0x2848aeaf\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x2f745c59\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x2f745c59\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4f6ccce7\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_36:\n      dup1\n      0x2848aeaf\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2e9b82f2\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2f48de79\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_35:\n      dup1\n      0x095ea7b3\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x26092b83\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_37:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"NFTFlatten.sol\":70948:71153  function supportsInterface(bytes4 interfaceId)... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTFlatten.sol\":40830:40919  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTFlatten.sol\":41962:42116  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTFlatten.sol\":41788:41901  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"NFTFlatten.sol\":59181:59283  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTFlatten.sol\":42608:43186  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"NFTFlatten.sol\":69768:69950  function publicMint() public payable {... */\n    tag_8:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      stop\n        /* \"NFTFlatten.sol\":68787:68828  mapping(address => bool) public allowList */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTFlatten.sol\":70018:70271  function allowistMint() public payable {... */\n    tag_10:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"NFTFlatten.sol\":69505:69713  function editMintWindows(... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      stop\n        /* \"NFTFlatten.sol\":58855:59110  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTFlatten.sol\":69213:69276  function unpause() public onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      stop\n        /* \"NFTFlatten.sol\":43252:43384  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"NFTFlatten.sol\":59355:59581  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTFlatten.sol\":66238:66322  function paused() public view virtual returns (bool) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTFlatten.sol\":40650:40768  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTFlatten.sol\":69310:69499  function setAllowList(address[] calldata addresses) external onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      tag_117\n      jump\t// in\n    tag_114:\n      stop\n        /* \"NFTFlatten.sol\":40385:40593  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTFlatten.sol\":3365:3466  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      stop\n        /* \"NFTFlatten.sol\":69148:69207  function pause() public onlyOwner {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      stop\n        /* \"NFTFlatten.sol\":2710:2795  function owner() public view virtual returns (address) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTFlatten.sol\":40983:41076  function symbol() public view virtual returns (string memory) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTFlatten.sol\":42183:42327  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      tag_141\n      jump\t// in\n    tag_138:\n      stop\n        /* \"NFTFlatten.sol\":43450:43658  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      tag_143\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      tag_146\n      jump\t// in\n    tag_143:\n      stop\n        /* \"NFTFlatten.sol\":68704:68738  bool public publicMintOpen = false */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_150\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTFlatten.sol\":68744:68780  bool public allowistMintOpen = false */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTFlatten.sol\":41142:41397  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_156\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_157:\n      tag_158\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTFlatten.sol\":42393:42546  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      tag_161\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      tag_164\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      tag_165\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFTFlatten.sol\":3615:3830  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      tag_167\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_168:\n      tag_169\n      jump\t// in\n    tag_167:\n      stop\n        /* \"NFTFlatten.sol\":70948:71153  function supportsInterface(bytes4 interfaceId)... */\n    tag_42:\n        /* \"NFTFlatten.sol\":71083:71087  bool */\n      0x00\n        /* \"NFTFlatten.sol\":71110:71146  super.supportsInterface(interfaceId) */\n      tag_171\n        /* \"NFTFlatten.sol\":71134:71145  interfaceId */\n      dup3\n        /* \"NFTFlatten.sol\":71110:71133  super.supportsInterface */\n      tag_172\n        /* \"NFTFlatten.sol\":71110:71146  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_171:\n        /* \"NFTFlatten.sol\":71103:71146  return super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":70948:71153  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":40830:40919  function name() public view virtual returns (string memory) {... */\n    tag_47:\n        /* \"NFTFlatten.sol\":40875:40888  string memory */\n      0x60\n        /* \"NFTFlatten.sol\":40907:40912  _name */\n      0x00\n        /* \"NFTFlatten.sol\":40900:40912  return _name */\n      dup1\n      sload\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_176\n      swap1\n      tag_175\n      jump\t// in\n    tag_176:\n      dup1\n      iszero\n      tag_177\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_178\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_177)\n    tag_178:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_179:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_179\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":40830:40919  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"NFTFlatten.sol\":41962:42116  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_54:\n        /* \"NFTFlatten.sol\":42029:42036  address */\n      0x00\n        /* \"NFTFlatten.sol\":42048:42070  _requireOwned(tokenId) */\n      tag_181\n        /* \"NFTFlatten.sol\":42062:42069  tokenId */\n      dup3\n        /* \"NFTFlatten.sol\":42048:42061  _requireOwned */\n      tag_182\n        /* \"NFTFlatten.sol\":42048:42070  _requireOwned(tokenId) */\n      jump\t// in\n    tag_181:\n      pop\n        /* \"NFTFlatten.sol\":42088:42109  _getApproved(tokenId) */\n      tag_183\n        /* \"NFTFlatten.sol\":42101:42108  tokenId */\n      dup3\n        /* \"NFTFlatten.sol\":42088:42100  _getApproved */\n      tag_184\n        /* \"NFTFlatten.sol\":42088:42109  _getApproved(tokenId) */\n      jump\t// in\n    tag_183:\n        /* \"NFTFlatten.sol\":42081:42109  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":41962:42116  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":41788:41901  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_61:\n        /* \"NFTFlatten.sol\":41859:41894  _approve(to, tokenId, _msgSender()) */\n      tag_186\n        /* \"NFTFlatten.sol\":41868:41870  to */\n      dup3\n        /* \"NFTFlatten.sol\":41872:41879  tokenId */\n      dup3\n        /* \"NFTFlatten.sol\":41881:41893  _msgSender() */\n      tag_187\n        /* \"NFTFlatten.sol\":41881:41891  _msgSender */\n      tag_188\n        /* \"NFTFlatten.sol\":41881:41893  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"NFTFlatten.sol\":41859:41867  _approve */\n      tag_189\n        /* \"NFTFlatten.sol\":41859:41894  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_186:\n        /* \"NFTFlatten.sol\":41788:41901  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":59181:59283  function totalSupply() public view virtual returns (uint256) {... */\n    tag_64:\n        /* \"NFTFlatten.sol\":59233:59240  uint256 */\n      0x00\n        /* \"NFTFlatten.sol\":59259:59269  _allTokens */\n      0x08\n        /* \"NFTFlatten.sol\":59259:59276  _allTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":59252:59276  return _allTokens.length */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":59181:59283  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"NFTFlatten.sol\":42608:43186  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_71:\n        /* \"NFTFlatten.sol\":42716:42717  0 */\n      0x00\n        /* \"NFTFlatten.sol\":42702:42718  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":42702:42704  to */\n      dup3\n        /* \"NFTFlatten.sol\":42702:42718  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFTFlatten.sol\":42698:42785  if (to == address(0)) {... */\n      tag_192\n      jumpi\n        /* \"NFTFlatten.sol\":42771:42772  0 */\n      0x00\n        /* \"NFTFlatten.sol\":42741:42774  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTFlatten.sol\":42698:42785  if (to == address(0)) {... */\n    tag_192:\n        /* \"NFTFlatten.sol\":43003:43024  address previousOwner */\n      0x00\n        /* \"NFTFlatten.sol\":43027:43061  _update(to, tokenId, _msgSender()) */\n      tag_194\n        /* \"NFTFlatten.sol\":43035:43037  to */\n      dup4\n        /* \"NFTFlatten.sol\":43039:43046  tokenId */\n      dup4\n        /* \"NFTFlatten.sol\":43048:43060  _msgSender() */\n      tag_195\n        /* \"NFTFlatten.sol\":43048:43058  _msgSender */\n      tag_188\n        /* \"NFTFlatten.sol\":43048:43060  _msgSender() */\n      jump\t// in\n    tag_195:\n        /* \"NFTFlatten.sol\":43027:43034  _update */\n      tag_196\n        /* \"NFTFlatten.sol\":43027:43061  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_194:\n        /* \"NFTFlatten.sol\":43003:43061  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":43092:43096  from */\n      dup4\n        /* \"NFTFlatten.sol\":43075:43096  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":43075:43088  previousOwner */\n      dup2\n        /* \"NFTFlatten.sol\":43075:43096  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTFlatten.sol\":43071:43180  if (previousOwner != from) {... */\n      tag_197\n      jumpi\n        /* \"NFTFlatten.sol\":43140:43144  from */\n      dup4\n        /* \"NFTFlatten.sol\":43146:43153  tokenId */\n      dup3\n        /* \"NFTFlatten.sol\":43155:43168  previousOwner */\n      dup3\n        /* \"NFTFlatten.sol\":43119:43169  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTFlatten.sol\":43071:43180  if (previousOwner != from) {... */\n    tag_197:\n        /* \"NFTFlatten.sol\":42688:43186  {... */\n      pop\n        /* \"NFTFlatten.sol\":42608:43186  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":69768:69950  function publicMint() public payable {... */\n    tag_73:\n        /* \"NFTFlatten.sol\":69823:69837  publicMintOpen */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"NFTFlatten.sol\":69815:69860  require(publicMintOpen, \"Public Mint Closed\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"NFTFlatten.sol\":69891:69901  0.02 ether */\n      0x470de4df820000\n        /* \"NFTFlatten.sol\":69878:69887  msg.value */\n      callvalue\n        /* \"NFTFlatten.sol\":69878:69901  msg.value == 0.02 ether */\n      eq\n        /* \"NFTFlatten.sol\":69870:69919  require(msg.value == 0.02 ether, \"Khong du tien\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"NFTFlatten.sol\":69929:69943  internalMint() */\n      tag_207\n        /* \"NFTFlatten.sol\":69929:69941  internalMint */\n      tag_208\n        /* \"NFTFlatten.sol\":69929:69943  internalMint() */\n      jump\t// in\n    tag_207:\n        /* \"NFTFlatten.sol\":69768:69950  function publicMint() public payable {... */\n      jump\t// out\n        /* \"NFTFlatten.sol\":68787:68828  mapping(address => bool) public allowList */\n    tag_78:\n      mstore(0x20, 0x0e)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"NFTFlatten.sol\":70018:70271  function allowistMint() public payable {... */\n    tag_81:\n        /* \"NFTFlatten.sol\":70075:70091  allowistMintOpen */\n      0x0d\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"NFTFlatten.sol\":70067:70116  require(allowistMintOpen, \"Allowist Mint Closed\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"NFTFlatten.sol\":70134:70143  allowList */\n      0x0e\n        /* \"NFTFlatten.sol\":70134:70155  allowList[msg.sender] */\n      0x00\n        /* \"NFTFlatten.sol\":70144:70154  msg.sender */\n      caller\n        /* \"NFTFlatten.sol\":70134:70155  allowList[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"NFTFlatten.sol\":70126:70179  require(allowList[msg.sender], \"Ban khong co quyen!\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"NFTFlatten.sol\":70210:70222  0.0002 ether */\n      0xb5e620f48000\n        /* \"NFTFlatten.sol\":70197:70206  msg.value */\n      callvalue\n        /* \"NFTFlatten.sol\":70197:70222  msg.value == 0.0002 ether */\n      eq\n        /* \"NFTFlatten.sol\":70189:70240  require(msg.value == 0.0002 ether, \"Khong du tien\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_206\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"NFTFlatten.sol\":70250:70264  internalMint() */\n      tag_218\n        /* \"NFTFlatten.sol\":70250:70262  internalMint */\n      tag_208\n        /* \"NFTFlatten.sol\":70250:70264  internalMint() */\n      jump\t// in\n    tag_218:\n        /* \"NFTFlatten.sol\":70018:70271  function allowistMint() public payable {... */\n      jump\t// out\n        /* \"NFTFlatten.sol\":69505:69713  function editMintWindows(... */\n    tag_86:\n        /* \"NFTFlatten.sol\":2603:2616  _checkOwner() */\n      tag_220\n        /* \"NFTFlatten.sol\":2603:2614  _checkOwner */\n      tag_221\n        /* \"NFTFlatten.sol\":2603:2616  _checkOwner() */\n      jump\t// in\n    tag_220:\n        /* \"NFTFlatten.sol\":69644:69659  _publicMintOpen */\n      dup2\n        /* \"NFTFlatten.sol\":69627:69641  publicMintOpen */\n      0x0d\n      0x00\n        /* \"NFTFlatten.sol\":69627:69659  publicMintOpen = _publicMintOpen */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NFTFlatten.sol\":69688:69705  _allowistMintOpen */\n      dup1\n        /* \"NFTFlatten.sol\":69669:69685  allowistMintOpen */\n      0x0d\n      0x01\n        /* \"NFTFlatten.sol\":69669:69705  allowistMintOpen = _allowistMintOpen */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NFTFlatten.sol\":69505:69713  function editMintWindows(... */\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":58855:59110  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n    tag_90:\n        /* \"NFTFlatten.sol\":58943:58950  uint256 */\n      0x00\n        /* \"NFTFlatten.sol\":58975:58991  balanceOf(owner) */\n      tag_224\n        /* \"NFTFlatten.sol\":58985:58990  owner */\n      dup4\n        /* \"NFTFlatten.sol\":58975:58984  balanceOf */\n      tag_121\n        /* \"NFTFlatten.sol\":58975:58991  balanceOf(owner) */\n      jump\t// in\n    tag_224:\n        /* \"NFTFlatten.sol\":58966:58971  index */\n      dup3\n        /* \"NFTFlatten.sol\":58966:58991  index >= balanceOf(owner) */\n      lt\n        /* \"NFTFlatten.sol\":58962:59061  if (index >= balanceOf(owner)) {... */\n      tag_225\n      jumpi\n        /* \"NFTFlatten.sol\":59037:59042  owner */\n      dup3\n        /* \"NFTFlatten.sol\":59044:59049  index */\n      dup3\n        /* \"NFTFlatten.sol\":59014:59050  ERC721OutOfBoundsIndex(owner, index) */\n      mload(0x40)\n      0xa57d13dc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTFlatten.sol\":58962:59061  if (index >= balanceOf(owner)) {... */\n    tag_225:\n        /* \"NFTFlatten.sol\":59077:59089  _ownedTokens */\n      0x06\n        /* \"NFTFlatten.sol\":59077:59096  _ownedTokens[owner] */\n      0x00\n        /* \"NFTFlatten.sol\":59090:59095  owner */\n      dup5\n        /* \"NFTFlatten.sol\":59077:59096  _ownedTokens[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTFlatten.sol\":59077:59103  _ownedTokens[owner][index] */\n      0x00\n        /* \"NFTFlatten.sol\":59097:59102  index */\n      dup4\n        /* \"NFTFlatten.sol\":59077:59103  _ownedTokens[owner][index] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NFTFlatten.sol\":59070:59103  return _ownedTokens[owner][index] */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":58855:59110  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":69213:69276  function unpause() public onlyOwner {... */\n    tag_94:\n        /* \"NFTFlatten.sol\":2603:2616  _checkOwner() */\n      tag_229\n        /* \"NFTFlatten.sol\":2603:2614  _checkOwner */\n      tag_221\n        /* \"NFTFlatten.sol\":2603:2616  _checkOwner() */\n      jump\t// in\n    tag_229:\n        /* \"NFTFlatten.sol\":69259:69269  _unpause() */\n      tag_231\n        /* \"NFTFlatten.sol\":69259:69267  _unpause */\n      tag_232\n        /* \"NFTFlatten.sol\":69259:69269  _unpause() */\n      jump\t// in\n    tag_231:\n        /* \"NFTFlatten.sol\":69213:69276  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"NFTFlatten.sol\":43252:43384  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_98:\n        /* \"NFTFlatten.sol\":43338:43377  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_234\n        /* \"NFTFlatten.sol\":43355:43359  from */\n      dup4\n        /* \"NFTFlatten.sol\":43361:43363  to */\n      dup4\n        /* \"NFTFlatten.sol\":43365:43372  tokenId */\n      dup4\n        /* \"NFTFlatten.sol\":43338:43377  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"NFTFlatten.sol\":43338:43354  safeTransferFrom */\n      tag_146\n        /* \"NFTFlatten.sol\":43338:43377  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_234:\n        /* \"NFTFlatten.sol\":43252:43384  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":59355:59581  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_102:\n        /* \"NFTFlatten.sol\":59421:59428  uint256 */\n      0x00\n        /* \"NFTFlatten.sol\":59453:59466  totalSupply() */\n      tag_236\n        /* \"NFTFlatten.sol\":59453:59464  totalSupply */\n      tag_64\n        /* \"NFTFlatten.sol\":59453:59466  totalSupply() */\n      jump\t// in\n    tag_236:\n        /* \"NFTFlatten.sol\":59444:59449  index */\n      dup3\n        /* \"NFTFlatten.sol\":59444:59466  index >= totalSupply() */\n      lt\n        /* \"NFTFlatten.sol\":59440:59541  if (index >= totalSupply()) {... */\n      tag_237\n      jumpi\n        /* \"NFTFlatten.sol\":59520:59521  0 */\n      0x00\n        /* \"NFTFlatten.sol\":59524:59529  index */\n      dup3\n        /* \"NFTFlatten.sol\":59489:59530  ERC721OutOfBoundsIndex(address(0), index) */\n      mload(0x40)\n      0xa57d13dc00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTFlatten.sol\":59440:59541  if (index >= totalSupply()) {... */\n    tag_237:\n        /* \"NFTFlatten.sol\":59557:59567  _allTokens */\n      0x08\n        /* \"NFTFlatten.sol\":59568:59573  index */\n      dup3\n        /* \"NFTFlatten.sol\":59557:59574  _allTokens[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_239\n      jumpi\n      tag_240\n      tag_241\n      jump\t// in\n    tag_240:\n    tag_239:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"NFTFlatten.sol\":59550:59574  return _allTokens[index] */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":59355:59581  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":66238:66322  function paused() public view virtual returns (bool) {... */\n    tag_106:\n        /* \"NFTFlatten.sol\":66285:66289  bool */\n      0x00\n        /* \"NFTFlatten.sol\":66308:66315  _paused */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"NFTFlatten.sol\":66301:66315  return _paused */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":66238:66322  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"NFTFlatten.sol\":40650:40768  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_111:\n        /* \"NFTFlatten.sol\":40713:40720  address */\n      0x00\n        /* \"NFTFlatten.sol\":40739:40761  _requireOwned(tokenId) */\n      tag_245\n        /* \"NFTFlatten.sol\":40753:40760  tokenId */\n      dup3\n        /* \"NFTFlatten.sol\":40739:40752  _requireOwned */\n      tag_182\n        /* \"NFTFlatten.sol\":40739:40761  _requireOwned(tokenId) */\n      jump\t// in\n    tag_245:\n        /* \"NFTFlatten.sol\":40732:40761  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":40650:40768  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":69310:69499  function setAllowList(address[] calldata addresses) external onlyOwner {... */\n    tag_117:\n        /* \"NFTFlatten.sol\":2603:2616  _checkOwner() */\n      tag_247\n        /* \"NFTFlatten.sol\":2603:2614  _checkOwner */\n      tag_221\n        /* \"NFTFlatten.sol\":2603:2616  _checkOwner() */\n      jump\t// in\n    tag_247:\n        /* \"NFTFlatten.sol\":69396:69405  uint256 i */\n      0x00\n        /* \"NFTFlatten.sol\":69391:69493  for (uint256 i = 0; i < addresses.length; i++) {... */\n    tag_249:\n        /* \"NFTFlatten.sol\":69415:69424  addresses */\n      dup3\n      dup3\n        /* \"NFTFlatten.sol\":69415:69431  addresses.length */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":69411:69412  i */\n      dup2\n        /* \"NFTFlatten.sol\":69411:69431  i < addresses.length */\n      lt\n        /* \"NFTFlatten.sol\":69391:69493  for (uint256 i = 0; i < addresses.length; i++) {... */\n      iszero\n      tag_250\n      jumpi\n        /* \"NFTFlatten.sol\":69478:69482  true */\n      0x01\n        /* \"NFTFlatten.sol\":69452:69461  allowList */\n      0x0e\n        /* \"NFTFlatten.sol\":69452:69475  allowList[addresses[i]] */\n      0x00\n        /* \"NFTFlatten.sol\":69462:69471  addresses */\n      dup6\n      dup6\n        /* \"NFTFlatten.sol\":69472:69473  i */\n      dup6\n        /* \"NFTFlatten.sol\":69462:69474  addresses[i] */\n      dup2\n      dup2\n      lt\n      tag_252\n      jumpi\n      tag_253\n      tag_241\n      jump\t// in\n    tag_253:\n    tag_252:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_254\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_254:\n        /* \"NFTFlatten.sol\":69452:69475  allowList[addresses[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"NFTFlatten.sol\":69452:69482  allowList[addresses[i]] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NFTFlatten.sol\":69433:69436  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"NFTFlatten.sol\":69391:69493  for (uint256 i = 0; i < addresses.length; i++) {... */\n      jump(tag_249)\n    tag_250:\n      pop\n        /* \"NFTFlatten.sol\":69310:69499  function setAllowList(address[] calldata addresses) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":40385:40593  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_121:\n        /* \"NFTFlatten.sol\":40448:40455  uint256 */\n      0x00\n        /* \"NFTFlatten.sol\":40488:40489  0 */\n      dup1\n        /* \"NFTFlatten.sol\":40471:40490  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":40471:40476  owner */\n      dup3\n        /* \"NFTFlatten.sol\":40471:40490  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFTFlatten.sol\":40467:40554  if (owner == address(0)) {... */\n      tag_256\n      jumpi\n        /* \"NFTFlatten.sol\":40540:40541  0 */\n      0x00\n        /* \"NFTFlatten.sol\":40513:40543  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTFlatten.sol\":40467:40554  if (owner == address(0)) {... */\n    tag_256:\n        /* \"NFTFlatten.sol\":40570:40579  _balances */\n      0x03\n        /* \"NFTFlatten.sol\":40570:40586  _balances[owner] */\n      0x00\n        /* \"NFTFlatten.sol\":40580:40585  owner */\n      dup4\n        /* \"NFTFlatten.sol\":40570:40586  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NFTFlatten.sol\":40563:40586  return _balances[owner] */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":40385:40593  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":3365:3466  function renounceOwnership() public virtual onlyOwner {... */\n    tag_125:\n        /* \"NFTFlatten.sol\":2603:2616  _checkOwner() */\n      tag_259\n        /* \"NFTFlatten.sol\":2603:2614  _checkOwner */\n      tag_221\n        /* \"NFTFlatten.sol\":2603:2616  _checkOwner() */\n      jump\t// in\n    tag_259:\n        /* \"NFTFlatten.sol\":3429:3459  _transferOwnership(address(0)) */\n      tag_261\n        /* \"NFTFlatten.sol\":3456:3457  0 */\n      0x00\n        /* \"NFTFlatten.sol\":3429:3447  _transferOwnership */\n      tag_262\n        /* \"NFTFlatten.sol\":3429:3459  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_261:\n        /* \"NFTFlatten.sol\":3365:3466  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"NFTFlatten.sol\":69148:69207  function pause() public onlyOwner {... */\n    tag_128:\n        /* \"NFTFlatten.sol\":2603:2616  _checkOwner() */\n      tag_264\n        /* \"NFTFlatten.sol\":2603:2614  _checkOwner */\n      tag_221\n        /* \"NFTFlatten.sol\":2603:2616  _checkOwner() */\n      jump\t// in\n    tag_264:\n        /* \"NFTFlatten.sol\":69192:69200  _pause() */\n      tag_266\n        /* \"NFTFlatten.sol\":69192:69198  _pause */\n      tag_267\n        /* \"NFTFlatten.sol\":69192:69200  _pause() */\n      jump\t// in\n    tag_266:\n        /* \"NFTFlatten.sol\":69148:69207  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"NFTFlatten.sol\":2710:2795  function owner() public view virtual returns (address) {... */\n    tag_131:\n        /* \"NFTFlatten.sol\":2756:2763  address */\n      0x00\n        /* \"NFTFlatten.sol\":2782:2788  _owner */\n      0x0a\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":2775:2788  return _owner */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":2710:2795  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"NFTFlatten.sol\":40983:41076  function symbol() public view virtual returns (string memory) {... */\n    tag_135:\n        /* \"NFTFlatten.sol\":41030:41043  string memory */\n      0x60\n        /* \"NFTFlatten.sol\":41062:41069  _symbol */\n      0x01\n        /* \"NFTFlatten.sol\":41055:41069  return _symbol */\n      dup1\n      sload\n      tag_270\n      swap1\n      tag_175\n      jump\t// in\n    tag_270:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_271\n      swap1\n      tag_175\n      jump\t// in\n    tag_271:\n      dup1\n      iszero\n      tag_272\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_273\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_272)\n    tag_273:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_274:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_274\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_272:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":40983:41076  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"NFTFlatten.sol\":42183:42327  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_141:\n        /* \"NFTFlatten.sol\":42268:42320  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_276\n        /* \"NFTFlatten.sol\":42287:42299  _msgSender() */\n      tag_277\n        /* \"NFTFlatten.sol\":42287:42297  _msgSender */\n      tag_188\n        /* \"NFTFlatten.sol\":42287:42299  _msgSender() */\n      jump\t// in\n    tag_277:\n        /* \"NFTFlatten.sol\":42301:42309  operator */\n      dup4\n        /* \"NFTFlatten.sol\":42311:42319  approved */\n      dup4\n        /* \"NFTFlatten.sol\":42268:42286  _setApprovalForAll */\n      tag_278\n        /* \"NFTFlatten.sol\":42268:42320  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_276:\n        /* \"NFTFlatten.sol\":42183:42327  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":43450:43658  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_146:\n        /* \"NFTFlatten.sol\":43563:43594  transferFrom(from, to, tokenId) */\n      tag_280\n        /* \"NFTFlatten.sol\":43576:43580  from */\n      dup5\n        /* \"NFTFlatten.sol\":43582:43584  to */\n      dup5\n        /* \"NFTFlatten.sol\":43586:43593  tokenId */\n      dup5\n        /* \"NFTFlatten.sol\":43563:43575  transferFrom */\n      tag_71\n        /* \"NFTFlatten.sol\":43563:43594  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_280:\n        /* \"NFTFlatten.sol\":43604:43651  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_281\n        /* \"NFTFlatten.sol\":43627:43631  from */\n      dup5\n        /* \"NFTFlatten.sol\":43633:43635  to */\n      dup5\n        /* \"NFTFlatten.sol\":43637:43644  tokenId */\n      dup5\n        /* \"NFTFlatten.sol\":43646:43650  data */\n      dup5\n        /* \"NFTFlatten.sol\":43604:43626  _checkOnERC721Received */\n      tag_282\n        /* \"NFTFlatten.sol\":43604:43651  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_281:\n        /* \"NFTFlatten.sol\":43450:43658  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":68704:68738  bool public publicMintOpen = false */\n    tag_149:\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"NFTFlatten.sol\":68744:68780  bool public allowistMintOpen = false */\n    tag_153:\n      0x0d\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"NFTFlatten.sol\":41142:41397  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_158:\n        /* \"NFTFlatten.sol\":41206:41219  string memory */\n      0x60\n        /* \"NFTFlatten.sol\":41231:41253  _requireOwned(tokenId) */\n      tag_284\n        /* \"NFTFlatten.sol\":41245:41252  tokenId */\n      dup3\n        /* \"NFTFlatten.sol\":41231:41244  _requireOwned */\n      tag_182\n        /* \"NFTFlatten.sol\":41231:41253  _requireOwned(tokenId) */\n      jump\t// in\n    tag_284:\n      pop\n        /* \"NFTFlatten.sol\":41264:41285  string memory baseURI */\n      0x00\n        /* \"NFTFlatten.sol\":41288:41298  _baseURI() */\n      tag_285\n        /* \"NFTFlatten.sol\":41288:41296  _baseURI */\n      tag_286\n        /* \"NFTFlatten.sol\":41288:41298  _baseURI() */\n      jump\t// in\n    tag_285:\n        /* \"NFTFlatten.sol\":41264:41298  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":41339:41340  0 */\n      0x00\n        /* \"NFTFlatten.sol\":41321:41328  baseURI */\n      dup2\n        /* \"NFTFlatten.sol\":41315:41336  bytes(baseURI).length */\n      mload\n        /* \"NFTFlatten.sol\":41315:41340  bytes(baseURI).length > 0 */\n      gt\n        /* \"NFTFlatten.sol\":41315:41390  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_287\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_288)\n    tag_287:\n        /* \"NFTFlatten.sol\":41357:41364  baseURI */\n      dup1\n        /* \"NFTFlatten.sol\":41366:41384  tokenId.toString() */\n      tag_289\n        /* \"NFTFlatten.sol\":41366:41373  tokenId */\n      dup5\n        /* \"NFTFlatten.sol\":41366:41382  tokenId.toString */\n      tag_290\n        /* \"NFTFlatten.sol\":41366:41384  tokenId.toString() */\n      jump\t// in\n    tag_289:\n        /* \"NFTFlatten.sol\":41343:41385  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_291\n      swap3\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"NFTFlatten.sol\":41315:41390  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_288:\n        /* \"NFTFlatten.sol\":41308:41390  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"NFTFlatten.sol\":41142:41397  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":42393:42546  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_164:\n        /* \"NFTFlatten.sol\":42481:42485  bool */\n      0x00\n        /* \"NFTFlatten.sol\":42504:42522  _operatorApprovals */\n      0x05\n        /* \"NFTFlatten.sol\":42504:42529  _operatorApprovals[owner] */\n      0x00\n        /* \"NFTFlatten.sol\":42523:42528  owner */\n      dup5\n        /* \"NFTFlatten.sol\":42504:42529  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTFlatten.sol\":42504:42539  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"NFTFlatten.sol\":42530:42538  operator */\n      dup4\n        /* \"NFTFlatten.sol\":42504:42539  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"NFTFlatten.sol\":42497:42539  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":42393:42546  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":3615:3830  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_169:\n        /* \"NFTFlatten.sol\":2603:2616  _checkOwner() */\n      tag_295\n        /* \"NFTFlatten.sol\":2603:2614  _checkOwner */\n      tag_221\n        /* \"NFTFlatten.sol\":2603:2616  _checkOwner() */\n      jump\t// in\n    tag_295:\n        /* \"NFTFlatten.sol\":3719:3720  0 */\n      0x00\n        /* \"NFTFlatten.sol\":3699:3721  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":3699:3707  newOwner */\n      dup2\n        /* \"NFTFlatten.sol\":3699:3721  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFTFlatten.sol\":3695:3786  if (newOwner == address(0)) {... */\n      tag_297\n      jumpi\n        /* \"NFTFlatten.sol\":3772:3773  0 */\n      0x00\n        /* \"NFTFlatten.sol\":3744:3775  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTFlatten.sol\":3695:3786  if (newOwner == address(0)) {... */\n    tag_297:\n        /* \"NFTFlatten.sol\":3795:3823  _transferOwnership(newOwner) */\n      tag_299\n        /* \"NFTFlatten.sol\":3814:3822  newOwner */\n      dup2\n        /* \"NFTFlatten.sol\":3795:3813  _transferOwnership */\n      tag_262\n        /* \"NFTFlatten.sol\":3795:3823  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_299:\n        /* \"NFTFlatten.sol\":3615:3830  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":58554:58776  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_172:\n        /* \"NFTFlatten.sol\":58656:58660  bool */\n      0x00\n        /* \"NFTFlatten.sol\":58694:58729  type(IERC721Enumerable).interfaceId */\n      0x780e9d6300000000000000000000000000000000000000000000000000000000\n        /* \"NFTFlatten.sol\":58679:58729  interfaceId == type(IERC721Enumerable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"NFTFlatten.sol\":58679:58690  interfaceId */\n      dup3\n        /* \"NFTFlatten.sol\":58679:58729  interfaceId == type(IERC721Enumerable).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"NFTFlatten.sol\":58679:58769  interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_301\n      jumpi\n      pop\n        /* \"NFTFlatten.sol\":58733:58769  super.supportsInterface(interfaceId) */\n      tag_302\n        /* \"NFTFlatten.sol\":58757:58768  interfaceId */\n      dup3\n        /* \"NFTFlatten.sol\":58733:58756  super.supportsInterface */\n      tag_303\n        /* \"NFTFlatten.sol\":58733:58769  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_302:\n        /* \"NFTFlatten.sol\":58679:58769  interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n    tag_301:\n        /* \"NFTFlatten.sol\":58672:58769  return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":58554:58776  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":54603:54844  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_182:\n        /* \"NFTFlatten.sol\":54666:54673  address */\n      0x00\n        /* \"NFTFlatten.sol\":54685:54698  address owner */\n      dup1\n        /* \"NFTFlatten.sol\":54701:54718  _ownerOf(tokenId) */\n      tag_305\n        /* \"NFTFlatten.sol\":54710:54717  tokenId */\n      dup4\n        /* \"NFTFlatten.sol\":54701:54709  _ownerOf */\n      tag_306\n        /* \"NFTFlatten.sol\":54701:54718  _ownerOf(tokenId) */\n      jump\t// in\n    tag_305:\n        /* \"NFTFlatten.sol\":54685:54718  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":54749:54750  0 */\n      0x00\n        /* \"NFTFlatten.sol\":54732:54751  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":54732:54737  owner */\n      dup2\n        /* \"NFTFlatten.sol\":54732:54751  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFTFlatten.sol\":54728:54816  if (owner == address(0)) {... */\n      tag_307\n      jumpi\n        /* \"NFTFlatten.sol\":54797:54804  tokenId */\n      dup3\n        /* \"NFTFlatten.sol\":54774:54805  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTFlatten.sol\":54728:54816  if (owner == address(0)) {... */\n    tag_307:\n        /* \"NFTFlatten.sol\":54832:54837  owner */\n      dup1\n        /* \"NFTFlatten.sol\":54825:54837  return owner */\n      swap2\n      pop\n      pop\n        /* \"NFTFlatten.sol\":54603:54844  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":44403:44530  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_184:\n        /* \"NFTFlatten.sol\":44473:44480  address */\n      0x00\n        /* \"NFTFlatten.sol\":44499:44514  _tokenApprovals */\n      0x04\n        /* \"NFTFlatten.sol\":44499:44523  _tokenApprovals[tokenId] */\n      0x00\n        /* \"NFTFlatten.sol\":44515:44522  tokenId */\n      dup4\n        /* \"NFTFlatten.sol\":44499:44523  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":44492:44523  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":44403:44530  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":782:878  function _msgSender() internal view virtual returns (address) {... */\n    tag_188:\n        /* \"NFTFlatten.sol\":835:842  address */\n      0x00\n        /* \"NFTFlatten.sol\":861:871  msg.sender */\n      caller\n        /* \"NFTFlatten.sol\":854:871  return msg.sender */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":782:878  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"NFTFlatten.sol\":52883:53003  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_189:\n        /* \"NFTFlatten.sol\":52963:52996  _approve(to, tokenId, auth, true) */\n      tag_312\n        /* \"NFTFlatten.sol\":52972:52974  to */\n      dup4\n        /* \"NFTFlatten.sol\":52976:52983  tokenId */\n      dup4\n        /* \"NFTFlatten.sol\":52985:52989  auth */\n      dup4\n        /* \"NFTFlatten.sol\":52991:52995  true */\n      0x01\n        /* \"NFTFlatten.sol\":52963:52971  _approve */\n      tag_313\n        /* \"NFTFlatten.sol\":52963:52996  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_312:\n        /* \"NFTFlatten.sol\":52883:53003  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":70537:70759  function _update(address to, uint256 tokenId, address auth)... */\n    tag_196:\n        /* \"NFTFlatten.sol\":70690:70697  address */\n      0x00\n        /* \"NFTFlatten.sol\":70720:70752  super._update(to, tokenId, auth) */\n      tag_315\n        /* \"NFTFlatten.sol\":70734:70736  to */\n      dup5\n        /* \"NFTFlatten.sol\":70738:70745  tokenId */\n      dup5\n        /* \"NFTFlatten.sol\":70747:70751  auth */\n      dup5\n        /* \"NFTFlatten.sol\":70720:70733  super._update */\n      tag_316\n        /* \"NFTFlatten.sol\":70720:70752  super._update(to, tokenId, auth) */\n      jump\t// in\n    tag_315:\n        /* \"NFTFlatten.sol\":70713:70752  return super._update(to, tokenId, auth) */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":70537:70759  function _update(address to, uint256 tokenId, address auth)... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":70277:70461  function internalMint() internal {... */\n    tag_208:\n        /* \"NFTFlatten.sol\":70344:70353  maxSupply */\n      sload(0x0c)\n        /* \"NFTFlatten.sol\":70328:70341  totalSupply() */\n      tag_318\n        /* \"NFTFlatten.sol\":70328:70339  totalSupply */\n      tag_64\n        /* \"NFTFlatten.sol\":70328:70341  totalSupply() */\n      jump\t// in\n    tag_318:\n        /* \"NFTFlatten.sol\":70328:70353  totalSupply() < maxSupply */\n      lt\n        /* \"NFTFlatten.sol\":70320:70372  require(totalSupply() < maxSupply, \"Khong con NFT!\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap1\n      tag_321\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_319:\n        /* \"NFTFlatten.sol\":70382:70397  uint256 tokenId */\n      0x00\n        /* \"NFTFlatten.sol\":70400:70412  _nextTokenId */\n      0x0b\n      0x00\n        /* \"NFTFlatten.sol\":70400:70414  _nextTokenId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_322\n      swap1\n      tag_323\n      jump\t// in\n    tag_322:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"NFTFlatten.sol\":70382:70414  uint256 tokenId = _nextTokenId++ */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":70424:70454  _safeMint(msg.sender, tokenId) */\n      tag_324\n        /* \"NFTFlatten.sol\":70434:70444  msg.sender */\n      caller\n        /* \"NFTFlatten.sol\":70446:70453  tokenId */\n      dup3\n        /* \"NFTFlatten.sol\":70424:70433  _safeMint */\n      tag_325\n        /* \"NFTFlatten.sol\":70424:70454  _safeMint(msg.sender, tokenId) */\n      jump\t// in\n    tag_324:\n        /* \"NFTFlatten.sol\":70310:70461  {... */\n      pop\n        /* \"NFTFlatten.sol\":70277:70461  function internalMint() internal {... */\n      jump\t// out\n        /* \"NFTFlatten.sol\":2868:3030  function _checkOwner() internal view virtual {... */\n    tag_221:\n        /* \"NFTFlatten.sol\":2938:2950  _msgSender() */\n      tag_327\n        /* \"NFTFlatten.sol\":2938:2948  _msgSender */\n      tag_188\n        /* \"NFTFlatten.sol\":2938:2950  _msgSender() */\n      jump\t// in\n    tag_327:\n        /* \"NFTFlatten.sol\":2927:2950  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":2927:2934  owner() */\n      tag_328\n        /* \"NFTFlatten.sol\":2927:2932  owner */\n      tag_131\n        /* \"NFTFlatten.sol\":2927:2934  owner() */\n      jump\t// in\n    tag_328:\n        /* \"NFTFlatten.sol\":2927:2950  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTFlatten.sol\":2923:3024  if (owner() != _msgSender()) {... */\n      tag_329\n      jumpi\n        /* \"NFTFlatten.sol\":3000:3012  _msgSender() */\n      tag_330\n        /* \"NFTFlatten.sol\":3000:3010  _msgSender */\n      tag_188\n        /* \"NFTFlatten.sol\":3000:3012  _msgSender() */\n      jump\t// in\n    tag_330:\n        /* \"NFTFlatten.sol\":2973:3013  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_331\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTFlatten.sol\":2923:3024  if (owner() != _msgSender()) {... */\n    tag_329:\n        /* \"NFTFlatten.sol\":2868:3030  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"NFTFlatten.sol\":67098:67215  function _unpause() internal virtual whenPaused {... */\n    tag_232:\n        /* \"NFTFlatten.sol\":66109:66125  _requirePaused() */\n      tag_333\n        /* \"NFTFlatten.sol\":66109:66123  _requirePaused */\n      tag_334\n        /* \"NFTFlatten.sol\":66109:66125  _requirePaused() */\n      jump\t// in\n    tag_333:\n        /* \"NFTFlatten.sol\":67166:67171  false */\n      0x00\n        /* \"NFTFlatten.sol\":67156:67163  _paused */\n      0x0a\n      0x00\n        /* \"NFTFlatten.sol\":67156:67171  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NFTFlatten.sol\":67186:67208  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"NFTFlatten.sol\":67195:67207  _msgSender() */\n      tag_336\n        /* \"NFTFlatten.sol\":67195:67205  _msgSender */\n      tag_188\n        /* \"NFTFlatten.sol\":67195:67207  _msgSender() */\n      jump\t// in\n    tag_336:\n        /* \"NFTFlatten.sol\":67186:67208  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_337\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_337:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"NFTFlatten.sol\":67098:67215  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"NFTFlatten.sol\":3984:4171  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_262:\n        /* \"NFTFlatten.sol\":4057:4073  address oldOwner */\n      0x00\n        /* \"NFTFlatten.sol\":4076:4082  _owner */\n      0x0a\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":4057:4082  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":4101:4109  newOwner */\n      dup2\n        /* \"NFTFlatten.sol\":4092:4098  _owner */\n      0x0a\n      0x01\n        /* \"NFTFlatten.sol\":4092:4109  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NFTFlatten.sol\":4155:4163  newOwner */\n      dup2\n        /* \"NFTFlatten.sol\":4124:4164  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":4145:4153  oldOwner */\n      dup2\n        /* \"NFTFlatten.sol\":4124:4164  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NFTFlatten.sol\":4047:4171  {... */\n      pop\n        /* \"NFTFlatten.sol\":3984:4171  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":66851:66966  function _pause() internal virtual whenNotPaused {... */\n    tag_267:\n        /* \"NFTFlatten.sol\":65862:65881  _requireNotPaused() */\n      tag_340\n        /* \"NFTFlatten.sol\":65862:65879  _requireNotPaused */\n      tag_341\n        /* \"NFTFlatten.sol\":65862:65881  _requireNotPaused() */\n      jump\t// in\n    tag_340:\n        /* \"NFTFlatten.sol\":66920:66924  true */\n      0x01\n        /* \"NFTFlatten.sol\":66910:66917  _paused */\n      0x0a\n      0x00\n        /* \"NFTFlatten.sol\":66910:66924  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NFTFlatten.sol\":66939:66959  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"NFTFlatten.sol\":66946:66958  _msgSender() */\n      tag_343\n        /* \"NFTFlatten.sol\":66946:66956  _msgSender */\n      tag_188\n        /* \"NFTFlatten.sol\":66946:66958  _msgSender() */\n      jump\t// in\n    tag_343:\n        /* \"NFTFlatten.sol\":66939:66959  Paused(_msgSender()) */\n      mload(0x40)\n      tag_344\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"NFTFlatten.sol\":66851:66966  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"NFTFlatten.sol\":54056:54368  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_278:\n        /* \"NFTFlatten.sol\":54183:54184  0 */\n      0x00\n        /* \"NFTFlatten.sol\":54163:54185  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":54163:54171  operator */\n      dup3\n        /* \"NFTFlatten.sol\":54163:54185  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFTFlatten.sol\":54159:54250  if (operator == address(0)) {... */\n      tag_346\n      jumpi\n        /* \"NFTFlatten.sol\":54230:54238  operator */\n      dup2\n        /* \"NFTFlatten.sol\":54208:54239  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTFlatten.sol\":54159:54250  if (operator == address(0)) {... */\n    tag_346:\n        /* \"NFTFlatten.sol\":54297:54305  approved */\n      dup1\n        /* \"NFTFlatten.sol\":54259:54277  _operatorApprovals */\n      0x05\n        /* \"NFTFlatten.sol\":54259:54284  _operatorApprovals[owner] */\n      0x00\n        /* \"NFTFlatten.sol\":54278:54283  owner */\n      dup6\n        /* \"NFTFlatten.sol\":54259:54284  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTFlatten.sol\":54259:54294  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"NFTFlatten.sol\":54285:54293  operator */\n      dup5\n        /* \"NFTFlatten.sol\":54259:54294  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"NFTFlatten.sol\":54259:54305  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NFTFlatten.sol\":54342:54350  operator */\n      dup2\n        /* \"NFTFlatten.sol\":54320:54361  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":54335:54340  owner */\n      dup4\n        /* \"NFTFlatten.sol\":54320:54361  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"NFTFlatten.sol\":54352:54360  approved */\n      dup4\n        /* \"NFTFlatten.sol\":54320:54361  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_348\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_348:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"NFTFlatten.sol\":54056:54368  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":55383:56165  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_282:\n        /* \"NFTFlatten.sol\":55516:55517  0 */\n      0x00\n        /* \"NFTFlatten.sol\":55499:55501  to */\n      dup4\n        /* \"NFTFlatten.sol\":55499:55513  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"NFTFlatten.sol\":55499:55517  to.code.length > 0 */\n      gt\n        /* \"NFTFlatten.sol\":55495:56159  if (to.code.length > 0) {... */\n      iszero\n      tag_350\n      jumpi\n        /* \"NFTFlatten.sol\":55553:55555  to */\n      dup3\n        /* \"NFTFlatten.sol\":55537:55573  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"NFTFlatten.sol\":55574:55586  _msgSender() */\n      tag_351\n        /* \"NFTFlatten.sol\":55574:55584  _msgSender */\n      tag_188\n        /* \"NFTFlatten.sol\":55574:55586  _msgSender() */\n      jump\t// in\n    tag_351:\n        /* \"NFTFlatten.sol\":55588:55592  from */\n      dup7\n        /* \"NFTFlatten.sol\":55594:55601  tokenId */\n      dup6\n        /* \"NFTFlatten.sol\":55603:55607  data */\n      dup6\n        /* \"NFTFlatten.sol\":55537:55608  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_352\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_353\n      jump\t// in\n    tag_352:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_354\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_355\n      swap2\n      swap1\n      tag_356\n      jump\t// in\n    tag_355:\n      0x01\n    tag_354:\n        /* \"NFTFlatten.sol\":55533:56149  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_357\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_362\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_361)\n    tag_362:\n      0x60\n      swap2\n      pop\n    tag_361:\n      pop\n        /* \"NFTFlatten.sol\":55863:55864  0 */\n      0x00\n        /* \"NFTFlatten.sol\":55846:55852  reason */\n      dup2\n        /* \"NFTFlatten.sol\":55846:55859  reason.length */\n      mload\n        /* \"NFTFlatten.sol\":55846:55864  reason.length == 0 */\n      sub\n        /* \"NFTFlatten.sol\":55842:56135  if (reason.length == 0) {... */\n      tag_363\n      jumpi\n        /* \"NFTFlatten.sol\":55917:55919  to */\n      dup4\n        /* \"NFTFlatten.sol\":55895:55920  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_364\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_364:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTFlatten.sol\":55842:56135  if (reason.length == 0) {... */\n    tag_363:\n        /* \"NFTFlatten.sol\":56087:56093  reason */\n      dup1\n        /* \"NFTFlatten.sol\":56081:56094  mload(reason) */\n      mload\n        /* \"NFTFlatten.sol\":56072:56078  reason */\n      dup2\n        /* \"NFTFlatten.sol\":56068:56070  32 */\n      0x20\n        /* \"NFTFlatten.sol\":56064:56079  add(32, reason) */\n      add\n        /* \"NFTFlatten.sol\":56057:56095  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"NFTFlatten.sol\":55533:56149  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_357:\n        /* \"NFTFlatten.sol\":55665:55706  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"NFTFlatten.sol\":55655:55706  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"NFTFlatten.sol\":55655:55661  retval */\n      dup2\n        /* \"NFTFlatten.sol\":55655:55706  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"NFTFlatten.sol\":55651:55781  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_367\n      jumpi\n        /* \"NFTFlatten.sol\":55759:55761  to */\n      dup4\n        /* \"NFTFlatten.sol\":55737:55762  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_368\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_368:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTFlatten.sol\":55651:55781  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_367:\n        /* \"NFTFlatten.sol\":55609:55795  returns (bytes4 retval) {... */\n      pop\n        /* \"NFTFlatten.sol\":55495:56159  if (to.code.length > 0) {... */\n    tag_350:\n        /* \"NFTFlatten.sol\":55383:56165  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":68946:69142  function _baseURI() internal pure override returns (string memory) {... */\n    tag_286:\n        /* \"NFTFlatten.sol\":68998:69011  string memory */\n      0x60\n        /* \"NFTFlatten.sol\":69023:69135  return \"https://emerald-wooden-gamefowl-472.mypinata.cloud/ipfs/QmcrnyLZr4y5tHcz1WmKGLWCYrUTEdC2GUfdkbBWhCn51w/\" */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x67\n      dup2\n      mstore\n      0x20\n      add\n      data_78f91a9492fea23a7cf472b247f10dfd8e130e7ba967cdcca1eb528e0da13077\n      0x67\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":68946:69142  function _baseURI() internal pure override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"NFTFlatten.sol\":36358:37056  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_290:\n        /* \"NFTFlatten.sol\":36414:36427  string memory */\n      0x60\n        /* \"NFTFlatten.sol\":36463:36477  uint256 length */\n      0x00\n        /* \"NFTFlatten.sol\":36500:36501  1 */\n      0x01\n        /* \"NFTFlatten.sol\":36480:36497  Math.log10(value) */\n      tag_371\n        /* \"NFTFlatten.sol\":36491:36496  value */\n      dup5\n        /* \"NFTFlatten.sol\":36480:36490  Math.log10 */\n      tag_372\n        /* \"NFTFlatten.sol\":36480:36497  Math.log10(value) */\n      jump\t// in\n    tag_371:\n        /* \"NFTFlatten.sol\":36480:36501  Math.log10(value) + 1 */\n      add\n        /* \"NFTFlatten.sol\":36463:36501  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":36515:36535  string memory buffer */\n      0x00\n        /* \"NFTFlatten.sol\":36549:36555  length */\n      dup2\n        /* \"NFTFlatten.sol\":36538:36556  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_373\n      jumpi\n      tag_374\n      tag_375\n      jump\t// in\n    tag_374:\n    tag_373:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_376\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_376:\n      pop\n        /* \"NFTFlatten.sol\":36515:36556  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":36570:36581  uint256 ptr */\n      0x00\n        /* \"NFTFlatten.sol\":36696:36702  length */\n      dup3\n        /* \"NFTFlatten.sol\":36692:36694  32 */\n      0x20\n        /* \"NFTFlatten.sol\":36688:36703  add(32, length) */\n      add\n        /* \"NFTFlatten.sol\":36680:36686  buffer */\n      dup3\n        /* \"NFTFlatten.sol\":36676:36704  add(buffer, add(32, length)) */\n      add\n        /* \"NFTFlatten.sol\":36669:36704  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":36731:37013  while (true) {... */\n    tag_377:\n        /* \"NFTFlatten.sol\":36738:36742  true */\n      0x01\n        /* \"NFTFlatten.sol\":36731:37013  while (true) {... */\n      iszero\n      tag_378\n      jumpi\n        /* \"NFTFlatten.sol\":36762:36767  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"NFTFlatten.sol\":36901:36911  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"NFTFlatten.sol\":36896:36898  10 */\n      0x0a\n        /* \"NFTFlatten.sol\":36889:36894  value */\n      dup7\n        /* \"NFTFlatten.sol\":36885:36899  mod(value, 10) */\n      mod\n        /* \"NFTFlatten.sol\":36880:36912  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"NFTFlatten.sol\":36875:36878  ptr */\n      dup2\n        /* \"NFTFlatten.sol\":36867:36913  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"NFTFlatten.sol\":36957:36959  10 */\n      0x0a\n        /* \"NFTFlatten.sol\":36948:36959  value /= 10 */\n      dup6\n      dup2\n      tag_379\n      jumpi\n      tag_380\n      tag_381\n      jump\t// in\n    tag_380:\n    tag_379:\n      div\n      swap5\n      pop\n        /* \"NFTFlatten.sol\":36990:36991  0 */\n      0x00\n        /* \"NFTFlatten.sol\":36981:36986  value */\n      dup6\n        /* \"NFTFlatten.sol\":36981:36991  value == 0 */\n      sub\n        /* \"NFTFlatten.sol\":36731:37013  while (true) {... */\n      tag_377\n        /* \"NFTFlatten.sol\":36977:36998  if (value == 0) break */\n      jumpi\n        /* \"NFTFlatten.sol\":36731:37013  while (true) {... */\n    tag_378:\n        /* \"NFTFlatten.sol\":37033:37039  buffer */\n      dup2\n        /* \"NFTFlatten.sol\":37026:37039  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"NFTFlatten.sol\":36358:37056  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":40026:40326  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_303:\n        /* \"NFTFlatten.sol\":40128:40132  bool */\n      0x00\n        /* \"NFTFlatten.sol\":40178:40203  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"NFTFlatten.sol\":40163:40203  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"NFTFlatten.sol\":40163:40174  interfaceId */\n      dup3\n        /* \"NFTFlatten.sol\":40163:40203  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"NFTFlatten.sol\":40163:40267  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_384\n      jumpi\n      pop\n        /* \"NFTFlatten.sol\":40234:40267  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"NFTFlatten.sol\":40219:40267  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"NFTFlatten.sol\":40219:40230  interfaceId */\n      dup3\n        /* \"NFTFlatten.sol\":40219:40267  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"NFTFlatten.sol\":40163:40267  interfaceId == type(IERC721).interfaceId ||... */\n    tag_384:\n        /* \"NFTFlatten.sol\":40163:40319  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_385\n      jumpi\n      pop\n        /* \"NFTFlatten.sol\":40283:40319  super.supportsInterface(interfaceId) */\n      tag_386\n        /* \"NFTFlatten.sol\":40307:40318  interfaceId */\n      dup3\n        /* \"NFTFlatten.sol\":40283:40306  super.supportsInterface */\n      tag_387\n        /* \"NFTFlatten.sol\":40283:40319  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_386:\n        /* \"NFTFlatten.sol\":40163:40319  interfaceId == type(IERC721).interfaceId ||... */\n    tag_385:\n        /* \"NFTFlatten.sol\":40144:40319  return... */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":40026:40326  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":44172:44287  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_306:\n        /* \"NFTFlatten.sol\":44238:44245  address */\n      0x00\n        /* \"NFTFlatten.sol\":44264:44271  _owners */\n      0x02\n        /* \"NFTFlatten.sol\":44264:44280  _owners[tokenId] */\n      0x00\n        /* \"NFTFlatten.sol\":44272:44279  tokenId */\n      dup4\n        /* \"NFTFlatten.sol\":44264:44280  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":44257:44280  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":44172:44287  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":53185:53847  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_313:\n        /* \"NFTFlatten.sol\":53345:53354  emitEvent */\n      dup1\n        /* \"NFTFlatten.sol\":53345:53376  emitEvent || auth != address(0) */\n      dup1\n      tag_390\n      jumpi\n      pop\n        /* \"NFTFlatten.sol\":53374:53375  0 */\n      0x00\n        /* \"NFTFlatten.sol\":53358:53376  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":53358:53362  auth */\n      dup3\n        /* \"NFTFlatten.sol\":53358:53376  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"NFTFlatten.sol\":53345:53376  emitEvent || auth != address(0) */\n    tag_390:\n        /* \"NFTFlatten.sol\":53341:53801  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_391\n      jumpi\n        /* \"NFTFlatten.sol\":53392:53405  address owner */\n      0x00\n        /* \"NFTFlatten.sol\":53408:53430  _requireOwned(tokenId) */\n      tag_392\n        /* \"NFTFlatten.sol\":53422:53429  tokenId */\n      dup5\n        /* \"NFTFlatten.sol\":53408:53421  _requireOwned */\n      tag_182\n        /* \"NFTFlatten.sol\":53408:53430  _requireOwned(tokenId) */\n      jump\t// in\n    tag_392:\n        /* \"NFTFlatten.sol\":53392:53430  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":53574:53575  0 */\n      0x00\n        /* \"NFTFlatten.sol\":53558:53576  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":53558:53562  auth */\n      dup4\n        /* \"NFTFlatten.sol\":53558:53576  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"NFTFlatten.sol\":53558:53593  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_393\n      jumpi\n      pop\n        /* \"NFTFlatten.sol\":53589:53593  auth */\n      dup3\n        /* \"NFTFlatten.sol\":53580:53593  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":53580:53585  owner */\n      dup2\n        /* \"NFTFlatten.sol\":53580:53593  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"NFTFlatten.sol\":53558:53593  auth != address(0) && owner != auth */\n    tag_393:\n        /* \"NFTFlatten.sol\":53558:53627  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_394\n      jumpi\n      pop\n        /* \"NFTFlatten.sol\":53598:53627  isApprovedForAll(owner, auth) */\n      tag_395\n        /* \"NFTFlatten.sol\":53615:53620  owner */\n      dup2\n        /* \"NFTFlatten.sol\":53622:53626  auth */\n      dup5\n        /* \"NFTFlatten.sol\":53598:53614  isApprovedForAll */\n      tag_164\n        /* \"NFTFlatten.sol\":53598:53627  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_395:\n        /* \"NFTFlatten.sol\":53597:53627  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"NFTFlatten.sol\":53558:53627  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_394:\n        /* \"NFTFlatten.sol\":53554:53696  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_396\n      jumpi\n        /* \"NFTFlatten.sol\":53676:53680  auth */\n      dup3\n        /* \"NFTFlatten.sol\":53654:53681  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_397\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_397:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTFlatten.sol\":53554:53696  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_396:\n        /* \"NFTFlatten.sol\":53714:53723  emitEvent */\n      dup2\n        /* \"NFTFlatten.sol\":53710:53791  if (emitEvent) {... */\n      iszero\n      tag_398\n      jumpi\n        /* \"NFTFlatten.sol\":53768:53775  tokenId */\n      dup4\n        /* \"NFTFlatten.sol\":53764:53766  to */\n      dup6\n        /* \"NFTFlatten.sol\":53748:53776  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":53757:53762  owner */\n      dup3\n        /* \"NFTFlatten.sol\":53748:53776  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"NFTFlatten.sol\":53710:53791  if (emitEvent) {... */\n    tag_398:\n        /* \"NFTFlatten.sol\":53378:53801  {... */\n      pop\n        /* \"NFTFlatten.sol\":53341:53801  if (emitEvent || auth != address(0)) {... */\n    tag_391:\n        /* \"NFTFlatten.sol\":53838:53840  to */\n      dup4\n        /* \"NFTFlatten.sol\":53811:53826  _tokenApprovals */\n      0x04\n        /* \"NFTFlatten.sol\":53811:53835  _tokenApprovals[tokenId] */\n      0x00\n        /* \"NFTFlatten.sol\":53827:53834  tokenId */\n      dup6\n        /* \"NFTFlatten.sol\":53811:53835  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"NFTFlatten.sol\":53811:53840  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NFTFlatten.sol\":53185:53847  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":68300:68504  function _update(... */\n    tag_316:\n        /* \"NFTFlatten.sol\":68439:68446  address */\n      0x00\n        /* \"NFTFlatten.sol\":65862:65881  _requireNotPaused() */\n      tag_400\n        /* \"NFTFlatten.sol\":65862:65879  _requireNotPaused */\n      tag_341\n        /* \"NFTFlatten.sol\":65862:65881  _requireNotPaused() */\n      jump\t// in\n    tag_400:\n        /* \"NFTFlatten.sol\":68465:68497  super._update(to, tokenId, auth) */\n      tag_402\n        /* \"NFTFlatten.sol\":68479:68481  to */\n      dup5\n        /* \"NFTFlatten.sol\":68483:68490  tokenId */\n      dup5\n        /* \"NFTFlatten.sol\":68492:68496  auth */\n      dup5\n        /* \"NFTFlatten.sol\":68465:68478  super._update */\n      tag_403\n        /* \"NFTFlatten.sol\":68465:68497  super._update(to, tokenId, auth) */\n      jump\t// in\n    tag_402:\n        /* \"NFTFlatten.sol\":68458:68497  return super._update(to, tokenId, auth) */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":68300:68504  function _update(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":49098:49198  function _safeMint(address to, uint256 tokenId) internal {... */\n    tag_325:\n        /* \"NFTFlatten.sol\":49165:49191  _safeMint(to, tokenId, \"\") */\n      tag_405\n        /* \"NFTFlatten.sol\":49175:49177  to */\n      dup3\n        /* \"NFTFlatten.sol\":49179:49186  tokenId */\n      dup3\n        /* \"NFTFlatten.sol\":49165:49191  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"NFTFlatten.sol\":49165:49174  _safeMint */\n      tag_406\n        /* \"NFTFlatten.sol\":49165:49191  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n    tag_405:\n        /* \"NFTFlatten.sol\":49098:49198  function _safeMint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":66590:66716  function _requirePaused() internal view virtual {... */\n    tag_334:\n        /* \"NFTFlatten.sol\":66653:66661  paused() */\n      tag_408\n        /* \"NFTFlatten.sol\":66653:66659  paused */\n      tag_106\n        /* \"NFTFlatten.sol\":66653:66661  paused() */\n      jump\t// in\n    tag_408:\n        /* \"NFTFlatten.sol\":66648:66710  if (!paused()) {... */\n      tag_409\n      jumpi\n        /* \"NFTFlatten.sol\":66684:66699  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTFlatten.sol\":66648:66710  if (!paused()) {... */\n    tag_409:\n        /* \"NFTFlatten.sol\":66590:66716  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"NFTFlatten.sol\":66390:66518  function _requireNotPaused() internal view virtual {... */\n    tag_341:\n        /* \"NFTFlatten.sol\":66455:66463  paused() */\n      tag_411\n        /* \"NFTFlatten.sol\":66455:66461  paused */\n      tag_106\n        /* \"NFTFlatten.sol\":66455:66463  paused() */\n      jump\t// in\n    tag_411:\n        /* \"NFTFlatten.sol\":66451:66512  if (paused()) {... */\n      iszero\n      tag_412\n      jumpi\n        /* \"NFTFlatten.sol\":66486:66501  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTFlatten.sol\":66451:66512  if (paused()) {... */\n    tag_412:\n        /* \"NFTFlatten.sol\":66390:66518  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"NFTFlatten.sol\":31575:32491  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_372:\n        /* \"NFTFlatten.sol\":31628:31635  uint256 */\n      0x00\n        /* \"NFTFlatten.sol\":31647:31661  uint256 result */\n      dup1\n        /* \"NFTFlatten.sol\":31664:31665  0 */\n      0x00\n        /* \"NFTFlatten.sol\":31647:31665  uint256 result = 0 */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":31712:31720  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"NFTFlatten.sol\":31703:31708  value */\n      dup4\n        /* \"NFTFlatten.sol\":31703:31720  value >= 10 ** 64 */\n      lt\n        /* \"NFTFlatten.sol\":31699:31802  if (value >= 10 ** 64) {... */\n      tag_414\n      jumpi\n        /* \"NFTFlatten.sol\":31749:31757  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"NFTFlatten.sol\":31740:31757  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_415\n      jumpi\n      tag_416\n      tag_381\n      jump\t// in\n    tag_416:\n    tag_415:\n      div\n      swap3\n      pop\n        /* \"NFTFlatten.sol\":31785:31787  64 */\n      0x40\n        /* \"NFTFlatten.sol\":31775:31787  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":31699:31802  if (value >= 10 ** 64) {... */\n    tag_414:\n        /* \"NFTFlatten.sol\":31828:31836  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"NFTFlatten.sol\":31819:31824  value */\n      dup4\n        /* \"NFTFlatten.sol\":31819:31836  value >= 10 ** 32 */\n      lt\n        /* \"NFTFlatten.sol\":31815:31918  if (value >= 10 ** 32) {... */\n      tag_417\n      jumpi\n        /* \"NFTFlatten.sol\":31865:31873  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"NFTFlatten.sol\":31856:31873  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_418\n      jumpi\n      tag_419\n      tag_381\n      jump\t// in\n    tag_419:\n    tag_418:\n      div\n      swap3\n      pop\n        /* \"NFTFlatten.sol\":31901:31903  32 */\n      0x20\n        /* \"NFTFlatten.sol\":31891:31903  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":31815:31918  if (value >= 10 ** 32) {... */\n    tag_417:\n        /* \"NFTFlatten.sol\":31944:31952  10 ** 16 */\n      0x2386f26fc10000\n        /* \"NFTFlatten.sol\":31935:31940  value */\n      dup4\n        /* \"NFTFlatten.sol\":31935:31952  value >= 10 ** 16 */\n      lt\n        /* \"NFTFlatten.sol\":31931:32034  if (value >= 10 ** 16) {... */\n      tag_420\n      jumpi\n        /* \"NFTFlatten.sol\":31981:31989  10 ** 16 */\n      0x2386f26fc10000\n        /* \"NFTFlatten.sol\":31972:31989  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_421\n      jumpi\n      tag_422\n      tag_381\n      jump\t// in\n    tag_422:\n    tag_421:\n      div\n      swap3\n      pop\n        /* \"NFTFlatten.sol\":32017:32019  16 */\n      0x10\n        /* \"NFTFlatten.sol\":32007:32019  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":31931:32034  if (value >= 10 ** 16) {... */\n    tag_420:\n        /* \"NFTFlatten.sol\":32060:32067  10 ** 8 */\n      0x05f5e100\n        /* \"NFTFlatten.sol\":32051:32056  value */\n      dup4\n        /* \"NFTFlatten.sol\":32051:32067  value >= 10 ** 8 */\n      lt\n        /* \"NFTFlatten.sol\":32047:32147  if (value >= 10 ** 8) {... */\n      tag_423\n      jumpi\n        /* \"NFTFlatten.sol\":32096:32103  10 ** 8 */\n      0x05f5e100\n        /* \"NFTFlatten.sol\":32087:32103  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_424\n      jumpi\n      tag_425\n      tag_381\n      jump\t// in\n    tag_425:\n    tag_424:\n      div\n      swap3\n      pop\n        /* \"NFTFlatten.sol\":32131:32132  8 */\n      0x08\n        /* \"NFTFlatten.sol\":32121:32132  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":32047:32147  if (value >= 10 ** 8) {... */\n    tag_423:\n        /* \"NFTFlatten.sol\":32173:32180  10 ** 4 */\n      0x2710\n        /* \"NFTFlatten.sol\":32164:32169  value */\n      dup4\n        /* \"NFTFlatten.sol\":32164:32180  value >= 10 ** 4 */\n      lt\n        /* \"NFTFlatten.sol\":32160:32260  if (value >= 10 ** 4) {... */\n      tag_426\n      jumpi\n        /* \"NFTFlatten.sol\":32209:32216  10 ** 4 */\n      0x2710\n        /* \"NFTFlatten.sol\":32200:32216  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_427\n      jumpi\n      tag_428\n      tag_381\n      jump\t// in\n    tag_428:\n    tag_427:\n      div\n      swap3\n      pop\n        /* \"NFTFlatten.sol\":32244:32245  4 */\n      0x04\n        /* \"NFTFlatten.sol\":32234:32245  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":32160:32260  if (value >= 10 ** 4) {... */\n    tag_426:\n        /* \"NFTFlatten.sol\":32286:32293  10 ** 2 */\n      0x64\n        /* \"NFTFlatten.sol\":32277:32282  value */\n      dup4\n        /* \"NFTFlatten.sol\":32277:32293  value >= 10 ** 2 */\n      lt\n        /* \"NFTFlatten.sol\":32273:32373  if (value >= 10 ** 2) {... */\n      tag_429\n      jumpi\n        /* \"NFTFlatten.sol\":32322:32329  10 ** 2 */\n      0x64\n        /* \"NFTFlatten.sol\":32313:32329  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_430\n      jumpi\n      tag_431\n      tag_381\n      jump\t// in\n    tag_431:\n    tag_430:\n      div\n      swap3\n      pop\n        /* \"NFTFlatten.sol\":32357:32358  2 */\n      0x02\n        /* \"NFTFlatten.sol\":32347:32358  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":32273:32373  if (value >= 10 ** 2) {... */\n    tag_429:\n        /* \"NFTFlatten.sol\":32399:32406  10 ** 1 */\n      0x0a\n        /* \"NFTFlatten.sol\":32390:32395  value */\n      dup4\n        /* \"NFTFlatten.sol\":32390:32406  value >= 10 ** 1 */\n      lt\n        /* \"NFTFlatten.sol\":32386:32452  if (value >= 10 ** 1) {... */\n      tag_432\n      jumpi\n        /* \"NFTFlatten.sol\":32436:32437  1 */\n      0x01\n        /* \"NFTFlatten.sol\":32426:32437  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":32386:32452  if (value >= 10 ** 1) {... */\n    tag_432:\n        /* \"NFTFlatten.sol\":32478:32484  result */\n      dup1\n        /* \"NFTFlatten.sol\":32471:32484  return result */\n      swap2\n      pop\n      pop\n        /* \"NFTFlatten.sol\":31575:32491  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":19175:19321  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_387:\n        /* \"NFTFlatten.sol\":19251:19255  bool */\n      0x00\n        /* \"NFTFlatten.sol\":19289:19314  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"NFTFlatten.sol\":19274:19314  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"NFTFlatten.sol\":19274:19285  interfaceId */\n      dup3\n        /* \"NFTFlatten.sol\":19274:19314  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"NFTFlatten.sol\":19267:19314  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":19175:19321  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":59637:60262  function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {... */\n    tag_403:\n        /* \"NFTFlatten.sol\":59732:59739  address */\n      0x00\n        /* \"NFTFlatten.sol\":59751:59772  address previousOwner */\n      dup1\n        /* \"NFTFlatten.sol\":59775:59807  super._update(to, tokenId, auth) */\n      tag_435\n        /* \"NFTFlatten.sol\":59789:59791  to */\n      dup6\n        /* \"NFTFlatten.sol\":59793:59800  tokenId */\n      dup6\n        /* \"NFTFlatten.sol\":59802:59806  auth */\n      dup6\n        /* \"NFTFlatten.sol\":59775:59788  super._update */\n      tag_436\n        /* \"NFTFlatten.sol\":59775:59807  super._update(to, tokenId, auth) */\n      jump\t// in\n    tag_435:\n        /* \"NFTFlatten.sol\":59751:59807  address previousOwner = super._update(to, tokenId, auth) */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":59847:59848  0 */\n      0x00\n        /* \"NFTFlatten.sol\":59822:59849  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":59822:59835  previousOwner */\n      dup2\n        /* \"NFTFlatten.sol\":59822:59849  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFTFlatten.sol\":59818:60028  if (previousOwner == address(0)) {... */\n      tag_437\n      jumpi\n        /* \"NFTFlatten.sol\":59865:59905  _addTokenToAllTokensEnumeration(tokenId) */\n      tag_438\n        /* \"NFTFlatten.sol\":59897:59904  tokenId */\n      dup5\n        /* \"NFTFlatten.sol\":59865:59896  _addTokenToAllTokensEnumeration */\n      tag_439\n        /* \"NFTFlatten.sol\":59865:59905  _addTokenToAllTokensEnumeration(tokenId) */\n      jump\t// in\n    tag_438:\n        /* \"NFTFlatten.sol\":59818:60028  if (previousOwner == address(0)) {... */\n      jump(tag_440)\n    tag_437:\n        /* \"NFTFlatten.sol\":59943:59945  to */\n      dup5\n        /* \"NFTFlatten.sol\":59926:59945  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":59926:59939  previousOwner */\n      dup2\n        /* \"NFTFlatten.sol\":59926:59945  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTFlatten.sol\":59922:60028  if (previousOwner != to) {... */\n      tag_441\n      jumpi\n        /* \"NFTFlatten.sol\":59961:60017  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      tag_442\n        /* \"NFTFlatten.sol\":59994:60007  previousOwner */\n      dup2\n        /* \"NFTFlatten.sol\":60009:60016  tokenId */\n      dup6\n        /* \"NFTFlatten.sol\":59961:59993  _removeTokenFromOwnerEnumeration */\n      tag_443\n        /* \"NFTFlatten.sol\":59961:60017  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      jump\t// in\n    tag_442:\n        /* \"NFTFlatten.sol\":59922:60028  if (previousOwner != to) {... */\n    tag_441:\n        /* \"NFTFlatten.sol\":59818:60028  if (previousOwner == address(0)) {... */\n    tag_440:\n        /* \"NFTFlatten.sol\":60055:60056  0 */\n      0x00\n        /* \"NFTFlatten.sol\":60041:60057  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":60041:60043  to */\n      dup6\n        /* \"NFTFlatten.sol\":60041:60057  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFTFlatten.sol\":60037:60225  if (to == address(0)) {... */\n      tag_444\n      jumpi\n        /* \"NFTFlatten.sol\":60073:60118  _removeTokenFromAllTokensEnumeration(tokenId) */\n      tag_445\n        /* \"NFTFlatten.sol\":60110:60117  tokenId */\n      dup5\n        /* \"NFTFlatten.sol\":60073:60109  _removeTokenFromAllTokensEnumeration */\n      tag_446\n        /* \"NFTFlatten.sol\":60073:60118  _removeTokenFromAllTokensEnumeration(tokenId) */\n      jump\t// in\n    tag_445:\n        /* \"NFTFlatten.sol\":60037:60225  if (to == address(0)) {... */\n      jump(tag_447)\n    tag_444:\n        /* \"NFTFlatten.sol\":60156:60158  to */\n      dup5\n        /* \"NFTFlatten.sol\":60139:60158  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":60139:60152  previousOwner */\n      dup2\n        /* \"NFTFlatten.sol\":60139:60158  previousOwner != to */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTFlatten.sol\":60135:60225  if (previousOwner != to) {... */\n      tag_448\n      jumpi\n        /* \"NFTFlatten.sol\":60174:60214  _addTokenToOwnerEnumeration(to, tokenId) */\n      tag_449\n        /* \"NFTFlatten.sol\":60202:60204  to */\n      dup6\n        /* \"NFTFlatten.sol\":60206:60213  tokenId */\n      dup6\n        /* \"NFTFlatten.sol\":60174:60201  _addTokenToOwnerEnumeration */\n      tag_450\n        /* \"NFTFlatten.sol\":60174:60214  _addTokenToOwnerEnumeration(to, tokenId) */\n      jump\t// in\n    tag_449:\n        /* \"NFTFlatten.sol\":60135:60225  if (previousOwner != to) {... */\n    tag_448:\n        /* \"NFTFlatten.sol\":60037:60225  if (to == address(0)) {... */\n    tag_447:\n        /* \"NFTFlatten.sol\":60242:60255  previousOwner */\n      dup1\n        /* \"NFTFlatten.sol\":60235:60255  return previousOwner */\n      swap2\n      pop\n      pop\n        /* \"NFTFlatten.sol\":59637:60262  function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":49419:49601  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_406:\n        /* \"NFTFlatten.sol\":49513:49531  _mint(to, tokenId) */\n      tag_452\n        /* \"NFTFlatten.sol\":49519:49521  to */\n      dup4\n        /* \"NFTFlatten.sol\":49523:49530  tokenId */\n      dup4\n        /* \"NFTFlatten.sol\":49513:49518  _mint */\n      tag_453\n        /* \"NFTFlatten.sol\":49513:49531  _mint(to, tokenId) */\n      jump\t// in\n    tag_452:\n        /* \"NFTFlatten.sol\":49541:49594  _checkOnERC721Received(address(0), to, tokenId, data) */\n      tag_454\n        /* \"NFTFlatten.sol\":49572:49573  0 */\n      0x00\n        /* \"NFTFlatten.sol\":49576:49578  to */\n      dup5\n        /* \"NFTFlatten.sol\":49580:49587  tokenId */\n      dup5\n        /* \"NFTFlatten.sol\":49589:49593  data */\n      dup5\n        /* \"NFTFlatten.sol\":49541:49563  _checkOnERC721Received */\n      tag_282\n        /* \"NFTFlatten.sol\":49541:49594  _checkOnERC721Received(address(0), to, tokenId, data) */\n      jump\t// in\n    tag_454:\n        /* \"NFTFlatten.sol\":49419:49601  function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":47303:48098  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_436:\n        /* \"NFTFlatten.sol\":47389:47396  address */\n      0x00\n        /* \"NFTFlatten.sol\":47408:47420  address from */\n      dup1\n        /* \"NFTFlatten.sol\":47423:47440  _ownerOf(tokenId) */\n      tag_456\n        /* \"NFTFlatten.sol\":47432:47439  tokenId */\n      dup5\n        /* \"NFTFlatten.sol\":47423:47431  _ownerOf */\n      tag_306\n        /* \"NFTFlatten.sol\":47423:47440  _ownerOf(tokenId) */\n      jump\t// in\n    tag_456:\n        /* \"NFTFlatten.sol\":47408:47440  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":47516:47517  0 */\n      0x00\n        /* \"NFTFlatten.sol\":47500:47518  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":47500:47504  auth */\n      dup4\n        /* \"NFTFlatten.sol\":47500:47518  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTFlatten.sol\":47496:47582  if (auth != address(0)) {... */\n      tag_457\n      jumpi\n        /* \"NFTFlatten.sol\":47534:47571  _checkAuthorized(from, auth, tokenId) */\n      tag_458\n        /* \"NFTFlatten.sol\":47551:47555  from */\n      dup2\n        /* \"NFTFlatten.sol\":47557:47561  auth */\n      dup5\n        /* \"NFTFlatten.sol\":47563:47570  tokenId */\n      dup7\n        /* \"NFTFlatten.sol\":47534:47550  _checkAuthorized */\n      tag_459\n        /* \"NFTFlatten.sol\":47534:47571  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_458:\n        /* \"NFTFlatten.sol\":47496:47582  if (auth != address(0)) {... */\n    tag_457:\n        /* \"NFTFlatten.sol\":47642:47643  0 */\n      0x00\n        /* \"NFTFlatten.sol\":47626:47644  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":47626:47630  from */\n      dup2\n        /* \"NFTFlatten.sol\":47626:47644  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTFlatten.sol\":47622:47878  if (from != address(0)) {... */\n      tag_460\n      jumpi\n        /* \"NFTFlatten.sol\":47742:47790  _approve(address(0), tokenId, address(0), false) */\n      tag_461\n        /* \"NFTFlatten.sol\":47759:47760  0 */\n      0x00\n        /* \"NFTFlatten.sol\":47763:47770  tokenId */\n      dup6\n        /* \"NFTFlatten.sol\":47780:47781  0 */\n      0x00\n        /* \"NFTFlatten.sol\":47784:47789  false */\n      dup1\n        /* \"NFTFlatten.sol\":47742:47750  _approve */\n      tag_313\n        /* \"NFTFlatten.sol\":47742:47790  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_461:\n        /* \"NFTFlatten.sol\":47852:47853  1 */\n      0x01\n        /* \"NFTFlatten.sol\":47833:47842  _balances */\n      0x03\n        /* \"NFTFlatten.sol\":47833:47848  _balances[from] */\n      0x00\n        /* \"NFTFlatten.sol\":47843:47847  from */\n      dup4\n        /* \"NFTFlatten.sol\":47833:47848  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"NFTFlatten.sol\":47833:47853  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTFlatten.sol\":47622:47878  if (from != address(0)) {... */\n    tag_460:\n        /* \"NFTFlatten.sol\":47906:47907  0 */\n      0x00\n        /* \"NFTFlatten.sol\":47892:47908  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":47892:47894  to */\n      dup6\n        /* \"NFTFlatten.sol\":47892:47908  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTFlatten.sol\":47888:47995  if (to != address(0)) {... */\n      tag_462\n      jumpi\n        /* \"NFTFlatten.sol\":47969:47970  1 */\n      0x01\n        /* \"NFTFlatten.sol\":47952:47961  _balances */\n      0x03\n        /* \"NFTFlatten.sol\":47952:47965  _balances[to] */\n      0x00\n        /* \"NFTFlatten.sol\":47962:47964  to */\n      dup8\n        /* \"NFTFlatten.sol\":47952:47965  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"NFTFlatten.sol\":47952:47970  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTFlatten.sol\":47888:47995  if (to != address(0)) {... */\n    tag_462:\n        /* \"NFTFlatten.sol\":48024:48026  to */\n      dup5\n        /* \"NFTFlatten.sol\":48005:48012  _owners */\n      0x02\n        /* \"NFTFlatten.sol\":48005:48021  _owners[tokenId] */\n      0x00\n        /* \"NFTFlatten.sol\":48013:48020  tokenId */\n      dup7\n        /* \"NFTFlatten.sol\":48005:48021  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"NFTFlatten.sol\":48005:48026  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"NFTFlatten.sol\":48061:48068  tokenId */\n      dup4\n        /* \"NFTFlatten.sol\":48057:48059  to */\n      dup6\n        /* \"NFTFlatten.sol\":48042:48069  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":48051:48055  from */\n      dup3\n        /* \"NFTFlatten.sol\":48042:48069  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"NFTFlatten.sol\":48087:48091  from */\n      dup1\n        /* \"NFTFlatten.sol\":48080:48091  return from */\n      swap2\n      pop\n      pop\n        /* \"NFTFlatten.sol\":47303:48098  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":60965:61126  function _addTokenToAllTokensEnumeration(uint256 tokenId) private {... */\n    tag_439:\n        /* \"NFTFlatten.sol\":61068:61078  _allTokens */\n      0x08\n        /* \"NFTFlatten.sol\":61068:61085  _allTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":61041:61056  _allTokensIndex */\n      0x09\n        /* \"NFTFlatten.sol\":61041:61065  _allTokensIndex[tokenId] */\n      0x00\n        /* \"NFTFlatten.sol\":61057:61064  tokenId */\n      dup4\n        /* \"NFTFlatten.sol\":61041:61065  _allTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTFlatten.sol\":61041:61085  _allTokensIndex[tokenId] = _allTokens.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTFlatten.sol\":61095:61105  _allTokens */\n      0x08\n        /* \"NFTFlatten.sol\":61111:61118  tokenId */\n      dup2\n        /* \"NFTFlatten.sol\":61095:61119  _allTokens.push(tokenId) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"NFTFlatten.sol\":60965:61126  function _addTokenToAllTokensEnumeration(uint256 tokenId) private {... */\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":61743:62702  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n    tag_443:\n        /* \"NFTFlatten.sol\":62005:62027  uint256 lastTokenIndex */\n      0x00\n        /* \"NFTFlatten.sol\":62030:62045  balanceOf(from) */\n      tag_466\n        /* \"NFTFlatten.sol\":62040:62044  from */\n      dup4\n        /* \"NFTFlatten.sol\":62030:62039  balanceOf */\n      tag_121\n        /* \"NFTFlatten.sol\":62030:62045  balanceOf(from) */\n      jump\t// in\n    tag_466:\n        /* \"NFTFlatten.sol\":62005:62045  uint256 lastTokenIndex = balanceOf(from) */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":62055:62073  uint256 tokenIndex */\n      0x00\n        /* \"NFTFlatten.sol\":62076:62093  _ownedTokensIndex */\n      0x07\n        /* \"NFTFlatten.sol\":62076:62102  _ownedTokensIndex[tokenId] */\n      0x00\n        /* \"NFTFlatten.sol\":62094:62101  tokenId */\n      dup5\n        /* \"NFTFlatten.sol\":62076:62102  _ownedTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NFTFlatten.sol\":62055:62102  uint256 tokenIndex = _ownedTokensIndex[tokenId] */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":62220:62234  lastTokenIndex */\n      dup2\n        /* \"NFTFlatten.sol\":62206:62216  tokenIndex */\n      dup2\n        /* \"NFTFlatten.sol\":62206:62234  tokenIndex != lastTokenIndex */\n      eq\n        /* \"NFTFlatten.sol\":62202:62525  if (tokenIndex != lastTokenIndex) {... */\n      tag_467\n      jumpi\n        /* \"NFTFlatten.sol\":62250:62269  uint256 lastTokenId */\n      0x00\n        /* \"NFTFlatten.sol\":62272:62284  _ownedTokens */\n      0x06\n        /* \"NFTFlatten.sol\":62272:62290  _ownedTokens[from] */\n      0x00\n        /* \"NFTFlatten.sol\":62285:62289  from */\n      dup7\n        /* \"NFTFlatten.sol\":62272:62290  _ownedTokens[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTFlatten.sol\":62272:62306  _ownedTokens[from][lastTokenIndex] */\n      0x00\n        /* \"NFTFlatten.sol\":62291:62305  lastTokenIndex */\n      dup5\n        /* \"NFTFlatten.sol\":62272:62306  _ownedTokens[from][lastTokenIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NFTFlatten.sol\":62250:62306  uint256 lastTokenId = _ownedTokens[from][lastTokenIndex] */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":62354:62365  lastTokenId */\n      dup1\n        /* \"NFTFlatten.sol\":62321:62333  _ownedTokens */\n      0x06\n        /* \"NFTFlatten.sol\":62321:62339  _ownedTokens[from] */\n      0x00\n        /* \"NFTFlatten.sol\":62334:62338  from */\n      dup8\n        /* \"NFTFlatten.sol\":62321:62339  _ownedTokens[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTFlatten.sol\":62321:62351  _ownedTokens[from][tokenIndex] */\n      0x00\n        /* \"NFTFlatten.sol\":62340:62350  tokenIndex */\n      dup5\n        /* \"NFTFlatten.sol\":62321:62351  _ownedTokens[from][tokenIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTFlatten.sol\":62321:62365  _ownedTokens[from][tokenIndex] = lastTokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTFlatten.sol\":62470:62480  tokenIndex */\n      dup2\n        /* \"NFTFlatten.sol\":62437:62454  _ownedTokensIndex */\n      0x07\n        /* \"NFTFlatten.sol\":62437:62467  _ownedTokensIndex[lastTokenId] */\n      0x00\n        /* \"NFTFlatten.sol\":62455:62466  lastTokenId */\n      dup4\n        /* \"NFTFlatten.sol\":62437:62467  _ownedTokensIndex[lastTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTFlatten.sol\":62437:62480  _ownedTokensIndex[lastTokenId] = tokenIndex */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTFlatten.sol\":62236:62525  {... */\n      pop\n        /* \"NFTFlatten.sol\":62202:62525  if (tokenIndex != lastTokenIndex) {... */\n    tag_467:\n        /* \"NFTFlatten.sol\":62618:62635  _ownedTokensIndex */\n      0x07\n        /* \"NFTFlatten.sol\":62618:62644  _ownedTokensIndex[tokenId] */\n      0x00\n        /* \"NFTFlatten.sol\":62636:62643  tokenId */\n      dup5\n        /* \"NFTFlatten.sol\":62618:62644  _ownedTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTFlatten.sol\":62611:62644  delete _ownedTokensIndex[tokenId] */\n      0x00\n      swap1\n      sstore\n        /* \"NFTFlatten.sol\":62661:62673  _ownedTokens */\n      0x06\n        /* \"NFTFlatten.sol\":62661:62679  _ownedTokens[from] */\n      0x00\n        /* \"NFTFlatten.sol\":62674:62678  from */\n      dup6\n        /* \"NFTFlatten.sol\":62661:62679  _ownedTokens[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTFlatten.sol\":62661:62695  _ownedTokens[from][lastTokenIndex] */\n      0x00\n        /* \"NFTFlatten.sol\":62680:62694  lastTokenIndex */\n      dup4\n        /* \"NFTFlatten.sol\":62661:62695  _ownedTokens[from][lastTokenIndex] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTFlatten.sol\":62654:62695  delete _ownedTokens[from][lastTokenIndex] */\n      0x00\n      swap1\n      sstore\n        /* \"NFTFlatten.sol\":61824:62702  {... */\n      pop\n      pop\n        /* \"NFTFlatten.sol\":61743:62702  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":62990:64051  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n    tag_446:\n        /* \"NFTFlatten.sol\":63239:63261  uint256 lastTokenIndex */\n      0x00\n        /* \"NFTFlatten.sol\":63284:63285  1 */\n      0x01\n        /* \"NFTFlatten.sol\":63264:63274  _allTokens */\n      0x08\n        /* \"NFTFlatten.sol\":63264:63281  _allTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":63264:63285  _allTokens.length - 1 */\n      tag_469\n      swap2\n      swap1\n      tag_470\n      jump\t// in\n    tag_469:\n        /* \"NFTFlatten.sol\":63239:63285  uint256 lastTokenIndex = _allTokens.length - 1 */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":63295:63313  uint256 tokenIndex */\n      0x00\n        /* \"NFTFlatten.sol\":63316:63331  _allTokensIndex */\n      0x09\n        /* \"NFTFlatten.sol\":63316:63340  _allTokensIndex[tokenId] */\n      0x00\n        /* \"NFTFlatten.sol\":63332:63339  tokenId */\n      dup5\n        /* \"NFTFlatten.sol\":63316:63340  _allTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"NFTFlatten.sol\":63295:63340  uint256 tokenIndex = _allTokensIndex[tokenId] */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":63662:63681  uint256 lastTokenId */\n      0x00\n        /* \"NFTFlatten.sol\":63684:63694  _allTokens */\n      0x08\n        /* \"NFTFlatten.sol\":63695:63709  lastTokenIndex */\n      dup4\n        /* \"NFTFlatten.sol\":63684:63710  _allTokens[lastTokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_471\n      jumpi\n      tag_472\n      tag_241\n      jump\t// in\n    tag_472:\n    tag_471:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"NFTFlatten.sol\":63662:63710  uint256 lastTokenId = _allTokens[lastTokenIndex] */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":63746:63757  lastTokenId */\n      dup1\n        /* \"NFTFlatten.sol\":63721:63731  _allTokens */\n      0x08\n        /* \"NFTFlatten.sol\":63732:63742  tokenIndex */\n      dup4\n        /* \"NFTFlatten.sol\":63721:63743  _allTokens[tokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_474\n      jumpi\n      tag_475\n      tag_241\n      jump\t// in\n    tag_475:\n    tag_474:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"NFTFlatten.sol\":63721:63757  _allTokens[tokenIndex] = lastTokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTFlatten.sol\":63856:63866  tokenIndex */\n      dup2\n        /* \"NFTFlatten.sol\":63825:63840  _allTokensIndex */\n      0x09\n        /* \"NFTFlatten.sol\":63825:63853  _allTokensIndex[lastTokenId] */\n      0x00\n        /* \"NFTFlatten.sol\":63841:63852  lastTokenId */\n      dup4\n        /* \"NFTFlatten.sol\":63825:63853  _allTokensIndex[lastTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTFlatten.sol\":63825:63866  _allTokensIndex[lastTokenId] = tokenIndex */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTFlatten.sol\":63994:64009  _allTokensIndex */\n      0x09\n        /* \"NFTFlatten.sol\":63994:64018  _allTokensIndex[tokenId] */\n      0x00\n        /* \"NFTFlatten.sol\":64010:64017  tokenId */\n      dup6\n        /* \"NFTFlatten.sol\":63994:64018  _allTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTFlatten.sol\":63987:64018  delete _allTokensIndex[tokenId] */\n      0x00\n      swap1\n      sstore\n        /* \"NFTFlatten.sol\":64028:64038  _allTokens */\n      0x08\n        /* \"NFTFlatten.sol\":64028:64044  _allTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_477\n      jumpi\n      tag_478\n      tag_479\n      jump\t// in\n    tag_478:\n    tag_477:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"NFTFlatten.sol\":63061:64051  {... */\n      pop\n      pop\n      pop\n        /* \"NFTFlatten.sol\":62990:64051  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":60556:60770  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n    tag_450:\n        /* \"NFTFlatten.sol\":60640:60654  uint256 length */\n      0x00\n        /* \"NFTFlatten.sol\":60673:60674  1 */\n      0x01\n        /* \"NFTFlatten.sol\":60657:60670  balanceOf(to) */\n      tag_482\n        /* \"NFTFlatten.sol\":60667:60669  to */\n      dup5\n        /* \"NFTFlatten.sol\":60657:60666  balanceOf */\n      tag_121\n        /* \"NFTFlatten.sol\":60657:60670  balanceOf(to) */\n      jump\t// in\n    tag_482:\n        /* \"NFTFlatten.sol\":60657:60674  balanceOf(to) - 1 */\n      tag_483\n      swap2\n      swap1\n      tag_470\n      jump\t// in\n    tag_483:\n        /* \"NFTFlatten.sol\":60640:60674  uint256 length = balanceOf(to) - 1 */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":60711:60718  tokenId */\n      dup2\n        /* \"NFTFlatten.sol\":60684:60696  _ownedTokens */\n      0x06\n        /* \"NFTFlatten.sol\":60684:60700  _ownedTokens[to] */\n      0x00\n        /* \"NFTFlatten.sol\":60697:60699  to */\n      dup6\n        /* \"NFTFlatten.sol\":60684:60700  _ownedTokens[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTFlatten.sol\":60684:60708  _ownedTokens[to][length] */\n      0x00\n        /* \"NFTFlatten.sol\":60701:60707  length */\n      dup4\n        /* \"NFTFlatten.sol\":60684:60708  _ownedTokens[to][length] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTFlatten.sol\":60684:60718  _ownedTokens[to][length] = tokenId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTFlatten.sol\":60757:60763  length */\n      dup1\n        /* \"NFTFlatten.sol\":60728:60745  _ownedTokensIndex */\n      0x07\n        /* \"NFTFlatten.sol\":60728:60754  _ownedTokensIndex[tokenId] */\n      0x00\n        /* \"NFTFlatten.sol\":60746:60753  tokenId */\n      dup5\n        /* \"NFTFlatten.sol\":60728:60754  _ownedTokensIndex[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"NFTFlatten.sol\":60728:60763  _ownedTokensIndex[tokenId] = length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"NFTFlatten.sol\":60630:60770  {... */\n      pop\n        /* \"NFTFlatten.sol\":60556:60770  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":48420:48747  function _mint(address to, uint256 tokenId) internal {... */\n    tag_453:\n        /* \"NFTFlatten.sol\":48501:48502  0 */\n      0x00\n        /* \"NFTFlatten.sol\":48487:48503  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":48487:48489  to */\n      dup3\n        /* \"NFTFlatten.sol\":48487:48503  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFTFlatten.sol\":48483:48570  if (to == address(0)) {... */\n      tag_485\n      jumpi\n        /* \"NFTFlatten.sol\":48556:48557  0 */\n      0x00\n        /* \"NFTFlatten.sol\":48526:48559  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_486\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_486:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTFlatten.sol\":48483:48570  if (to == address(0)) {... */\n    tag_485:\n        /* \"NFTFlatten.sol\":48579:48600  address previousOwner */\n      0x00\n        /* \"NFTFlatten.sol\":48603:48635  _update(to, tokenId, address(0)) */\n      tag_487\n        /* \"NFTFlatten.sol\":48611:48613  to */\n      dup4\n        /* \"NFTFlatten.sol\":48615:48622  tokenId */\n      dup4\n        /* \"NFTFlatten.sol\":48632:48633  0 */\n      0x00\n        /* \"NFTFlatten.sol\":48603:48610  _update */\n      tag_196\n        /* \"NFTFlatten.sol\":48603:48635  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_487:\n        /* \"NFTFlatten.sol\":48579:48635  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":48674:48675  0 */\n      0x00\n        /* \"NFTFlatten.sol\":48649:48676  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":48649:48662  previousOwner */\n      dup2\n        /* \"NFTFlatten.sol\":48649:48676  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTFlatten.sol\":48645:48741  if (previousOwner != address(0)) {... */\n      tag_488\n      jumpi\n        /* \"NFTFlatten.sol\":48727:48728  0 */\n      0x00\n        /* \"NFTFlatten.sol\":48699:48730  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_489\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_489:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTFlatten.sol\":48645:48741  if (previousOwner != address(0)) {... */\n    tag_488:\n        /* \"NFTFlatten.sol\":48473:48747  {... */\n      pop\n        /* \"NFTFlatten.sol\":48420:48747  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":45547:45915  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_459:\n        /* \"NFTFlatten.sol\":45659:45697  _isAuthorized(owner, spender, tokenId) */\n      tag_491\n        /* \"NFTFlatten.sol\":45673:45678  owner */\n      dup4\n        /* \"NFTFlatten.sol\":45680:45687  spender */\n      dup4\n        /* \"NFTFlatten.sol\":45689:45696  tokenId */\n      dup4\n        /* \"NFTFlatten.sol\":45659:45672  _isAuthorized */\n      tag_492\n        /* \"NFTFlatten.sol\":45659:45697  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_491:\n        /* \"NFTFlatten.sol\":45654:45909  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_493\n      jumpi\n        /* \"NFTFlatten.sol\":45734:45735  0 */\n      0x00\n        /* \"NFTFlatten.sol\":45717:45736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":45717:45722  owner */\n      dup4\n        /* \"NFTFlatten.sol\":45717:45736  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"NFTFlatten.sol\":45713:45899  if (owner == address(0)) {... */\n      tag_494\n      jumpi\n        /* \"NFTFlatten.sol\":45786:45793  tokenId */\n      dup1\n        /* \"NFTFlatten.sol\":45763:45794  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_495\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_495:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTFlatten.sol\":45713:45899  if (owner == address(0)) {... */\n    tag_494:\n        /* \"NFTFlatten.sol\":45867:45874  spender */\n      dup2\n        /* \"NFTFlatten.sol\":45876:45883  tokenId */\n      dup2\n        /* \"NFTFlatten.sol\":45840:45884  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_497\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_497:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"NFTFlatten.sol\":45654:45909  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_493:\n        /* \"NFTFlatten.sol\":45547:45915  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"NFTFlatten.sol\":44841:45113  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_492:\n        /* \"NFTFlatten.sol\":44944:44948  bool */\n      0x00\n        /* \"NFTFlatten.sol\":44998:44999  0 */\n      dup1\n        /* \"NFTFlatten.sol\":44979:45000  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":44979:44986  spender */\n      dup4\n        /* \"NFTFlatten.sol\":44979:45000  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"NFTFlatten.sol\":44979:45106  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_499\n      jumpi\n      pop\n        /* \"NFTFlatten.sol\":45026:45033  spender */\n      dup3\n        /* \"NFTFlatten.sol\":45017:45033  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":45017:45022  owner */\n      dup5\n        /* \"NFTFlatten.sol\":45017:45033  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTFlatten.sol\":45017:45069  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_500\n      jumpi\n      pop\n        /* \"NFTFlatten.sol\":45037:45069  isApprovedForAll(owner, spender) */\n      tag_501\n        /* \"NFTFlatten.sol\":45054:45059  owner */\n      dup5\n        /* \"NFTFlatten.sol\":45061:45068  spender */\n      dup5\n        /* \"NFTFlatten.sol\":45037:45053  isApprovedForAll */\n      tag_164\n        /* \"NFTFlatten.sol\":45037:45069  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_501:\n        /* \"NFTFlatten.sol\":45017:45069  owner == spender || isApprovedForAll(owner, spender) */\n    tag_500:\n        /* \"NFTFlatten.sol\":45017:45105  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_502\n      jumpi\n      pop\n        /* \"NFTFlatten.sol\":45098:45105  spender */\n      dup3\n        /* \"NFTFlatten.sol\":45073:45105  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"NFTFlatten.sol\":45073:45094  _getApproved(tokenId) */\n      tag_503\n        /* \"NFTFlatten.sol\":45086:45093  tokenId */\n      dup4\n        /* \"NFTFlatten.sol\":45073:45085  _getApproved */\n      tag_184\n        /* \"NFTFlatten.sol\":45073:45094  _getApproved(tokenId) */\n      jump\t// in\n    tag_503:\n        /* \"NFTFlatten.sol\":45073:45105  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"NFTFlatten.sol\":45017:45105  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_502:\n        /* \"NFTFlatten.sol\":44979:45106  spender != address(0) &&... */\n    tag_499:\n        /* \"NFTFlatten.sol\":44960:45106  return... */\n      swap1\n      pop\n        /* \"NFTFlatten.sol\":44841:45113  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_504:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_505:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_506:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_507:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_508:\n        /* \"#utility.yul\":561:584   */\n      tag_563\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_507\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_564\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_564:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_509:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_566\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_508\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_41:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_569\n      tag_505\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":833:952   */\n    tag_568:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_570\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_509\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_510:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_511:\n        /* \"#utility.yul\":1268:1289   */\n      tag_573\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_510\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_44:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_575\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_511\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_512:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_513:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_514:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_579:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_579)\n    tag_581:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_515:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_516:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_584\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_512\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":2329:2400   */\n      tag_585\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_513\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_586\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_514\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":2499:2528   */\n      tag_587\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_515\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_49:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_589\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_516\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_517:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_518:\n        /* \"#utility.yul\":3016:3040   */\n      tag_592\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_517\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_593\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_593:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_519:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_595\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_518\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_53:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_598\n      tag_505\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":3292:3411   */\n    tag_597:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_599\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_519\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_520:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_521:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_602\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_520\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_522:\n        /* \"#utility.yul\":3872:3896   */\n      tag_604\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_521\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_56:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_606\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_522\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_523:\n        /* \"#utility.yul\":4210:4234   */\n      tag_608\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_521\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_609\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_609:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_524:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_611\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_523\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_60:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_614\n      tag_505\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":4503:4622   */\n    tag_613:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_615\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_524\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_616\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_519\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5008   */\n    tag_525:\n        /* \"#utility.yul\":4977:5001   */\n      tag_618\n        /* \"#utility.yul\":4995:5000   */\n      dup2\n        /* \"#utility.yul\":4977:5001   */\n      tag_517\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":4972:4975   */\n      dup3\n        /* \"#utility.yul\":4965:5002   */\n      mstore\n        /* \"#utility.yul\":4890:5008   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5014:5236   */\n    tag_66:\n        /* \"#utility.yul\":5107:5111   */\n      0x00\n        /* \"#utility.yul\":5145:5147   */\n      0x20\n        /* \"#utility.yul\":5134:5143   */\n      dup3\n        /* \"#utility.yul\":5130:5148   */\n      add\n        /* \"#utility.yul\":5122:5148   */\n      swap1\n      pop\n        /* \"#utility.yul\":5158:5229   */\n      tag_620\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5215:5224   */\n      dup4\n        /* \"#utility.yul\":5211:5228   */\n      add\n        /* \"#utility.yul\":5202:5208   */\n      dup5\n        /* \"#utility.yul\":5158:5229   */\n      tag_525\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":5014:5236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5242:5861   */\n    tag_70:\n        /* \"#utility.yul\":5319:5325   */\n      0x00\n        /* \"#utility.yul\":5327:5333   */\n      dup1\n        /* \"#utility.yul\":5335:5341   */\n      0x00\n        /* \"#utility.yul\":5384:5386   */\n      0x60\n        /* \"#utility.yul\":5372:5381   */\n      dup5\n        /* \"#utility.yul\":5363:5370   */\n      dup7\n        /* \"#utility.yul\":5359:5382   */\n      sub\n        /* \"#utility.yul\":5355:5387   */\n      slt\n        /* \"#utility.yul\":5352:5471   */\n      iszero\n      tag_622\n      jumpi\n        /* \"#utility.yul\":5390:5469   */\n      tag_623\n      tag_505\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":5352:5471   */\n    tag_622:\n        /* \"#utility.yul\":5510:5511   */\n      0x00\n        /* \"#utility.yul\":5535:5588   */\n      tag_624\n        /* \"#utility.yul\":5580:5587   */\n      dup7\n        /* \"#utility.yul\":5571:5577   */\n      dup3\n        /* \"#utility.yul\":5560:5569   */\n      dup8\n        /* \"#utility.yul\":5556:5578   */\n      add\n        /* \"#utility.yul\":5535:5588   */\n      tag_524\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":5525:5588   */\n      swap4\n      pop\n        /* \"#utility.yul\":5481:5598   */\n      pop\n        /* \"#utility.yul\":5637:5639   */\n      0x20\n        /* \"#utility.yul\":5663:5716   */\n      tag_625\n        /* \"#utility.yul\":5708:5715   */\n      dup7\n        /* \"#utility.yul\":5699:5705   */\n      dup3\n        /* \"#utility.yul\":5688:5697   */\n      dup8\n        /* \"#utility.yul\":5684:5706   */\n      add\n        /* \"#utility.yul\":5663:5716   */\n      tag_524\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":5653:5716   */\n      swap3\n      pop\n        /* \"#utility.yul\":5608:5726   */\n      pop\n        /* \"#utility.yul\":5765:5767   */\n      0x40\n        /* \"#utility.yul\":5791:5844   */\n      tag_626\n        /* \"#utility.yul\":5836:5843   */\n      dup7\n        /* \"#utility.yul\":5827:5833   */\n      dup3\n        /* \"#utility.yul\":5816:5825   */\n      dup8\n        /* \"#utility.yul\":5812:5834   */\n      add\n        /* \"#utility.yul\":5791:5844   */\n      tag_519\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":5781:5844   */\n      swap2\n      pop\n        /* \"#utility.yul\":5736:5854   */\n      pop\n        /* \"#utility.yul\":5242:5861   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5867:6196   */\n    tag_77:\n        /* \"#utility.yul\":5926:5932   */\n      0x00\n        /* \"#utility.yul\":5975:5977   */\n      0x20\n        /* \"#utility.yul\":5963:5972   */\n      dup3\n        /* \"#utility.yul\":5954:5961   */\n      dup5\n        /* \"#utility.yul\":5950:5973   */\n      sub\n        /* \"#utility.yul\":5946:5978   */\n      slt\n        /* \"#utility.yul\":5943:6062   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":5981:6060   */\n      tag_629\n      tag_505\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":5943:6062   */\n    tag_628:\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6126:6179   */\n      tag_630\n        /* \"#utility.yul\":6171:6178   */\n      dup5\n        /* \"#utility.yul\":6162:6168   */\n      dup3\n        /* \"#utility.yul\":6151:6160   */\n      dup6\n        /* \"#utility.yul\":6147:6169   */\n      add\n        /* \"#utility.yul\":6126:6179   */\n      tag_524\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":6116:6179   */\n      swap2\n      pop\n        /* \"#utility.yul\":6072:6189   */\n      pop\n        /* \"#utility.yul\":5867:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_526:\n        /* \"#utility.yul\":6272:6293   */\n      tag_632\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_510\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_633\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_633:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_527:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_635\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_526\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6925   */\n    tag_85:\n        /* \"#utility.yul\":6525:6531   */\n      0x00\n        /* \"#utility.yul\":6533:6539   */\n      dup1\n        /* \"#utility.yul\":6582:6584   */\n      0x40\n        /* \"#utility.yul\":6570:6579   */\n      dup4\n        /* \"#utility.yul\":6561:6568   */\n      dup6\n        /* \"#utility.yul\":6557:6580   */\n      sub\n        /* \"#utility.yul\":6553:6585   */\n      slt\n        /* \"#utility.yul\":6550:6669   */\n      iszero\n      tag_637\n      jumpi\n        /* \"#utility.yul\":6588:6667   */\n      tag_638\n      tag_505\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":6550:6669   */\n    tag_637:\n        /* \"#utility.yul\":6708:6709   */\n      0x00\n        /* \"#utility.yul\":6733:6783   */\n      tag_639\n        /* \"#utility.yul\":6775:6782   */\n      dup6\n        /* \"#utility.yul\":6766:6772   */\n      dup3\n        /* \"#utility.yul\":6755:6764   */\n      dup7\n        /* \"#utility.yul\":6751:6773   */\n      add\n        /* \"#utility.yul\":6733:6783   */\n      tag_527\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":6723:6783   */\n      swap3\n      pop\n        /* \"#utility.yul\":6679:6793   */\n      pop\n        /* \"#utility.yul\":6832:6834   */\n      0x20\n        /* \"#utility.yul\":6858:6908   */\n      tag_640\n        /* \"#utility.yul\":6900:6907   */\n      dup6\n        /* \"#utility.yul\":6891:6897   */\n      dup3\n        /* \"#utility.yul\":6880:6889   */\n      dup7\n        /* \"#utility.yul\":6876:6898   */\n      add\n        /* \"#utility.yul\":6858:6908   */\n      tag_527\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":6848:6908   */\n      swap2\n      pop\n        /* \"#utility.yul\":6803:6918   */\n      pop\n        /* \"#utility.yul\":6463:6925   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6931:7048   */\n    tag_528:\n        /* \"#utility.yul\":7040:7041   */\n      0x00\n        /* \"#utility.yul\":7037:7038   */\n      dup1\n        /* \"#utility.yul\":7030:7042   */\n      revert\n        /* \"#utility.yul\":7054:7171   */\n    tag_529:\n        /* \"#utility.yul\":7163:7164   */\n      0x00\n        /* \"#utility.yul\":7160:7161   */\n      dup1\n        /* \"#utility.yul\":7153:7165   */\n      revert\n        /* \"#utility.yul\":7177:7294   */\n    tag_530:\n        /* \"#utility.yul\":7286:7287   */\n      0x00\n        /* \"#utility.yul\":7283:7284   */\n      dup1\n        /* \"#utility.yul\":7276:7288   */\n      revert\n        /* \"#utility.yul\":7317:7885   */\n    tag_531:\n        /* \"#utility.yul\":7390:7398   */\n      0x00\n        /* \"#utility.yul\":7400:7406   */\n      dup1\n        /* \"#utility.yul\":7450:7453   */\n      dup4\n        /* \"#utility.yul\":7443:7447   */\n      0x1f\n        /* \"#utility.yul\":7435:7441   */\n      dup5\n        /* \"#utility.yul\":7431:7448   */\n      add\n        /* \"#utility.yul\":7427:7454   */\n      slt\n        /* \"#utility.yul\":7417:7539   */\n      tag_645\n      jumpi\n        /* \"#utility.yul\":7458:7537   */\n      tag_646\n      tag_528\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":7417:7539   */\n    tag_645:\n        /* \"#utility.yul\":7571:7577   */\n      dup3\n        /* \"#utility.yul\":7558:7578   */\n      calldataload\n        /* \"#utility.yul\":7548:7578   */\n      swap1\n      pop\n        /* \"#utility.yul\":7601:7619   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7593:7599   */\n      dup2\n        /* \"#utility.yul\":7590:7620   */\n      gt\n        /* \"#utility.yul\":7587:7704   */\n      iszero\n      tag_647\n      jumpi\n        /* \"#utility.yul\":7623:7702   */\n      tag_648\n      tag_529\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":7587:7704   */\n    tag_647:\n        /* \"#utility.yul\":7737:7741   */\n      0x20\n        /* \"#utility.yul\":7729:7735   */\n      dup4\n        /* \"#utility.yul\":7725:7742   */\n      add\n        /* \"#utility.yul\":7713:7742   */\n      swap2\n      pop\n        /* \"#utility.yul\":7791:7794   */\n      dup4\n        /* \"#utility.yul\":7783:7787   */\n      0x20\n        /* \"#utility.yul\":7775:7781   */\n      dup3\n        /* \"#utility.yul\":7771:7788   */\n      mul\n        /* \"#utility.yul\":7761:7769   */\n      dup4\n        /* \"#utility.yul\":7757:7789   */\n      add\n        /* \"#utility.yul\":7754:7795   */\n      gt\n        /* \"#utility.yul\":7751:7879   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":7798:7877   */\n      tag_650\n      tag_530\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":7751:7879   */\n    tag_649:\n        /* \"#utility.yul\":7317:7885   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7891:8450   */\n    tag_116:\n        /* \"#utility.yul\":7977:7983   */\n      0x00\n        /* \"#utility.yul\":7985:7991   */\n      dup1\n        /* \"#utility.yul\":8034:8036   */\n      0x20\n        /* \"#utility.yul\":8022:8031   */\n      dup4\n        /* \"#utility.yul\":8013:8020   */\n      dup6\n        /* \"#utility.yul\":8009:8032   */\n      sub\n        /* \"#utility.yul\":8005:8037   */\n      slt\n        /* \"#utility.yul\":8002:8121   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":8040:8119   */\n      tag_653\n      tag_505\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":8002:8121   */\n    tag_652:\n        /* \"#utility.yul\":8188:8189   */\n      0x00\n        /* \"#utility.yul\":8177:8186   */\n      dup4\n        /* \"#utility.yul\":8173:8190   */\n      add\n        /* \"#utility.yul\":8160:8191   */\n      calldataload\n        /* \"#utility.yul\":8218:8236   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8210:8216   */\n      dup2\n        /* \"#utility.yul\":8207:8237   */\n      gt\n        /* \"#utility.yul\":8204:8321   */\n      iszero\n      tag_654\n      jumpi\n        /* \"#utility.yul\":8240:8319   */\n      tag_655\n      tag_506\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":8204:8321   */\n    tag_654:\n        /* \"#utility.yul\":8353:8433   */\n      tag_656\n        /* \"#utility.yul\":8425:8432   */\n      dup6\n        /* \"#utility.yul\":8416:8422   */\n      dup3\n        /* \"#utility.yul\":8405:8414   */\n      dup7\n        /* \"#utility.yul\":8401:8423   */\n      add\n        /* \"#utility.yul\":8353:8433   */\n      tag_531\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":8335:8433   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":8131:8443   */\n      pop\n        /* \"#utility.yul\":7891:8450   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8456:8924   */\n    tag_140:\n        /* \"#utility.yul\":8521:8527   */\n      0x00\n        /* \"#utility.yul\":8529:8535   */\n      dup1\n        /* \"#utility.yul\":8578:8580   */\n      0x40\n        /* \"#utility.yul\":8566:8575   */\n      dup4\n        /* \"#utility.yul\":8557:8564   */\n      dup6\n        /* \"#utility.yul\":8553:8576   */\n      sub\n        /* \"#utility.yul\":8549:8581   */\n      slt\n        /* \"#utility.yul\":8546:8665   */\n      iszero\n      tag_658\n      jumpi\n        /* \"#utility.yul\":8584:8663   */\n      tag_659\n      tag_505\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":8546:8665   */\n    tag_658:\n        /* \"#utility.yul\":8704:8705   */\n      0x00\n        /* \"#utility.yul\":8729:8782   */\n      tag_660\n        /* \"#utility.yul\":8774:8781   */\n      dup6\n        /* \"#utility.yul\":8765:8771   */\n      dup3\n        /* \"#utility.yul\":8754:8763   */\n      dup7\n        /* \"#utility.yul\":8750:8772   */\n      add\n        /* \"#utility.yul\":8729:8782   */\n      tag_524\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":8719:8782   */\n      swap3\n      pop\n        /* \"#utility.yul\":8675:8792   */\n      pop\n        /* \"#utility.yul\":8831:8833   */\n      0x20\n        /* \"#utility.yul\":8857:8907   */\n      tag_661\n        /* \"#utility.yul\":8899:8906   */\n      dup6\n        /* \"#utility.yul\":8890:8896   */\n      dup3\n        /* \"#utility.yul\":8879:8888   */\n      dup7\n        /* \"#utility.yul\":8875:8897   */\n      add\n        /* \"#utility.yul\":8857:8907   */\n      tag_527\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":8847:8907   */\n      swap2\n      pop\n        /* \"#utility.yul\":8802:8917   */\n      pop\n        /* \"#utility.yul\":8456:8924   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8930:9047   */\n    tag_532:\n        /* \"#utility.yul\":9039:9040   */\n      0x00\n        /* \"#utility.yul\":9036:9037   */\n      dup1\n        /* \"#utility.yul\":9029:9041   */\n      revert\n        /* \"#utility.yul\":9053:9233   */\n    tag_375:\n        /* \"#utility.yul\":9101:9178   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9098:9099   */\n      0x00\n        /* \"#utility.yul\":9091:9179   */\n      mstore\n        /* \"#utility.yul\":9198:9202   */\n      0x41\n        /* \"#utility.yul\":9195:9196   */\n      0x04\n        /* \"#utility.yul\":9188:9203   */\n      mstore\n        /* \"#utility.yul\":9222:9226   */\n      0x24\n        /* \"#utility.yul\":9219:9220   */\n      0x00\n        /* \"#utility.yul\":9212:9227   */\n      revert\n        /* \"#utility.yul\":9239:9520   */\n    tag_533:\n        /* \"#utility.yul\":9322:9349   */\n      tag_665\n        /* \"#utility.yul\":9344:9348   */\n      dup3\n        /* \"#utility.yul\":9322:9349   */\n      tag_515\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":9314:9320   */\n      dup2\n        /* \"#utility.yul\":9310:9350   */\n      add\n        /* \"#utility.yul\":9452:9458   */\n      dup2\n        /* \"#utility.yul\":9440:9450   */\n      dup2\n        /* \"#utility.yul\":9437:9459   */\n      lt\n        /* \"#utility.yul\":9416:9434   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9404:9414   */\n      dup3\n        /* \"#utility.yul\":9401:9435   */\n      gt\n        /* \"#utility.yul\":9398:9460   */\n      or\n        /* \"#utility.yul\":9395:9483   */\n      iszero\n      tag_666\n      jumpi\n        /* \"#utility.yul\":9463:9481   */\n      tag_667\n      tag_375\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":9395:9483   */\n    tag_666:\n        /* \"#utility.yul\":9503:9513   */\n      dup1\n        /* \"#utility.yul\":9499:9501   */\n      0x40\n        /* \"#utility.yul\":9492:9514   */\n      mstore\n        /* \"#utility.yul\":9282:9520   */\n      pop\n        /* \"#utility.yul\":9239:9520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9526:9655   */\n    tag_534:\n        /* \"#utility.yul\":9560:9566   */\n      0x00\n        /* \"#utility.yul\":9587:9607   */\n      tag_669\n      tag_504\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":9577:9607   */\n      swap1\n      pop\n        /* \"#utility.yul\":9616:9649   */\n      tag_670\n        /* \"#utility.yul\":9644:9648   */\n      dup3\n        /* \"#utility.yul\":9636:9642   */\n      dup3\n        /* \"#utility.yul\":9616:9649   */\n      tag_533\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":9526:9655   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9661:9968   */\n    tag_535:\n        /* \"#utility.yul\":9722:9726   */\n      0x00\n        /* \"#utility.yul\":9812:9830   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9804:9810   */\n      dup3\n        /* \"#utility.yul\":9801:9831   */\n      gt\n        /* \"#utility.yul\":9798:9854   */\n      iszero\n      tag_672\n      jumpi\n        /* \"#utility.yul\":9834:9852   */\n      tag_673\n      tag_375\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":9798:9854   */\n    tag_672:\n        /* \"#utility.yul\":9872:9901   */\n      tag_674\n        /* \"#utility.yul\":9894:9900   */\n      dup3\n        /* \"#utility.yul\":9872:9901   */\n      tag_515\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":9864:9901   */\n      swap1\n      pop\n        /* \"#utility.yul\":9956:9960   */\n      0x20\n        /* \"#utility.yul\":9950:9954   */\n      dup2\n        /* \"#utility.yul\":9946:9961   */\n      add\n        /* \"#utility.yul\":9938:9961   */\n      swap1\n      pop\n        /* \"#utility.yul\":9661:9968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9974:10120   */\n    tag_536:\n        /* \"#utility.yul\":10071:10077   */\n      dup3\n        /* \"#utility.yul\":10066:10069   */\n      dup2\n        /* \"#utility.yul\":10061:10064   */\n      dup4\n        /* \"#utility.yul\":10048:10078   */\n      calldatacopy\n        /* \"#utility.yul\":10112:10113   */\n      0x00\n        /* \"#utility.yul\":10103:10109   */\n      dup4\n        /* \"#utility.yul\":10098:10101   */\n      dup4\n        /* \"#utility.yul\":10094:10110   */\n      add\n        /* \"#utility.yul\":10087:10114   */\n      mstore\n        /* \"#utility.yul\":9974:10120   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10126:10549   */\n    tag_537:\n        /* \"#utility.yul\":10203:10208   */\n      0x00\n        /* \"#utility.yul\":10228:10293   */\n      tag_677\n        /* \"#utility.yul\":10244:10292   */\n      tag_678\n        /* \"#utility.yul\":10285:10291   */\n      dup5\n        /* \"#utility.yul\":10244:10292   */\n      tag_535\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":10228:10293   */\n      tag_534\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":10219:10293   */\n      swap1\n      pop\n        /* \"#utility.yul\":10316:10322   */\n      dup3\n        /* \"#utility.yul\":10309:10314   */\n      dup2\n        /* \"#utility.yul\":10302:10323   */\n      mstore\n        /* \"#utility.yul\":10354:10358   */\n      0x20\n        /* \"#utility.yul\":10347:10352   */\n      dup2\n        /* \"#utility.yul\":10343:10359   */\n      add\n        /* \"#utility.yul\":10392:10395   */\n      dup5\n        /* \"#utility.yul\":10383:10389   */\n      dup5\n        /* \"#utility.yul\":10378:10381   */\n      dup5\n        /* \"#utility.yul\":10374:10390   */\n      add\n        /* \"#utility.yul\":10371:10396   */\n      gt\n        /* \"#utility.yul\":10368:10480   */\n      iszero\n      tag_679\n      jumpi\n        /* \"#utility.yul\":10399:10478   */\n      tag_680\n      tag_532\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":10368:10480   */\n    tag_679:\n        /* \"#utility.yul\":10489:10543   */\n      tag_681\n        /* \"#utility.yul\":10536:10542   */\n      dup5\n        /* \"#utility.yul\":10531:10534   */\n      dup3\n        /* \"#utility.yul\":10526:10529   */\n      dup6\n        /* \"#utility.yul\":10489:10543   */\n      tag_536\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":10209:10549   */\n      pop\n        /* \"#utility.yul\":10126:10549   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10568:10906   */\n    tag_538:\n        /* \"#utility.yul\":10623:10628   */\n      0x00\n        /* \"#utility.yul\":10672:10675   */\n      dup3\n        /* \"#utility.yul\":10665:10669   */\n      0x1f\n        /* \"#utility.yul\":10657:10663   */\n      dup4\n        /* \"#utility.yul\":10653:10670   */\n      add\n        /* \"#utility.yul\":10649:10676   */\n      slt\n        /* \"#utility.yul\":10639:10761   */\n      tag_683\n      jumpi\n        /* \"#utility.yul\":10680:10759   */\n      tag_684\n      tag_528\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":10639:10761   */\n    tag_683:\n        /* \"#utility.yul\":10797:10803   */\n      dup2\n        /* \"#utility.yul\":10784:10804   */\n      calldataload\n        /* \"#utility.yul\":10822:10900   */\n      tag_685\n        /* \"#utility.yul\":10896:10899   */\n      dup5\n        /* \"#utility.yul\":10888:10894   */\n      dup3\n        /* \"#utility.yul\":10881:10885   */\n      0x20\n        /* \"#utility.yul\":10873:10879   */\n      dup7\n        /* \"#utility.yul\":10869:10886   */\n      add\n        /* \"#utility.yul\":10822:10900   */\n      tag_537\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":10813:10900   */\n      swap2\n      pop\n        /* \"#utility.yul\":10629:10906   */\n      pop\n        /* \"#utility.yul\":10568:10906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10912:11855   */\n    tag_145:\n        /* \"#utility.yul\":11007:11013   */\n      0x00\n        /* \"#utility.yul\":11015:11021   */\n      dup1\n        /* \"#utility.yul\":11023:11029   */\n      0x00\n        /* \"#utility.yul\":11031:11037   */\n      dup1\n        /* \"#utility.yul\":11080:11083   */\n      0x80\n        /* \"#utility.yul\":11068:11077   */\n      dup6\n        /* \"#utility.yul\":11059:11066   */\n      dup8\n        /* \"#utility.yul\":11055:11078   */\n      sub\n        /* \"#utility.yul\":11051:11084   */\n      slt\n        /* \"#utility.yul\":11048:11168   */\n      iszero\n      tag_687\n      jumpi\n        /* \"#utility.yul\":11087:11166   */\n      tag_688\n      tag_505\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":11048:11168   */\n    tag_687:\n        /* \"#utility.yul\":11207:11208   */\n      0x00\n        /* \"#utility.yul\":11232:11285   */\n      tag_689\n        /* \"#utility.yul\":11277:11284   */\n      dup8\n        /* \"#utility.yul\":11268:11274   */\n      dup3\n        /* \"#utility.yul\":11257:11266   */\n      dup9\n        /* \"#utility.yul\":11253:11275   */\n      add\n        /* \"#utility.yul\":11232:11285   */\n      tag_524\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":11222:11285   */\n      swap5\n      pop\n        /* \"#utility.yul\":11178:11295   */\n      pop\n        /* \"#utility.yul\":11334:11336   */\n      0x20\n        /* \"#utility.yul\":11360:11413   */\n      tag_690\n        /* \"#utility.yul\":11405:11412   */\n      dup8\n        /* \"#utility.yul\":11396:11402   */\n      dup3\n        /* \"#utility.yul\":11385:11394   */\n      dup9\n        /* \"#utility.yul\":11381:11403   */\n      add\n        /* \"#utility.yul\":11360:11413   */\n      tag_524\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":11350:11413   */\n      swap4\n      pop\n        /* \"#utility.yul\":11305:11423   */\n      pop\n        /* \"#utility.yul\":11462:11464   */\n      0x40\n        /* \"#utility.yul\":11488:11541   */\n      tag_691\n        /* \"#utility.yul\":11533:11540   */\n      dup8\n        /* \"#utility.yul\":11524:11530   */\n      dup3\n        /* \"#utility.yul\":11513:11522   */\n      dup9\n        /* \"#utility.yul\":11509:11531   */\n      add\n        /* \"#utility.yul\":11488:11541   */\n      tag_519\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":11478:11541   */\n      swap3\n      pop\n        /* \"#utility.yul\":11433:11551   */\n      pop\n        /* \"#utility.yul\":11618:11620   */\n      0x60\n        /* \"#utility.yul\":11607:11616   */\n      dup6\n        /* \"#utility.yul\":11603:11621   */\n      add\n        /* \"#utility.yul\":11590:11622   */\n      calldataload\n        /* \"#utility.yul\":11649:11667   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11641:11647   */\n      dup2\n        /* \"#utility.yul\":11638:11668   */\n      gt\n        /* \"#utility.yul\":11635:11752   */\n      iszero\n      tag_692\n      jumpi\n        /* \"#utility.yul\":11671:11750   */\n      tag_693\n      tag_506\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":11635:11752   */\n    tag_692:\n        /* \"#utility.yul\":11776:11838   */\n      tag_694\n        /* \"#utility.yul\":11830:11837   */\n      dup8\n        /* \"#utility.yul\":11821:11827   */\n      dup3\n        /* \"#utility.yul\":11810:11819   */\n      dup9\n        /* \"#utility.yul\":11806:11828   */\n      add\n        /* \"#utility.yul\":11776:11838   */\n      tag_538\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":11766:11838   */\n      swap2\n      pop\n        /* \"#utility.yul\":11561:11848   */\n      pop\n        /* \"#utility.yul\":10912:11855   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11861:12335   */\n    tag_163:\n        /* \"#utility.yul\":11929:11935   */\n      0x00\n        /* \"#utility.yul\":11937:11943   */\n      dup1\n        /* \"#utility.yul\":11986:11988   */\n      0x40\n        /* \"#utility.yul\":11974:11983   */\n      dup4\n        /* \"#utility.yul\":11965:11972   */\n      dup6\n        /* \"#utility.yul\":11961:11984   */\n      sub\n        /* \"#utility.yul\":11957:11989   */\n      slt\n        /* \"#utility.yul\":11954:12073   */\n      iszero\n      tag_696\n      jumpi\n        /* \"#utility.yul\":11992:12071   */\n      tag_697\n      tag_505\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":11954:12073   */\n    tag_696:\n        /* \"#utility.yul\":12112:12113   */\n      0x00\n        /* \"#utility.yul\":12137:12190   */\n      tag_698\n        /* \"#utility.yul\":12182:12189   */\n      dup6\n        /* \"#utility.yul\":12173:12179   */\n      dup3\n        /* \"#utility.yul\":12162:12171   */\n      dup7\n        /* \"#utility.yul\":12158:12180   */\n      add\n        /* \"#utility.yul\":12137:12190   */\n      tag_524\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":12127:12190   */\n      swap3\n      pop\n        /* \"#utility.yul\":12083:12200   */\n      pop\n        /* \"#utility.yul\":12239:12241   */\n      0x20\n        /* \"#utility.yul\":12265:12318   */\n      tag_699\n        /* \"#utility.yul\":12310:12317   */\n      dup6\n        /* \"#utility.yul\":12301:12307   */\n      dup3\n        /* \"#utility.yul\":12290:12299   */\n      dup7\n        /* \"#utility.yul\":12286:12308   */\n      add\n        /* \"#utility.yul\":12265:12318   */\n      tag_524\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":12255:12318   */\n      swap2\n      pop\n        /* \"#utility.yul\":12210:12328   */\n      pop\n        /* \"#utility.yul\":11861:12335   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12341:12521   */\n    tag_539:\n        /* \"#utility.yul\":12389:12466   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12386:12387   */\n      0x00\n        /* \"#utility.yul\":12379:12467   */\n      mstore\n        /* \"#utility.yul\":12486:12490   */\n      0x22\n        /* \"#utility.yul\":12483:12484   */\n      0x04\n        /* \"#utility.yul\":12476:12491   */\n      mstore\n        /* \"#utility.yul\":12510:12514   */\n      0x24\n        /* \"#utility.yul\":12507:12508   */\n      0x00\n        /* \"#utility.yul\":12500:12515   */\n      revert\n        /* \"#utility.yul\":12527:12847   */\n    tag_175:\n        /* \"#utility.yul\":12571:12577   */\n      0x00\n        /* \"#utility.yul\":12608:12609   */\n      0x02\n        /* \"#utility.yul\":12602:12606   */\n      dup3\n        /* \"#utility.yul\":12598:12610   */\n      div\n        /* \"#utility.yul\":12588:12610   */\n      swap1\n      pop\n        /* \"#utility.yul\":12655:12656   */\n      0x01\n        /* \"#utility.yul\":12649:12653   */\n      dup3\n        /* \"#utility.yul\":12645:12657   */\n      and\n        /* \"#utility.yul\":12676:12694   */\n      dup1\n        /* \"#utility.yul\":12666:12747   */\n      tag_702\n      jumpi\n        /* \"#utility.yul\":12732:12736   */\n      0x7f\n        /* \"#utility.yul\":12724:12730   */\n      dup3\n        /* \"#utility.yul\":12720:12737   */\n      and\n        /* \"#utility.yul\":12710:12737   */\n      swap2\n      pop\n        /* \"#utility.yul\":12666:12747   */\n    tag_702:\n        /* \"#utility.yul\":12794:12796   */\n      0x20\n        /* \"#utility.yul\":12786:12792   */\n      dup3\n        /* \"#utility.yul\":12783:12797   */\n      lt\n        /* \"#utility.yul\":12763:12781   */\n      dup2\n        /* \"#utility.yul\":12760:12798   */\n      sub\n        /* \"#utility.yul\":12757:12841   */\n      tag_703\n      jumpi\n        /* \"#utility.yul\":12813:12831   */\n      tag_704\n      tag_539\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":12757:12841   */\n    tag_703:\n        /* \"#utility.yul\":12578:12847   */\n      pop\n        /* \"#utility.yul\":12527:12847   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12853:13295   */\n    tag_199:\n        /* \"#utility.yul\":13002:13006   */\n      0x00\n        /* \"#utility.yul\":13040:13042   */\n      0x60\n        /* \"#utility.yul\":13029:13038   */\n      dup3\n        /* \"#utility.yul\":13025:13043   */\n      add\n        /* \"#utility.yul\":13017:13043   */\n      swap1\n      pop\n        /* \"#utility.yul\":13053:13124   */\n      tag_706\n        /* \"#utility.yul\":13121:13122   */\n      0x00\n        /* \"#utility.yul\":13110:13119   */\n      dup4\n        /* \"#utility.yul\":13106:13123   */\n      add\n        /* \"#utility.yul\":13097:13103   */\n      dup7\n        /* \"#utility.yul\":13053:13124   */\n      tag_522\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":13134:13206   */\n      tag_707\n        /* \"#utility.yul\":13202:13204   */\n      0x20\n        /* \"#utility.yul\":13191:13200   */\n      dup4\n        /* \"#utility.yul\":13187:13205   */\n      add\n        /* \"#utility.yul\":13178:13184   */\n      dup6\n        /* \"#utility.yul\":13134:13206   */\n      tag_525\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":13216:13288   */\n      tag_708\n        /* \"#utility.yul\":13284:13286   */\n      0x40\n        /* \"#utility.yul\":13273:13282   */\n      dup4\n        /* \"#utility.yul\":13269:13287   */\n      add\n        /* \"#utility.yul\":13260:13266   */\n      dup5\n        /* \"#utility.yul\":13216:13288   */\n      tag_522\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":12853:13295   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13301:13469   */\n    tag_540:\n        /* \"#utility.yul\":13441:13461   */\n      0x5075626c6963204d696e7420436c6f7365640000000000000000000000000000\n        /* \"#utility.yul\":13437:13438   */\n      0x00\n        /* \"#utility.yul\":13429:13435   */\n      dup3\n        /* \"#utility.yul\":13425:13439   */\n      add\n        /* \"#utility.yul\":13418:13462   */\n      mstore\n        /* \"#utility.yul\":13301:13469   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13475:13841   */\n    tag_541:\n        /* \"#utility.yul\":13617:13620   */\n      0x00\n        /* \"#utility.yul\":13638:13705   */\n      tag_711\n        /* \"#utility.yul\":13702:13704   */\n      0x12\n        /* \"#utility.yul\":13697:13700   */\n      dup4\n        /* \"#utility.yul\":13638:13705   */\n      tag_513\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":13631:13705   */\n      swap2\n      pop\n        /* \"#utility.yul\":13714:13807   */\n      tag_712\n        /* \"#utility.yul\":13803:13806   */\n      dup3\n        /* \"#utility.yul\":13714:13807   */\n      tag_540\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":13832:13834   */\n      0x20\n        /* \"#utility.yul\":13827:13830   */\n      dup3\n        /* \"#utility.yul\":13823:13835   */\n      add\n        /* \"#utility.yul\":13816:13835   */\n      swap1\n      pop\n        /* \"#utility.yul\":13475:13841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13847:14266   */\n    tag_203:\n        /* \"#utility.yul\":14013:14017   */\n      0x00\n        /* \"#utility.yul\":14051:14053   */\n      0x20\n        /* \"#utility.yul\":14040:14049   */\n      dup3\n        /* \"#utility.yul\":14036:14054   */\n      add\n        /* \"#utility.yul\":14028:14054   */\n      swap1\n      pop\n        /* \"#utility.yul\":14100:14109   */\n      dup2\n        /* \"#utility.yul\":14094:14098   */\n      dup2\n        /* \"#utility.yul\":14090:14110   */\n      sub\n        /* \"#utility.yul\":14086:14087   */\n      0x00\n        /* \"#utility.yul\":14075:14084   */\n      dup4\n        /* \"#utility.yul\":14071:14088   */\n      add\n        /* \"#utility.yul\":14064:14111   */\n      mstore\n        /* \"#utility.yul\":14128:14259   */\n      tag_714\n        /* \"#utility.yul\":14254:14258   */\n      dup2\n        /* \"#utility.yul\":14128:14259   */\n      tag_541\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":14120:14259   */\n      swap1\n      pop\n        /* \"#utility.yul\":13847:14266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14272:14435   */\n    tag_542:\n        /* \"#utility.yul\":14412:14427   */\n      0x4b686f6e67206475207469656e00000000000000000000000000000000000000\n        /* \"#utility.yul\":14408:14409   */\n      0x00\n        /* \"#utility.yul\":14400:14406   */\n      dup3\n        /* \"#utility.yul\":14396:14410   */\n      add\n        /* \"#utility.yul\":14389:14428   */\n      mstore\n        /* \"#utility.yul\":14272:14435   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14441:14807   */\n    tag_543:\n        /* \"#utility.yul\":14583:14586   */\n      0x00\n        /* \"#utility.yul\":14604:14671   */\n      tag_717\n        /* \"#utility.yul\":14668:14670   */\n      0x0d\n        /* \"#utility.yul\":14663:14666   */\n      dup4\n        /* \"#utility.yul\":14604:14671   */\n      tag_513\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":14597:14671   */\n      swap2\n      pop\n        /* \"#utility.yul\":14680:14773   */\n      tag_718\n        /* \"#utility.yul\":14769:14772   */\n      dup3\n        /* \"#utility.yul\":14680:14773   */\n      tag_542\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":14798:14800   */\n      0x20\n        /* \"#utility.yul\":14793:14796   */\n      dup3\n        /* \"#utility.yul\":14789:14801   */\n      add\n        /* \"#utility.yul\":14782:14801   */\n      swap1\n      pop\n        /* \"#utility.yul\":14441:14807   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14813:15232   */\n    tag_206:\n        /* \"#utility.yul\":14979:14983   */\n      0x00\n        /* \"#utility.yul\":15017:15019   */\n      0x20\n        /* \"#utility.yul\":15006:15015   */\n      dup3\n        /* \"#utility.yul\":15002:15020   */\n      add\n        /* \"#utility.yul\":14994:15020   */\n      swap1\n      pop\n        /* \"#utility.yul\":15066:15075   */\n      dup2\n        /* \"#utility.yul\":15060:15064   */\n      dup2\n        /* \"#utility.yul\":15056:15076   */\n      sub\n        /* \"#utility.yul\":15052:15053   */\n      0x00\n        /* \"#utility.yul\":15041:15050   */\n      dup4\n        /* \"#utility.yul\":15037:15054   */\n      add\n        /* \"#utility.yul\":15030:15077   */\n      mstore\n        /* \"#utility.yul\":15094:15225   */\n      tag_720\n        /* \"#utility.yul\":15220:15224   */\n      dup2\n        /* \"#utility.yul\":15094:15225   */\n      tag_543\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":15086:15225   */\n      swap1\n      pop\n        /* \"#utility.yul\":14813:15232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15238:15408   */\n    tag_544:\n        /* \"#utility.yul\":15378:15400   */\n      0x416c6c6f77697374204d696e7420436c6f736564000000000000000000000000\n        /* \"#utility.yul\":15374:15375   */\n      0x00\n        /* \"#utility.yul\":15366:15372   */\n      dup3\n        /* \"#utility.yul\":15362:15376   */\n      add\n        /* \"#utility.yul\":15355:15401   */\n      mstore\n        /* \"#utility.yul\":15238:15408   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15414:15780   */\n    tag_545:\n        /* \"#utility.yul\":15556:15559   */\n      0x00\n        /* \"#utility.yul\":15577:15644   */\n      tag_723\n        /* \"#utility.yul\":15641:15643   */\n      0x14\n        /* \"#utility.yul\":15636:15639   */\n      dup4\n        /* \"#utility.yul\":15577:15644   */\n      tag_513\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":15570:15644   */\n      swap2\n      pop\n        /* \"#utility.yul\":15653:15746   */\n      tag_724\n        /* \"#utility.yul\":15742:15745   */\n      dup3\n        /* \"#utility.yul\":15653:15746   */\n      tag_544\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":15771:15773   */\n      0x20\n        /* \"#utility.yul\":15766:15769   */\n      dup3\n        /* \"#utility.yul\":15762:15774   */\n      add\n        /* \"#utility.yul\":15755:15774   */\n      swap1\n      pop\n        /* \"#utility.yul\":15414:15780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15786:16205   */\n    tag_212:\n        /* \"#utility.yul\":15952:15956   */\n      0x00\n        /* \"#utility.yul\":15990:15992   */\n      0x20\n        /* \"#utility.yul\":15979:15988   */\n      dup3\n        /* \"#utility.yul\":15975:15993   */\n      add\n        /* \"#utility.yul\":15967:15993   */\n      swap1\n      pop\n        /* \"#utility.yul\":16039:16048   */\n      dup2\n        /* \"#utility.yul\":16033:16037   */\n      dup2\n        /* \"#utility.yul\":16029:16049   */\n      sub\n        /* \"#utility.yul\":16025:16026   */\n      0x00\n        /* \"#utility.yul\":16014:16023   */\n      dup4\n        /* \"#utility.yul\":16010:16027   */\n      add\n        /* \"#utility.yul\":16003:16050   */\n      mstore\n        /* \"#utility.yul\":16067:16198   */\n      tag_726\n        /* \"#utility.yul\":16193:16197   */\n      dup2\n        /* \"#utility.yul\":16067:16198   */\n      tag_545\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":16059:16198   */\n      swap1\n      pop\n        /* \"#utility.yul\":15786:16205   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16211:16380   */\n    tag_546:\n        /* \"#utility.yul\":16351:16372   */\n      0x42616e206b686f6e6720636f20717579656e2100000000000000000000000000\n        /* \"#utility.yul\":16347:16348   */\n      0x00\n        /* \"#utility.yul\":16339:16345   */\n      dup3\n        /* \"#utility.yul\":16335:16349   */\n      add\n        /* \"#utility.yul\":16328:16373   */\n      mstore\n        /* \"#utility.yul\":16211:16380   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16386:16752   */\n    tag_547:\n        /* \"#utility.yul\":16528:16531   */\n      0x00\n        /* \"#utility.yul\":16549:16616   */\n      tag_729\n        /* \"#utility.yul\":16613:16615   */\n      0x13\n        /* \"#utility.yul\":16608:16611   */\n      dup4\n        /* \"#utility.yul\":16549:16616   */\n      tag_513\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":16542:16616   */\n      swap2\n      pop\n        /* \"#utility.yul\":16625:16718   */\n      tag_730\n        /* \"#utility.yul\":16714:16717   */\n      dup3\n        /* \"#utility.yul\":16625:16718   */\n      tag_546\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":16743:16745   */\n      0x20\n        /* \"#utility.yul\":16738:16741   */\n      dup3\n        /* \"#utility.yul\":16734:16746   */\n      add\n        /* \"#utility.yul\":16727:16746   */\n      swap1\n      pop\n        /* \"#utility.yul\":16386:16752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16758:17177   */\n    tag_215:\n        /* \"#utility.yul\":16924:16928   */\n      0x00\n        /* \"#utility.yul\":16962:16964   */\n      0x20\n        /* \"#utility.yul\":16951:16960   */\n      dup3\n        /* \"#utility.yul\":16947:16965   */\n      add\n        /* \"#utility.yul\":16939:16965   */\n      swap1\n      pop\n        /* \"#utility.yul\":17011:17020   */\n      dup2\n        /* \"#utility.yul\":17005:17009   */\n      dup2\n        /* \"#utility.yul\":17001:17021   */\n      sub\n        /* \"#utility.yul\":16997:16998   */\n      0x00\n        /* \"#utility.yul\":16986:16995   */\n      dup4\n        /* \"#utility.yul\":16982:16999   */\n      add\n        /* \"#utility.yul\":16975:17022   */\n      mstore\n        /* \"#utility.yul\":17039:17170   */\n      tag_732\n        /* \"#utility.yul\":17165:17169   */\n      dup2\n        /* \"#utility.yul\":17039:17170   */\n      tag_547\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":17031:17170   */\n      swap1\n      pop\n        /* \"#utility.yul\":16758:17177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17183:17515   */\n    tag_227:\n        /* \"#utility.yul\":17304:17308   */\n      0x00\n        /* \"#utility.yul\":17342:17344   */\n      0x40\n        /* \"#utility.yul\":17331:17340   */\n      dup3\n        /* \"#utility.yul\":17327:17345   */\n      add\n        /* \"#utility.yul\":17319:17345   */\n      swap1\n      pop\n        /* \"#utility.yul\":17355:17426   */\n      tag_734\n        /* \"#utility.yul\":17423:17424   */\n      0x00\n        /* \"#utility.yul\":17412:17421   */\n      dup4\n        /* \"#utility.yul\":17408:17425   */\n      add\n        /* \"#utility.yul\":17399:17405   */\n      dup6\n        /* \"#utility.yul\":17355:17426   */\n      tag_522\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":17436:17508   */\n      tag_735\n        /* \"#utility.yul\":17504:17506   */\n      0x20\n        /* \"#utility.yul\":17493:17502   */\n      dup4\n        /* \"#utility.yul\":17489:17507   */\n      add\n        /* \"#utility.yul\":17480:17486   */\n      dup5\n        /* \"#utility.yul\":17436:17508   */\n      tag_525\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":17183:17515   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17521:17701   */\n    tag_241:\n        /* \"#utility.yul\":17569:17646   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17566:17567   */\n      0x00\n        /* \"#utility.yul\":17559:17647   */\n      mstore\n        /* \"#utility.yul\":17666:17670   */\n      0x32\n        /* \"#utility.yul\":17663:17664   */\n      0x04\n        /* \"#utility.yul\":17656:17671   */\n      mstore\n        /* \"#utility.yul\":17690:17694   */\n      0x24\n        /* \"#utility.yul\":17687:17688   */\n      0x00\n        /* \"#utility.yul\":17680:17695   */\n      revert\n        /* \"#utility.yul\":17707:17855   */\n    tag_548:\n        /* \"#utility.yul\":17809:17820   */\n      0x00\n        /* \"#utility.yul\":17846:17849   */\n      dup2\n        /* \"#utility.yul\":17831:17849   */\n      swap1\n      pop\n        /* \"#utility.yul\":17707:17855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17861:18251   */\n    tag_549:\n        /* \"#utility.yul\":17967:17970   */\n      0x00\n        /* \"#utility.yul\":17995:18034   */\n      tag_739\n        /* \"#utility.yul\":18028:18033   */\n      dup3\n        /* \"#utility.yul\":17995:18034   */\n      tag_512\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":18050:18139   */\n      tag_740\n        /* \"#utility.yul\":18132:18138   */\n      dup2\n        /* \"#utility.yul\":18127:18130   */\n      dup6\n        /* \"#utility.yul\":18050:18139   */\n      tag_548\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":18043:18139   */\n      swap4\n      pop\n        /* \"#utility.yul\":18148:18213   */\n      tag_741\n        /* \"#utility.yul\":18206:18212   */\n      dup2\n        /* \"#utility.yul\":18201:18204   */\n      dup6\n        /* \"#utility.yul\":18194:18198   */\n      0x20\n        /* \"#utility.yul\":18187:18192   */\n      dup7\n        /* \"#utility.yul\":18183:18199   */\n      add\n        /* \"#utility.yul\":18148:18213   */\n      tag_514\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":18238:18244   */\n      dup1\n        /* \"#utility.yul\":18233:18236   */\n      dup5\n        /* \"#utility.yul\":18229:18245   */\n      add\n        /* \"#utility.yul\":18222:18245   */\n      swap2\n      pop\n        /* \"#utility.yul\":17971:18251   */\n      pop\n        /* \"#utility.yul\":17861:18251   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18257:18692   */\n    tag_292:\n        /* \"#utility.yul\":18437:18440   */\n      0x00\n        /* \"#utility.yul\":18459:18554   */\n      tag_743\n        /* \"#utility.yul\":18550:18553   */\n      dup3\n        /* \"#utility.yul\":18541:18547   */\n      dup6\n        /* \"#utility.yul\":18459:18554   */\n      tag_549\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":18452:18554   */\n      swap2\n      pop\n        /* \"#utility.yul\":18571:18666   */\n      tag_744\n        /* \"#utility.yul\":18662:18665   */\n      dup3\n        /* \"#utility.yul\":18653:18659   */\n      dup5\n        /* \"#utility.yul\":18571:18666   */\n      tag_549\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":18564:18666   */\n      swap2\n      pop\n        /* \"#utility.yul\":18683:18686   */\n      dup2\n        /* \"#utility.yul\":18676:18686   */\n      swap1\n      pop\n        /* \"#utility.yul\":18257:18692   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18698:18862   */\n    tag_550:\n        /* \"#utility.yul\":18838:18854   */\n      0x4b686f6e6720636f6e204e465421000000000000000000000000000000000000\n        /* \"#utility.yul\":18834:18835   */\n      0x00\n        /* \"#utility.yul\":18826:18832   */\n      dup3\n        /* \"#utility.yul\":18822:18836   */\n      add\n        /* \"#utility.yul\":18815:18855   */\n      mstore\n        /* \"#utility.yul\":18698:18862   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18868:19234   */\n    tag_551:\n        /* \"#utility.yul\":19010:19013   */\n      0x00\n        /* \"#utility.yul\":19031:19098   */\n      tag_747\n        /* \"#utility.yul\":19095:19097   */\n      0x0e\n        /* \"#utility.yul\":19090:19093   */\n      dup4\n        /* \"#utility.yul\":19031:19098   */\n      tag_513\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":19024:19098   */\n      swap2\n      pop\n        /* \"#utility.yul\":19107:19200   */\n      tag_748\n        /* \"#utility.yul\":19196:19199   */\n      dup3\n        /* \"#utility.yul\":19107:19200   */\n      tag_550\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":19225:19227   */\n      0x20\n        /* \"#utility.yul\":19220:19223   */\n      dup3\n        /* \"#utility.yul\":19216:19228   */\n      add\n        /* \"#utility.yul\":19209:19228   */\n      swap1\n      pop\n        /* \"#utility.yul\":18868:19234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19240:19659   */\n    tag_321:\n        /* \"#utility.yul\":19406:19410   */\n      0x00\n        /* \"#utility.yul\":19444:19446   */\n      0x20\n        /* \"#utility.yul\":19433:19442   */\n      dup3\n        /* \"#utility.yul\":19429:19447   */\n      add\n        /* \"#utility.yul\":19421:19447   */\n      swap1\n      pop\n        /* \"#utility.yul\":19493:19502   */\n      dup2\n        /* \"#utility.yul\":19487:19491   */\n      dup2\n        /* \"#utility.yul\":19483:19503   */\n      sub\n        /* \"#utility.yul\":19479:19480   */\n      0x00\n        /* \"#utility.yul\":19468:19477   */\n      dup4\n        /* \"#utility.yul\":19464:19481   */\n      add\n        /* \"#utility.yul\":19457:19504   */\n      mstore\n        /* \"#utility.yul\":19521:19652   */\n      tag_750\n        /* \"#utility.yul\":19647:19651   */\n      dup2\n        /* \"#utility.yul\":19521:19652   */\n      tag_551\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":19513:19652   */\n      swap1\n      pop\n        /* \"#utility.yul\":19240:19659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19665:19845   */\n    tag_552:\n        /* \"#utility.yul\":19713:19790   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19710:19711   */\n      0x00\n        /* \"#utility.yul\":19703:19791   */\n      mstore\n        /* \"#utility.yul\":19810:19814   */\n      0x11\n        /* \"#utility.yul\":19807:19808   */\n      0x04\n        /* \"#utility.yul\":19800:19815   */\n      mstore\n        /* \"#utility.yul\":19834:19838   */\n      0x24\n        /* \"#utility.yul\":19831:19832   */\n      0x00\n        /* \"#utility.yul\":19824:19839   */\n      revert\n        /* \"#utility.yul\":19851:20084   */\n    tag_323:\n        /* \"#utility.yul\":19890:19893   */\n      0x00\n        /* \"#utility.yul\":19913:19937   */\n      tag_753\n        /* \"#utility.yul\":19931:19936   */\n      dup3\n        /* \"#utility.yul\":19913:19937   */\n      tag_517\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":19904:19937   */\n      swap2\n      pop\n        /* \"#utility.yul\":19959:20025   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19952:19957   */\n      dup3\n        /* \"#utility.yul\":19949:20026   */\n      sub\n        /* \"#utility.yul\":19946:20049   */\n      tag_754\n      jumpi\n        /* \"#utility.yul\":20029:20047   */\n      tag_755\n      tag_552\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":19946:20049   */\n    tag_754:\n        /* \"#utility.yul\":20076:20077   */\n      0x01\n        /* \"#utility.yul\":20069:20074   */\n      dup3\n        /* \"#utility.yul\":20065:20078   */\n      add\n        /* \"#utility.yul\":20058:20078   */\n      swap1\n      pop\n        /* \"#utility.yul\":19851:20084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20090:20188   */\n    tag_553:\n        /* \"#utility.yul\":20141:20147   */\n      0x00\n        /* \"#utility.yul\":20175:20180   */\n      dup2\n        /* \"#utility.yul\":20169:20181   */\n      mload\n        /* \"#utility.yul\":20159:20181   */\n      swap1\n      pop\n        /* \"#utility.yul\":20090:20188   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20194:20362   */\n    tag_554:\n        /* \"#utility.yul\":20277:20288   */\n      0x00\n        /* \"#utility.yul\":20311:20317   */\n      dup3\n        /* \"#utility.yul\":20306:20309   */\n      dup3\n        /* \"#utility.yul\":20299:20318   */\n      mstore\n        /* \"#utility.yul\":20351:20355   */\n      0x20\n        /* \"#utility.yul\":20346:20349   */\n      dup3\n        /* \"#utility.yul\":20342:20356   */\n      add\n        /* \"#utility.yul\":20327:20356   */\n      swap1\n      pop\n        /* \"#utility.yul\":20194:20362   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20368:20741   */\n    tag_555:\n        /* \"#utility.yul\":20454:20457   */\n      0x00\n        /* \"#utility.yul\":20482:20520   */\n      tag_759\n        /* \"#utility.yul\":20514:20519   */\n      dup3\n        /* \"#utility.yul\":20482:20520   */\n      tag_553\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":20536:20606   */\n      tag_760\n        /* \"#utility.yul\":20599:20605   */\n      dup2\n        /* \"#utility.yul\":20594:20597   */\n      dup6\n        /* \"#utility.yul\":20536:20606   */\n      tag_554\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":20529:20606   */\n      swap4\n      pop\n        /* \"#utility.yul\":20615:20680   */\n      tag_761\n        /* \"#utility.yul\":20673:20679   */\n      dup2\n        /* \"#utility.yul\":20668:20671   */\n      dup6\n        /* \"#utility.yul\":20661:20665   */\n      0x20\n        /* \"#utility.yul\":20654:20659   */\n      dup7\n        /* \"#utility.yul\":20650:20666   */\n      add\n        /* \"#utility.yul\":20615:20680   */\n      tag_514\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":20705:20734   */\n      tag_762\n        /* \"#utility.yul\":20727:20733   */\n      dup2\n        /* \"#utility.yul\":20705:20734   */\n      tag_515\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":20700:20703   */\n      dup5\n        /* \"#utility.yul\":20696:20735   */\n      add\n        /* \"#utility.yul\":20689:20735   */\n      swap2\n      pop\n        /* \"#utility.yul\":20458:20741   */\n      pop\n        /* \"#utility.yul\":20368:20741   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20747:21387   */\n    tag_353:\n        /* \"#utility.yul\":20942:20946   */\n      0x00\n        /* \"#utility.yul\":20980:20983   */\n      0x80\n        /* \"#utility.yul\":20969:20978   */\n      dup3\n        /* \"#utility.yul\":20965:20984   */\n      add\n        /* \"#utility.yul\":20957:20984   */\n      swap1\n      pop\n        /* \"#utility.yul\":20994:21065   */\n      tag_764\n        /* \"#utility.yul\":21062:21063   */\n      0x00\n        /* \"#utility.yul\":21051:21060   */\n      dup4\n        /* \"#utility.yul\":21047:21064   */\n      add\n        /* \"#utility.yul\":21038:21044   */\n      dup8\n        /* \"#utility.yul\":20994:21065   */\n      tag_522\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":21075:21147   */\n      tag_765\n        /* \"#utility.yul\":21143:21145   */\n      0x20\n        /* \"#utility.yul\":21132:21141   */\n      dup4\n        /* \"#utility.yul\":21128:21146   */\n      add\n        /* \"#utility.yul\":21119:21125   */\n      dup7\n        /* \"#utility.yul\":21075:21147   */\n      tag_522\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":21157:21229   */\n      tag_766\n        /* \"#utility.yul\":21225:21227   */\n      0x40\n        /* \"#utility.yul\":21214:21223   */\n      dup4\n        /* \"#utility.yul\":21210:21228   */\n      add\n        /* \"#utility.yul\":21201:21207   */\n      dup6\n        /* \"#utility.yul\":21157:21229   */\n      tag_525\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":21276:21285   */\n      dup2\n        /* \"#utility.yul\":21270:21274   */\n      dup2\n        /* \"#utility.yul\":21266:21286   */\n      sub\n        /* \"#utility.yul\":21261:21263   */\n      0x60\n        /* \"#utility.yul\":21250:21259   */\n      dup4\n        /* \"#utility.yul\":21246:21264   */\n      add\n        /* \"#utility.yul\":21239:21287   */\n      mstore\n        /* \"#utility.yul\":21304:21380   */\n      tag_767\n        /* \"#utility.yul\":21375:21379   */\n      dup2\n        /* \"#utility.yul\":21366:21372   */\n      dup5\n        /* \"#utility.yul\":21304:21380   */\n      tag_555\n      jump\t// in\n    tag_767:\n        /* \"#utility.yul\":21296:21380   */\n      swap1\n      pop\n        /* \"#utility.yul\":20747:21387   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21393:21534   */\n    tag_556:\n        /* \"#utility.yul\":21449:21454   */\n      0x00\n        /* \"#utility.yul\":21480:21486   */\n      dup2\n        /* \"#utility.yul\":21474:21487   */\n      mload\n        /* \"#utility.yul\":21465:21487   */\n      swap1\n      pop\n        /* \"#utility.yul\":21496:21528   */\n      tag_769\n        /* \"#utility.yul\":21522:21527   */\n      dup2\n        /* \"#utility.yul\":21496:21528   */\n      tag_508\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":21393:21534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21540:21889   */\n    tag_356:\n        /* \"#utility.yul\":21609:21615   */\n      0x00\n        /* \"#utility.yul\":21658:21660   */\n      0x20\n        /* \"#utility.yul\":21646:21655   */\n      dup3\n        /* \"#utility.yul\":21637:21644   */\n      dup5\n        /* \"#utility.yul\":21633:21656   */\n      sub\n        /* \"#utility.yul\":21629:21661   */\n      slt\n        /* \"#utility.yul\":21626:21745   */\n      iszero\n      tag_771\n      jumpi\n        /* \"#utility.yul\":21664:21743   */\n      tag_772\n      tag_505\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":21626:21745   */\n    tag_771:\n        /* \"#utility.yul\":21784:21785   */\n      0x00\n        /* \"#utility.yul\":21809:21872   */\n      tag_773\n        /* \"#utility.yul\":21864:21871   */\n      dup5\n        /* \"#utility.yul\":21855:21861   */\n      dup3\n        /* \"#utility.yul\":21844:21853   */\n      dup6\n        /* \"#utility.yul\":21840:21862   */\n      add\n        /* \"#utility.yul\":21809:21872   */\n      tag_556\n      jump\t// in\n    tag_773:\n        /* \"#utility.yul\":21799:21872   */\n      swap2\n      pop\n        /* \"#utility.yul\":21755:21882   */\n      pop\n        /* \"#utility.yul\":21540:21889   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21895:22075   */\n    tag_381:\n        /* \"#utility.yul\":21943:22020   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21940:21941   */\n      0x00\n        /* \"#utility.yul\":21933:22021   */\n      mstore\n        /* \"#utility.yul\":22040:22044   */\n      0x12\n        /* \"#utility.yul\":22037:22038   */\n      0x04\n        /* \"#utility.yul\":22030:22045   */\n      mstore\n        /* \"#utility.yul\":22064:22068   */\n      0x24\n        /* \"#utility.yul\":22061:22062   */\n      0x00\n        /* \"#utility.yul\":22054:22069   */\n      revert\n        /* \"#utility.yul\":22081:22275   */\n    tag_470:\n        /* \"#utility.yul\":22121:22125   */\n      0x00\n        /* \"#utility.yul\":22141:22161   */\n      tag_776\n        /* \"#utility.yul\":22159:22160   */\n      dup3\n        /* \"#utility.yul\":22141:22161   */\n      tag_517\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":22136:22161   */\n      swap2\n      pop\n        /* \"#utility.yul\":22175:22195   */\n      tag_777\n        /* \"#utility.yul\":22193:22194   */\n      dup4\n        /* \"#utility.yul\":22175:22195   */\n      tag_517\n      jump\t// in\n    tag_777:\n        /* \"#utility.yul\":22170:22195   */\n      swap3\n      pop\n        /* \"#utility.yul\":22219:22220   */\n      dup3\n        /* \"#utility.yul\":22216:22217   */\n      dup3\n        /* \"#utility.yul\":22212:22221   */\n      sub\n        /* \"#utility.yul\":22204:22221   */\n      swap1\n      pop\n        /* \"#utility.yul\":22243:22244   */\n      dup2\n        /* \"#utility.yul\":22237:22241   */\n      dup2\n        /* \"#utility.yul\":22234:22245   */\n      gt\n        /* \"#utility.yul\":22231:22268   */\n      iszero\n      tag_778\n      jumpi\n        /* \"#utility.yul\":22248:22266   */\n      tag_779\n      tag_552\n      jump\t// in\n    tag_779:\n        /* \"#utility.yul\":22231:22268   */\n    tag_778:\n        /* \"#utility.yul\":22081:22275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22281:22461   */\n    tag_479:\n        /* \"#utility.yul\":22329:22406   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22326:22327   */\n      0x00\n        /* \"#utility.yul\":22319:22407   */\n      mstore\n        /* \"#utility.yul\":22426:22430   */\n      0x31\n        /* \"#utility.yul\":22423:22424   */\n      0x04\n        /* \"#utility.yul\":22416:22431   */\n      mstore\n        /* \"#utility.yul\":22450:22454   */\n      0x24\n        /* \"#utility.yul\":22447:22448   */\n      0x00\n        /* \"#utility.yul\":22440:22455   */\n      revert\n    stop\n    data_78f91a9492fea23a7cf472b247f10dfd8e130e7ba967cdcca1eb528e0da13077 68747470733a2f2f656d6572616c642d776f6f64656e2d67616d65666f776c2d3437322e6d7970696e6174612e636c6f75642f697066732f516d63726e794c5a723479357448637a31576d4b474c57435972555445644332475566646b62425768436e3531772f\n\n    auxdata: 0xa26469706673582212203f93cdc2f44d09f267f39423522a072d90f0ea08793ea56194bcdb21e467e1ce64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1959": {
									"entryPoint": null,
									"id": 1959,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3335": {
									"entryPoint": null,
									"id": 3335,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_3485": {
									"entryPoint": null,
									"id": 3485,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_77": {
									"entryPoint": null,
									"id": 77,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_173": {
									"entryPoint": 421,
									"id": 173,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 822,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 964,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1115,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1158,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6778:1",
										"nodeType": "YulBlock",
										"src": "0:6778:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "922:274:1",
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:1",
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nativeSrc": "970:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nativeSrc": "970:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nativeSrc": "939:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:1",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nativeSrc": "935:32:1",
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nativeSrc": "932:119:1",
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nativeSrc": "1061:128:1",
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nativeSrc": "1076:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nativeSrc": "1147:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nativeSrc": "1115:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:1",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:1",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:1",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											},
											{
												"body": {
													"nativeSrc": "1261:40:1",
													"nodeType": "YulBlock",
													"src": "1261:40:1",
													"statements": [
														{
															"nativeSrc": "1272:22:1",
															"nodeType": "YulAssignment",
															"src": "1272:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:1"
																},
																"nativeSrc": "1282:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:1",
														"nodeType": "YulTypedName",
														"src": "1244:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:1",
														"nodeType": "YulTypedName",
														"src": "1254:6:1",
														"type": ""
													}
												],
												"src": "1202:99:1"
											},
											{
												"body": {
													"nativeSrc": "1335:152:1",
													"nodeType": "YulBlock",
													"src": "1335:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:1"
																},
																"nativeSrc": "1345:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:1"
															},
															"nativeSrc": "1345:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:1"
																},
																"nativeSrc": "1442:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:1"
															},
															"nativeSrc": "1442:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:1"
																},
																"nativeSrc": "1466:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:1"
															},
															"nativeSrc": "1466:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:1"
											},
											{
												"body": {
													"nativeSrc": "1521:152:1",
													"nodeType": "YulBlock",
													"src": "1521:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:1"
																},
																"nativeSrc": "1531:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:1"
															},
															"nativeSrc": "1531:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:1"
																},
																"nativeSrc": "1628:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:1"
															},
															"nativeSrc": "1628:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nativeSrc": "1652:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:1"
															},
															"nativeSrc": "1652:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:1"
											},
											{
												"body": {
													"nativeSrc": "1730:269:1",
													"nodeType": "YulBlock",
													"src": "1730:269:1",
													"statements": [
														{
															"nativeSrc": "1740:22:1",
															"nodeType": "YulAssignment",
															"src": "1740:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:1"
																},
																"nativeSrc": "1750:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:1"
																}
															]
														},
														{
															"nativeSrc": "1771:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:1"
																},
																"nativeSrc": "1797:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:1",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:1",
																"nodeType": "YulBlock",
																"src": "1848:51:1",
																"statements": [
																	{
																		"nativeSrc": "1862:27:1",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:1"
																			},
																			"nativeSrc": "1872:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:1"
																},
																"nativeSrc": "1821:26:1",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:1"
															},
															"nativeSrc": "1818:81:1",
															"nodeType": "YulIf",
															"src": "1818:81:1"
														},
														{
															"body": {
																"nativeSrc": "1951:42:1",
																"nodeType": "YulBlock",
																"src": "1951:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:1"
																			},
																			"nativeSrc": "1965:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:1"
																		},
																		"nativeSrc": "1965:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:1"
																		},
																		"nativeSrc": "1935:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:1"
																},
																"nativeSrc": "1912:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:1"
															},
															"nativeSrc": "1909:84:1",
															"nodeType": "YulIf",
															"src": "1909:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:1",
														"nodeType": "YulTypedName",
														"src": "1714:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:1",
														"nodeType": "YulTypedName",
														"src": "1723:6:1",
														"type": ""
													}
												],
												"src": "1679:320:1"
											},
											{
												"body": {
													"nativeSrc": "2059:87:1",
													"nodeType": "YulBlock",
													"src": "2059:87:1",
													"statements": [
														{
															"nativeSrc": "2069:11:1",
															"nodeType": "YulAssignment",
															"src": "2069:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:1",
																"nodeType": "YulIdentifier",
																"src": "2077:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																},
																"nativeSrc": "2090:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:1"
															},
															"nativeSrc": "2090:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:1"
														},
														{
															"nativeSrc": "2113:26:1",
															"nodeType": "YulAssignment",
															"src": "2113:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:1"
																},
																"nativeSrc": "2121:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:1",
														"nodeType": "YulTypedName",
														"src": "2046:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:1",
														"nodeType": "YulTypedName",
														"src": "2054:4:1",
														"type": ""
													}
												],
												"src": "2005:141:1"
											},
											{
												"body": {
													"nativeSrc": "2196:49:1",
													"nodeType": "YulBlock",
													"src": "2196:49:1",
													"statements": [
														{
															"nativeSrc": "2206:33:1",
															"nodeType": "YulAssignment",
															"src": "2206:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:1"
																		},
																		"nativeSrc": "2220:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:1"
																},
																"nativeSrc": "2216:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:1",
														"nodeType": "YulTypedName",
														"src": "2179:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:1",
														"nodeType": "YulTypedName",
														"src": "2189:6:1",
														"type": ""
													}
												],
												"src": "2152:93:1"
											},
											{
												"body": {
													"nativeSrc": "2304:54:1",
													"nodeType": "YulBlock",
													"src": "2304:54:1",
													"statements": [
														{
															"nativeSrc": "2314:37:1",
															"nodeType": "YulAssignment",
															"src": "2314:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:1"
																},
																"nativeSrc": "2335:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:1",
														"nodeType": "YulTypedName",
														"src": "2279:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:1",
														"nodeType": "YulTypedName",
														"src": "2285:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:1",
														"nodeType": "YulTypedName",
														"src": "2295:8:1",
														"type": ""
													}
												],
												"src": "2251:107:1"
											},
											{
												"body": {
													"nativeSrc": "2440:317:1",
													"nodeType": "YulBlock",
													"src": "2440:317:1",
													"statements": [
														{
															"nativeSrc": "2450:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:1"
																},
																"nativeSrc": "2467:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:1",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:1",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:1"
																},
																"nativeSrc": "2506:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:1",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:1",
															"nodeType": "YulAssignment",
															"src": "2612:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:1"
																},
																"nativeSrc": "2624:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:1"
																}
															]
														},
														{
															"nativeSrc": "2672:30:1",
															"nodeType": "YulAssignment",
															"src": "2672:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:1"
																		},
																		"nativeSrc": "2692:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:1"
																},
																"nativeSrc": "2681:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:1"
																}
															]
														},
														{
															"nativeSrc": "2711:40:1",
															"nodeType": "YulAssignment",
															"src": "2711:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nativeSrc": "2731:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:1"
																},
																"nativeSrc": "2721:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:1",
														"nodeType": "YulTypedName",
														"src": "2401:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:1",
														"nodeType": "YulTypedName",
														"src": "2408:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:1",
														"nodeType": "YulTypedName",
														"src": "2420:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:1",
														"nodeType": "YulTypedName",
														"src": "2433:6:1",
														"type": ""
													}
												],
												"src": "2364:393:1"
											},
											{
												"body": {
													"nativeSrc": "2808:32:1",
													"nodeType": "YulBlock",
													"src": "2808:32:1",
													"statements": [
														{
															"nativeSrc": "2818:16:1",
															"nodeType": "YulAssignment",
															"src": "2818:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:1",
																"nodeType": "YulIdentifier",
																"src": "2829:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:1",
														"nodeType": "YulTypedName",
														"src": "2790:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:1",
														"nodeType": "YulTypedName",
														"src": "2800:7:1",
														"type": ""
													}
												],
												"src": "2763:77:1"
											},
											{
												"body": {
													"nativeSrc": "2878:28:1",
													"nodeType": "YulBlock",
													"src": "2878:28:1",
													"statements": [
														{
															"nativeSrc": "2888:12:1",
															"nodeType": "YulAssignment",
															"src": "2888:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:1",
																"nodeType": "YulIdentifier",
																"src": "2895:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:1",
														"nodeType": "YulTypedName",
														"src": "2864:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:1",
														"nodeType": "YulTypedName",
														"src": "2874:3:1",
														"type": ""
													}
												],
												"src": "2846:60:1"
											},
											{
												"body": {
													"nativeSrc": "2972:82:1",
													"nodeType": "YulBlock",
													"src": "2972:82:1",
													"statements": [
														{
															"nativeSrc": "2982:66:1",
															"nodeType": "YulAssignment",
															"src": "2982:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:1"
																				},
																				"nativeSrc": "3022:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:1"
																		},
																		"nativeSrc": "3013:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:1"
																},
																"nativeSrc": "2995:53:1",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:1",
														"nodeType": "YulTypedName",
														"src": "2952:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:1",
														"nodeType": "YulTypedName",
														"src": "2962:9:1",
														"type": ""
													}
												],
												"src": "2912:142:1"
											},
											{
												"body": {
													"nativeSrc": "3107:28:1",
													"nodeType": "YulBlock",
													"src": "3107:28:1",
													"statements": [
														{
															"nativeSrc": "3117:12:1",
															"nodeType": "YulAssignment",
															"src": "3117:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:1",
																"nodeType": "YulIdentifier",
																"src": "3124:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:1",
														"nodeType": "YulTypedName",
														"src": "3093:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:1",
														"nodeType": "YulTypedName",
														"src": "3103:3:1",
														"type": ""
													}
												],
												"src": "3060:75:1"
											},
											{
												"body": {
													"nativeSrc": "3217:193:1",
													"nodeType": "YulBlock",
													"src": "3217:193:1",
													"statements": [
														{
															"nativeSrc": "3227:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:1"
																},
																"nativeSrc": "3251:39:1",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:1",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:1"
																				},
																				"nativeSrc": "3340:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:1"
																				},
																				"nativeSrc": "3361:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:1"
																		},
																		"nativeSrc": "3312:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:1"
																},
																"nativeSrc": "3299:105:1",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:1"
															},
															"nativeSrc": "3299:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:1",
														"nodeType": "YulTypedName",
														"src": "3194:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:1",
														"nodeType": "YulTypedName",
														"src": "3200:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:1",
														"nodeType": "YulTypedName",
														"src": "3208:7:1",
														"type": ""
													}
												],
												"src": "3141:269:1"
											},
											{
												"body": {
													"nativeSrc": "3465:24:1",
													"nodeType": "YulBlock",
													"src": "3465:24:1",
													"statements": [
														{
															"nativeSrc": "3475:8:1",
															"nodeType": "YulAssignment",
															"src": "3475:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:1",
																"nodeType": "YulLiteral",
																"src": "3482:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:1",
														"nodeType": "YulTypedName",
														"src": "3461:3:1",
														"type": ""
													}
												],
												"src": "3416:73:1"
											},
											{
												"body": {
													"nativeSrc": "3548:136:1",
													"nodeType": "YulBlock",
													"src": "3548:136:1",
													"statements": [
														{
															"nativeSrc": "3558:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:1"
																},
																"nativeSrc": "3572:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:1"
																},
																"nativeSrc": "3613:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:1"
															},
															"nativeSrc": "3613:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:1",
														"nodeType": "YulTypedName",
														"src": "3534:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:1",
														"nodeType": "YulTypedName",
														"src": "3540:6:1",
														"type": ""
													}
												],
												"src": "3495:189:1"
											},
											{
												"body": {
													"nativeSrc": "3740:136:1",
													"nodeType": "YulBlock",
													"src": "3740:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:1",
																"nodeType": "YulBlock",
																"src": "3807:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:1"
																			},
																			"nativeSrc": "3821:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:1"
																		},
																		"nativeSrc": "3821:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:1"
																},
																"nativeSrc": "3757:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:1"
															},
															"nativeSrc": "3750:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:1",
																"nodeType": "YulBlock",
																"src": "3772:26:1",
																"statements": [
																	{
																		"nativeSrc": "3774:22:1",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:1"
																			},
																			"nativeSrc": "3783:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:1",
																"nodeType": "YulBlock",
																"src": "3754:2:1",
																"statements": []
															},
															"src": "3750:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:1",
														"nodeType": "YulTypedName",
														"src": "3728:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:1",
														"nodeType": "YulTypedName",
														"src": "3735:3:1",
														"type": ""
													}
												],
												"src": "3690:186:1"
											},
											{
												"body": {
													"nativeSrc": "3961:464:1",
													"nodeType": "YulBlock",
													"src": "3961:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:1",
																"nodeType": "YulBlock",
																"src": "3987:431:1",
																"statements": [
																	{
																		"nativeSrc": "4001:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:1"
																			},
																			"nativeSrc": "4017:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:1",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:1"
																					},
																					"nativeSrc": "4101:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:1"
																			},
																			"nativeSrc": "4087:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:1",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:1",
																			"nodeType": "YulBlock",
																			"src": "4288:27:1",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:1",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:1",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:1"
																			},
																			"nativeSrc": "4269:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:1"
																		},
																		"nativeSrc": "4266:49:1",
																		"nodeType": "YulIf",
																		"src": "4266:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:1"
																							},
																							"nativeSrc": "4384:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:1"
																					},
																					"nativeSrc": "4370:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:1"
																			},
																			"nativeSrc": "4328:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:1"
																		},
																		"nativeSrc": "4328:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:1"
																},
																"nativeSrc": "3975:11:1",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:1"
															},
															"nativeSrc": "3972:446:1",
															"nodeType": "YulIf",
															"src": "3972:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:1",
														"nodeType": "YulTypedName",
														"src": "3937:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:1",
														"nodeType": "YulTypedName",
														"src": "3944:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:1",
														"nodeType": "YulTypedName",
														"src": "3949:10:1",
														"type": ""
													}
												],
												"src": "3882:543:1"
											},
											{
												"body": {
													"nativeSrc": "4494:54:1",
													"nodeType": "YulBlock",
													"src": "4494:54:1",
													"statements": [
														{
															"nativeSrc": "4504:37:1",
															"nodeType": "YulAssignment",
															"src": "4504:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:1"
																},
																"nativeSrc": "4525:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:1",
														"nodeType": "YulTypedName",
														"src": "4469:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:1",
														"nodeType": "YulTypedName",
														"src": "4475:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:1",
														"nodeType": "YulTypedName",
														"src": "4485:8:1",
														"type": ""
													}
												],
												"src": "4431:117:1"
											},
											{
												"body": {
													"nativeSrc": "4605:118:1",
													"nodeType": "YulBlock",
													"src": "4605:118:1",
													"statements": [
														{
															"nativeSrc": "4615:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:1"
																				},
																				"nativeSrc": "4660:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:1"
																				},
																				"nativeSrc": "4675:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:1"
																		},
																		"nativeSrc": "4631:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:1"
																},
																"nativeSrc": "4627:56:1",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:1",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:1",
															"nodeType": "YulAssignment",
															"src": "4692:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:1"
																},
																"nativeSrc": "4702:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:1",
														"nodeType": "YulTypedName",
														"src": "4582:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:1",
														"nodeType": "YulTypedName",
														"src": "4588:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:1",
														"nodeType": "YulTypedName",
														"src": "4598:6:1",
														"type": ""
													}
												],
												"src": "4554:169:1"
											},
											{
												"body": {
													"nativeSrc": "4809:214:1",
													"nodeType": "YulBlock",
													"src": "4809:214:1",
													"statements": [
														{
															"nativeSrc": "4942:37:1",
															"nodeType": "YulAssignment",
															"src": "4942:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:1"
																},
																"nativeSrc": "4950:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:1"
																}
															]
														},
														{
															"nativeSrc": "4988:29:1",
															"nodeType": "YulAssignment",
															"src": "4988:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:1"
																		},
																		"nativeSrc": "5005:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:1"
																},
																"nativeSrc": "4996:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:1",
														"nodeType": "YulTypedName",
														"src": "4790:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:1",
														"nodeType": "YulTypedName",
														"src": "4796:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:1",
														"nodeType": "YulTypedName",
														"src": "4804:4:1",
														"type": ""
													}
												],
												"src": "4728:295:1"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:1",
													"nodeType": "YulBlock",
													"src": "5120:1303:1",
													"statements": [
														{
															"nativeSrc": "5131:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:1"
																},
																"nativeSrc": "5145:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:1",
																"nodeType": "YulBlock",
																"src": "5267:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:1"
																			},
																			"nativeSrc": "5269:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:1"
																		},
																		"nativeSrc": "5269:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:1",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:1"
																},
																"nativeSrc": "5236:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:1"
															},
															"nativeSrc": "5233:56:1",
															"nodeType": "YulIf",
															"src": "5233:56:1"
														},
														{
															"nativeSrc": "5299:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:1"
																		},
																		"nativeSrc": "5339:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:1"
																},
																"nativeSrc": "5313:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:1"
																},
																"nativeSrc": "5398:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:1"
															},
															"nativeSrc": "5398:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:1"
														},
														{
															"nativeSrc": "5475:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:1",
																"nodeType": "YulLiteral",
																"src": "5492:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:1",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:1",
															"nodeType": "YulAssignment",
															"src": "5503:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:1",
																"nodeType": "YulLiteral",
																"src": "5516:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:1",
																		"nodeType": "YulBlock",
																		"src": "5567:611:1",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:1",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:1"
																							},
																							"nativeSrc": "5608:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:1"
																					},
																					"nativeSrc": "5596:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:1",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:1"
																					},
																					"nativeSrc": "5646:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:1",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:1",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:1",
																					"nodeType": "YulBlock",
																					"src": "5764:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:1"
																												},
																												"nativeSrc": "5803:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:1"
																										},
																										"nativeSrc": "5797:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:1"
																								},
																								"nativeSrc": "5782:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:1"
																							},
																							"nativeSrc": "5782:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:1"
																						},
																						{
																							"nativeSrc": "5841:24:1",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:1",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:1"
																								},
																								"nativeSrc": "5851:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:1",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:1",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:1"
																								},
																								"nativeSrc": "5895:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:1"
																					},
																					"nativeSrc": "5727:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:1"
																				},
																				"nativeSrc": "5719:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:1",
																					"nodeType": "YulBlock",
																					"src": "5742:21:1",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:1",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:1",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:1"
																								},
																								"nativeSrc": "5749:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:1",
																					"nodeType": "YulBlock",
																					"src": "5723:3:1",
																					"statements": []
																				},
																				"src": "5719:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:1",
																					"nodeType": "YulBlock",
																					"src": "5963:156:1",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:1"
																										},
																										"nativeSrc": "6004:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:1"
																								},
																								"nativeSrc": "5998:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:1",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:1",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:1"
																												},
																												"nativeSrc": "6086:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:1"
																										},
																										"nativeSrc": "6056:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:1"
																								},
																								"nativeSrc": "6041:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:1"
																							},
																							"nativeSrc": "6041:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:1"
																					},
																					"nativeSrc": "5943:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:1"
																				},
																				"nativeSrc": "5940:179:1",
																				"nodeType": "YulIf",
																				"src": "5940:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:1",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:1"
																									},
																									"nativeSrc": "6149:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:1",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:1"
																							},
																							"nativeSrc": "6145:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:1"
																					},
																					"nativeSrc": "6132:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:1"
																				},
																				"nativeSrc": "6132:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:1"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:1",
																	"nodeType": "YulCase",
																	"src": "5560:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:1",
																		"nodeType": "YulBlock",
																		"src": "6195:222:1",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:1",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:1",
																					"nodeType": "YulBlock",
																					"src": "6246:67:1",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:1",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:1"
																										},
																										"nativeSrc": "6279:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:1"
																								},
																								"nativeSrc": "6273:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:1"
																				},
																				"nativeSrc": "6236:77:1",
																				"nodeType": "YulIf",
																				"src": "6236:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:1"
																							},
																							"nativeSrc": "6339:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:1"
																					},
																					"nativeSrc": "6326:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:1"
																				},
																				"nativeSrc": "6326:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:1"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:1",
																	"nodeType": "YulCase",
																	"src": "6187:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:1"
																},
																"nativeSrc": "5537:14:1",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:1"
															},
															"nativeSrc": "5530:887:1",
															"nodeType": "YulSwitch",
															"src": "5530:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:1",
														"nodeType": "YulTypedName",
														"src": "5109:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:1",
														"nodeType": "YulTypedName",
														"src": "5115:3:1",
														"type": ""
													}
												],
												"src": "5028:1395:1"
											},
											{
												"body": {
													"nativeSrc": "6494:53:1",
													"nodeType": "YulBlock",
													"src": "6494:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:1"
																		},
																		"nativeSrc": "6516:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:1"
																},
																"nativeSrc": "6504:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:1"
															},
															"nativeSrc": "6504:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:1",
														"nodeType": "YulTypedName",
														"src": "6482:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:1",
														"nodeType": "YulTypedName",
														"src": "6489:3:1",
														"type": ""
													}
												],
												"src": "6429:118:1"
											},
											{
												"body": {
													"nativeSrc": "6651:124:1",
													"nodeType": "YulBlock",
													"src": "6651:124:1",
													"statements": [
														{
															"nativeSrc": "6661:26:1",
															"nodeType": "YulAssignment",
															"src": "6661:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:1"
																},
																"nativeSrc": "6669:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:1"
																		},
																		"nativeSrc": "6750:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:1"
																},
																"nativeSrc": "6697:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:1"
															},
															"nativeSrc": "6697:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:1",
														"nodeType": "YulTypedName",
														"src": "6623:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:1",
														"nodeType": "YulTypedName",
														"src": "6635:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:1",
														"nodeType": "YulTypedName",
														"src": "6646:4:1",
														"type": ""
													}
												],
												"src": "6553:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526064600c555f600d5f6101000a81548160ff0219169083151502179055505f600d60016101000a81548160ff02191690831515021790555034801562000048575f80fd5b50604051620038813803806200388183398181016040528101906200006e9190620002cf565b806040518060400160405280600a81526020017f4461744869657542696e000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4448420000000000000000000000000000000000000000000000000000000000815250815f9081620000eb919062000563565b508060019081620000fd919062000563565b5050505f600a5f6101000a81548160ff0219169083151502179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200018c575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000183919062000658565b60405180910390fd5b6200019d81620001a560201b60201c565b505062000673565b5f600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000299826200026e565b9050919050565b620002ab816200028d565b8114620002b6575f80fd5b50565b5f81519050620002c981620002a0565b92915050565b5f60208284031215620002e757620002e66200026a565b5b5f620002f684828501620002b9565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200037b57607f821691505b60208210810362000391576200039062000336565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003f57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003b8565b620004018683620003b8565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200044b620004456200043f8462000419565b62000422565b62000419565b9050919050565b5f819050919050565b62000466836200042b565b6200047e620004758262000452565b848454620003c4565b825550505050565b5f90565b6200049462000486565b620004a18184846200045b565b505050565b5b81811015620004c857620004bc5f826200048a565b600181019050620004a7565b5050565b601f8211156200051757620004e18162000397565b620004ec84620003a9565b81016020851015620004fc578190505b620005146200050b85620003a9565b830182620004a6565b50505b505050565b5f82821c905092915050565b5f620005395f19846008026200051c565b1980831691505092915050565b5f62000553838362000528565b9150826002028217905092915050565b6200056e82620002ff565b67ffffffffffffffff8111156200058a576200058962000309565b5b62000596825462000363565b620005a3828285620004cc565b5f60209050601f831160018114620005d9575f8415620005c4578287015190505b620005d0858262000546565b8655506200063f565b601f198416620005e98662000397565b5f5b828110156200061257848901518255600182019150602085019450602081019050620005eb565b868310156200063257848901516200062e601f89168262000528565b8355505b6001600288020188555050505b505050505050565b62000652816200028d565b82525050565b5f6020820190506200066d5f83018462000647565b92915050565b61320080620006815f395ff3fe6080604052600436106101c1575f3560e01c80635c975abb116100f657806395d89b4111610094578063c5b8bbb911610063578063c5b8bbb9146105d3578063c87b56dd146105fd578063e985e9c514610639578063f2fde38b14610675576101c1565b806395d89b411461052f578063a22cb46514610559578063b88d4fde14610581578063bcc9ca5b146105a9576101c1565b806370a08231116100d057806370a082311461049d578063715018a6146104d95780638456cb59146104ef5780638da5cb5b14610505576101c1565b80635c975abb1461040f5780636352211e146104395780636447c35d14610475576101c1565b80632848aeaf116101635780632f745c591161013d5780632f745c59146103595780633f4ba83a1461039557806342842e0e146103ab5780634f6ccce7146103d3576101c1565b80632848aeaf146102eb5780632e9b82f2146103275780632f48de7914610331576101c1565b8063095ea7b31161019f578063095ea7b31461026757806318160ddd1461028f57806323b872dd146102b957806326092b83146102e1576101c1565b806301ffc9a7146101c557806306fdde0314610201578063081812fc1461022b575b5f80fd5b3480156101d0575f80fd5b506101eb60048036038101906101e6919061263b565b61069d565b6040516101f89190612680565b60405180910390f35b34801561020c575f80fd5b506102156106ae565b6040516102229190612723565b60405180910390f35b348015610236575f80fd5b50610251600480360381019061024c9190612776565b61073d565b60405161025e91906127e0565b60405180910390f35b348015610272575f80fd5b5061028d60048036038101906102889190612823565b610758565b005b34801561029a575f80fd5b506102a361076e565b6040516102b09190612870565b60405180910390f35b3480156102c4575f80fd5b506102df60048036038101906102da9190612889565b61077a565b005b6102e9610879565b005b3480156102f6575f80fd5b50610311600480360381019061030c91906128d9565b61091a565b60405161031e9190612680565b60405180910390f35b61032f610937565b005b34801561033c575f80fd5b506103576004803603810190610352919061292e565b610a61565b005b348015610364575f80fd5b5061037f600480360381019061037a9190612823565b610aa0565b60405161038c9190612870565b60405180910390f35b3480156103a0575f80fd5b506103a9610b44565b005b3480156103b6575f80fd5b506103d160048036038101906103cc9190612889565b610b56565b005b3480156103de575f80fd5b506103f960048036038101906103f49190612776565b610b75565b6040516104069190612870565b60405180910390f35b34801561041a575f80fd5b50610423610be7565b6040516104309190612680565b60405180910390f35b348015610444575f80fd5b5061045f600480360381019061045a9190612776565b610bfc565b60405161046c91906127e0565b60405180910390f35b348015610480575f80fd5b5061049b600480360381019061049691906129cd565b610c0d565b005b3480156104a8575f80fd5b506104c360048036038101906104be91906128d9565b610cb0565b6040516104d09190612870565b60405180910390f35b3480156104e4575f80fd5b506104ed610d66565b005b3480156104fa575f80fd5b50610503610d79565b005b348015610510575f80fd5b50610519610d8b565b60405161052691906127e0565b60405180910390f35b34801561053a575f80fd5b50610543610db4565b6040516105509190612723565b60405180910390f35b348015610564575f80fd5b5061057f600480360381019061057a9190612a18565b610e44565b005b34801561058c575f80fd5b506105a760048036038101906105a29190612b7e565b610e5a565b005b3480156105b4575f80fd5b506105bd610e77565b6040516105ca9190612680565b60405180910390f35b3480156105de575f80fd5b506105e7610e89565b6040516105f49190612680565b60405180910390f35b348015610608575f80fd5b50610623600480360381019061061e9190612776565b610e9c565b6040516106309190612723565b60405180910390f35b348015610644575f80fd5b5061065f600480360381019061065a9190612bfe565b610f02565b60405161066c9190612680565b60405180910390f35b348015610680575f80fd5b5061069b600480360381019061069691906128d9565b610f90565b005b5f6106a782611014565b9050919050565b60605f80546106bc90612c69565b80601f01602080910402602001604051908101604052809291908181526020018280546106e890612c69565b80156107335780601f1061070a57610100808354040283529160200191610733565b820191905f5260205f20905b81548152906001019060200180831161071657829003601f168201915b5050505050905090565b5f6107478261108d565b5061075182611113565b9050919050565b61076a828261076561114c565b611153565b5050565b5f600880549050905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107ea575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016107e191906127e0565b60405180910390fd5b5f6107fd83836107f861114c565b611165565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610873578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161086a93929190612c99565b60405180910390fd5b50505050565b600d5f9054906101000a900460ff166108c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108be90612d18565b60405180910390fd5b66470de4df8200003414610910576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090790612d80565b60405180910390fd5b61091861117a565b565b600e602052805f5260405f205f915054906101000a900460ff1681565b600d60019054906101000a900460ff16610986576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097d90612de8565b60405180910390fd5b600e5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610a0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0690612e50565b60405180910390fd5b65b5e620f480003414610a57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4e90612d80565b60405180910390fd5b610a5f61117a565b565b610a696111eb565b81600d5f6101000a81548160ff02191690831515021790555080600d60016101000a81548160ff0219169083151502179055505050565b5f610aaa83610cb0565b8210610aef5782826040517fa57d13dc000000000000000000000000000000000000000000000000000000008152600401610ae6929190612e6e565b60405180910390fd5b60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f2054905092915050565b610b4c6111eb565b610b54611272565b565b610b7083838360405180602001604052805f815250610e5a565b505050565b5f610b7e61076e565b8210610bc3575f826040517fa57d13dc000000000000000000000000000000000000000000000000000000008152600401610bba929190612e6e565b60405180910390fd5b60088281548110610bd757610bd6612e95565b5b905f5260205f2001549050919050565b5f600a5f9054906101000a900460ff16905090565b5f610c068261108d565b9050919050565b610c156111eb565b5f5b82829050811015610cab576001600e5f858585818110610c3a57610c39612e95565b5b9050602002016020810190610c4f91906128d9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508080600101915050610c17565b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d21575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610d1891906127e0565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610d6e6111eb565b610d775f6112d3565b565b610d816111eb565b610d89611398565b565b5f600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054610dc390612c69565b80601f0160208091040260200160405190810160405280929190818152602001828054610def90612c69565b8015610e3a5780601f10610e1157610100808354040283529160200191610e3a565b820191905f5260205f20905b815481529060010190602001808311610e1d57829003601f168201915b5050505050905090565b610e56610e4f61114c565b83836113fa565b5050565b610e6584848461077a565b610e7184848484611563565b50505050565b600d5f9054906101000a900460ff1681565b600d60019054906101000a900460ff1681565b6060610ea78261108d565b505f610eb1611715565b90505f815111610ecf5760405180602001604052805f815250610efa565b80610ed984611735565b604051602001610eea929190612efc565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610f986111eb565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611008575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610fff91906127e0565b60405180910390fd5b611011816112d3565b50565b5f7f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806110865750611085826117ff565b5b9050919050565b5f80611098836118e0565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361110a57826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016111019190612870565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b6111608383836001611919565b505050565b5f611171848484611ad8565b90509392505050565b600c5461118561076e565b106111c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111bc90612f69565b60405180910390fd5b5f600b5f8154809291906111d890612fb4565b9190505590506111e83382611af5565b50565b6111f361114c565b73ffffffffffffffffffffffffffffffffffffffff16611211610d8b565b73ffffffffffffffffffffffffffffffffffffffff16146112705761123461114c565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161126791906127e0565b60405180910390fd5b565b61127a611b12565b5f600a5f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6112bc61114c565b6040516112c991906127e0565b60405180910390a1565b5f600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113a0611b52565b6001600a5f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113e361114c565b6040516113f091906127e0565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361146a57816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161146191906127e0565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516115569190612680565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b111561170f578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026115a661114c565b8685856040518563ffffffff1660e01b81526004016115c8949392919061304d565b6020604051808303815f875af192505050801561160357506040513d601f19601f8201168201806040525081019061160091906130ab565b60015b611684573d805f8114611631576040519150601f19603f3d011682016040523d82523d5f602084013e611636565b606091505b505f81510361167c57836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161167391906127e0565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461170d57836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161170491906127e0565b60405180910390fd5b505b50505050565b60606040518060a001604052806067815260200161316460679139905090565b60605f600161174384611b93565b0190505f8167ffffffffffffffff81111561176157611760612a5a565b5b6040519080825280601f01601f1916602001820160405280156117935781602001600182028036833780820191505090505b5090505f82602001820190505b6001156117f4578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816117e9576117e86130d6565b5b0494505f85036117a0575b819350505050919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806118c957507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806118d957506118d882611ce4565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061195157505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611a83575f6119608461108d565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156119ca57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156119dd57506119db8184610f02565b155b15611a1f57826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611a1691906127e0565b60405180910390fd5b8115611a8157838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b5f611ae1611b52565b611aec848484611d4d565b90509392505050565b611b0e828260405180602001604052805f815250611e67565b5050565b611b1a610be7565b611b50576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611b5a610be7565b15611b91576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611bef577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611be557611be46130d6565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611c2c576d04ee2d6d415b85acef81000000008381611c2257611c216130d6565b5b0492506020810190505b662386f26fc100008310611c5b57662386f26fc100008381611c5157611c506130d6565b5b0492506010810190505b6305f5e1008310611c84576305f5e1008381611c7a57611c796130d6565b5b0492506008810190505b6127108310611ca9576127108381611c9f57611c9e6130d6565b5b0492506004810190505b60648310611ccc5760648381611cc257611cc16130d6565b5b0492506002810190505b600a8310611cdb576001810190505b80915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80611d5a858585611e82565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611d9d57611d988461208d565b611ddc565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611ddb57611dda81856120d1565b5b5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611e1d57611e188461221b565b611e5c565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611e5b57611e5a85856122db565b5b5b809150509392505050565b611e71838361235f565b611e7d5f848484611563565b505050565b5f80611e8d846118e0565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611ece57611ecd818486612452565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611f5957611f0d5f855f80611919565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611fd857600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b60088054905060095f8381526020019081526020015f2081905550600881908060018154018082558091505060019003905f5260205f20015f909190919091505550565b5f6120db83610cb0565b90505f60075f8481526020019081526020015f205490508181146121b2575f60065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205490508060065f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f20819055508160075f8381526020019081526020015f2081905550505b60075f8481526020019081526020015f205f905560065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f905550505050565b5f600160088054905061222e9190613103565b90505f60095f8481526020019081526020015f205490505f6008838154811061225a57612259612e95565b5b905f5260205f2001549050806008838154811061227a57612279612e95565b5b905f5260205f2001819055508160095f8381526020019081526020015f208190555060095f8581526020019081526020015f205f905560088054806122c2576122c1613136565b5b600190038181905f5260205f20015f9055905550505050565b5f60016122e784610cb0565b6122f19190613103565b90508160065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f20819055508060075f8481526020019081526020015f2081905550505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036123cf575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016123c691906127e0565b60405180910390fd5b5f6123db83835f611165565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461244d575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161244491906127e0565b60405180910390fd5b505050565b61245d838383612515565b612510575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036124d157806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016124c89190612870565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401612507929190612e6e565b60405180910390fd5b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156125cc57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061258d575061258c8484610f02565b5b806125cb57508273ffffffffffffffffffffffffffffffffffffffff166125b383611113565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61261a816125e6565b8114612624575f80fd5b50565b5f8135905061263581612611565b92915050565b5f602082840312156126505761264f6125de565b5b5f61265d84828501612627565b91505092915050565b5f8115159050919050565b61267a81612666565b82525050565b5f6020820190506126935f830184612671565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156126d05780820151818401526020810190506126b5565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6126f582612699565b6126ff81856126a3565b935061270f8185602086016126b3565b612718816126db565b840191505092915050565b5f6020820190508181035f83015261273b81846126eb565b905092915050565b5f819050919050565b61275581612743565b811461275f575f80fd5b50565b5f813590506127708161274c565b92915050565b5f6020828403121561278b5761278a6125de565b5b5f61279884828501612762565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6127ca826127a1565b9050919050565b6127da816127c0565b82525050565b5f6020820190506127f35f8301846127d1565b92915050565b612802816127c0565b811461280c575f80fd5b50565b5f8135905061281d816127f9565b92915050565b5f8060408385031215612839576128386125de565b5b5f6128468582860161280f565b925050602061285785828601612762565b9150509250929050565b61286a81612743565b82525050565b5f6020820190506128835f830184612861565b92915050565b5f805f606084860312156128a05761289f6125de565b5b5f6128ad8682870161280f565b93505060206128be8682870161280f565b92505060406128cf86828701612762565b9150509250925092565b5f602082840312156128ee576128ed6125de565b5b5f6128fb8482850161280f565b91505092915050565b61290d81612666565b8114612917575f80fd5b50565b5f8135905061292881612904565b92915050565b5f8060408385031215612944576129436125de565b5b5f6129518582860161291a565b92505060206129628582860161291a565b9150509250929050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261298d5761298c61296c565b5b8235905067ffffffffffffffff8111156129aa576129a9612970565b5b6020830191508360208202830111156129c6576129c5612974565b5b9250929050565b5f80602083850312156129e3576129e26125de565b5b5f83013567ffffffffffffffff811115612a00576129ff6125e2565b5b612a0c85828601612978565b92509250509250929050565b5f8060408385031215612a2e57612a2d6125de565b5b5f612a3b8582860161280f565b9250506020612a4c8582860161291a565b9150509250929050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612a90826126db565b810181811067ffffffffffffffff82111715612aaf57612aae612a5a565b5b80604052505050565b5f612ac16125d5565b9050612acd8282612a87565b919050565b5f67ffffffffffffffff821115612aec57612aeb612a5a565b5b612af5826126db565b9050602081019050919050565b828183375f83830152505050565b5f612b22612b1d84612ad2565b612ab8565b905082815260208101848484011115612b3e57612b3d612a56565b5b612b49848285612b02565b509392505050565b5f82601f830112612b6557612b6461296c565b5b8135612b75848260208601612b10565b91505092915050565b5f805f8060808587031215612b9657612b956125de565b5b5f612ba38782880161280f565b9450506020612bb48782880161280f565b9350506040612bc587828801612762565b925050606085013567ffffffffffffffff811115612be657612be56125e2565b5b612bf287828801612b51565b91505092959194509250565b5f8060408385031215612c1457612c136125de565b5b5f612c218582860161280f565b9250506020612c328582860161280f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612c8057607f821691505b602082108103612c9357612c92612c3c565b5b50919050565b5f606082019050612cac5f8301866127d1565b612cb96020830185612861565b612cc660408301846127d1565b949350505050565b7f5075626c6963204d696e7420436c6f73656400000000000000000000000000005f82015250565b5f612d026012836126a3565b9150612d0d82612cce565b602082019050919050565b5f6020820190508181035f830152612d2f81612cf6565b9050919050565b7f4b686f6e67206475207469656e000000000000000000000000000000000000005f82015250565b5f612d6a600d836126a3565b9150612d7582612d36565b602082019050919050565b5f6020820190508181035f830152612d9781612d5e565b9050919050565b7f416c6c6f77697374204d696e7420436c6f7365640000000000000000000000005f82015250565b5f612dd26014836126a3565b9150612ddd82612d9e565b602082019050919050565b5f6020820190508181035f830152612dff81612dc6565b9050919050565b7f42616e206b686f6e6720636f20717579656e21000000000000000000000000005f82015250565b5f612e3a6013836126a3565b9150612e4582612e06565b602082019050919050565b5f6020820190508181035f830152612e6781612e2e565b9050919050565b5f604082019050612e815f8301856127d1565b612e8e6020830184612861565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81905092915050565b5f612ed682612699565b612ee08185612ec2565b9350612ef08185602086016126b3565b80840191505092915050565b5f612f078285612ecc565b9150612f138284612ecc565b91508190509392505050565b7f4b686f6e6720636f6e204e4654210000000000000000000000000000000000005f82015250565b5f612f53600e836126a3565b9150612f5e82612f1f565b602082019050919050565b5f6020820190508181035f830152612f8081612f47565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612fbe82612743565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612ff057612fef612f87565b5b600182019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f61301f82612ffb565b6130298185613005565b93506130398185602086016126b3565b613042816126db565b840191505092915050565b5f6080820190506130605f8301876127d1565b61306d60208301866127d1565b61307a6040830185612861565b818103606083015261308c8184613015565b905095945050505050565b5f815190506130a581612611565b92915050565b5f602082840312156130c0576130bf6125de565b5b5f6130cd84828501613097565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61310d82612743565b915061311883612743565b92508282039050818111156131305761312f612f87565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfe68747470733a2f2f656d6572616c642d776f6f64656e2d67616d65666f776c2d3437322e6d7970696e6174612e636c6f75642f697066732f516d63726e794c5a723479357448637a31576d4b474c57435972555445644332475566646b62425768436e3531772fa26469706673582212203f93cdc2f44d09f267f39423522a072d90f0ea08793ea56194bcdb21e467e1ce64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0xC SSTORE PUSH0 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x48 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3881 CODESIZE SUB DUP1 PUSH3 0x3881 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x6E SWAP2 SWAP1 PUSH3 0x2CF JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4461744869657542696E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4448420000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0xEB SWAP2 SWAP1 PUSH3 0x563 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xFD SWAP2 SWAP1 PUSH3 0x563 JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x18C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x183 SWAP2 SWAP1 PUSH3 0x658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x19D DUP2 PUSH3 0x1A5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x673 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xA PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x299 DUP3 PUSH3 0x26E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2AB DUP2 PUSH3 0x28D JUMP JUMPDEST DUP2 EQ PUSH3 0x2B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x2C9 DUP2 PUSH3 0x2A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2E7 JUMPI PUSH3 0x2E6 PUSH3 0x26A JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x2F6 DUP5 DUP3 DUP6 ADD PUSH3 0x2B9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x37B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x391 JUMPI PUSH3 0x390 PUSH3 0x336 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x3F5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x3B8 JUMP JUMPDEST PUSH3 0x401 DUP7 DUP4 PUSH3 0x3B8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x44B PUSH3 0x445 PUSH3 0x43F DUP5 PUSH3 0x419 JUMP JUMPDEST PUSH3 0x422 JUMP JUMPDEST PUSH3 0x419 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x466 DUP4 PUSH3 0x42B JUMP JUMPDEST PUSH3 0x47E PUSH3 0x475 DUP3 PUSH3 0x452 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x3C4 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x494 PUSH3 0x486 JUMP JUMPDEST PUSH3 0x4A1 DUP2 DUP5 DUP5 PUSH3 0x45B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x4C8 JUMPI PUSH3 0x4BC PUSH0 DUP3 PUSH3 0x48A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x4A7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x517 JUMPI PUSH3 0x4E1 DUP2 PUSH3 0x397 JUMP JUMPDEST PUSH3 0x4EC DUP5 PUSH3 0x3A9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x4FC JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x514 PUSH3 0x50B DUP6 PUSH3 0x3A9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x4A6 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x539 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x51C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x553 DUP4 DUP4 PUSH3 0x528 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x56E DUP3 PUSH3 0x2FF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x58A JUMPI PUSH3 0x589 PUSH3 0x309 JUMP JUMPDEST JUMPDEST PUSH3 0x596 DUP3 SLOAD PUSH3 0x363 JUMP JUMPDEST PUSH3 0x5A3 DUP3 DUP3 DUP6 PUSH3 0x4CC JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5D9 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x5C4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5D0 DUP6 DUP3 PUSH3 0x546 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x63F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x5E9 DUP7 PUSH3 0x397 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x612 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5EB JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x632 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x62E PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x528 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x652 DUP2 PUSH3 0x28D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x66D PUSH0 DUP4 ADD DUP5 PUSH3 0x647 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3200 DUP1 PUSH3 0x681 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xF6 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xC5B8BBB9 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xC5B8BBB9 EQ PUSH2 0x5D3 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x639 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x675 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0xBCC9CA5B EQ PUSH2 0x5A9 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x505 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x6447C35D EQ PUSH2 0x475 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x2848AEAF GT PUSH2 0x163 JUMPI DUP1 PUSH4 0x2F745C59 GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x3D3 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x2848AEAF EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x2E9B82F2 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x2F48DE79 EQ PUSH2 0x331 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x19F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x26092B83 EQ PUSH2 0x2E1 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x22B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH2 0x69D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x2723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x2823 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A3 PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x2889 JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E9 PUSH2 0x879 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x28D9 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH2 0x937 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x292E JUMP JUMPDEST PUSH2 0xA61 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x2823 JUMP JUMPDEST PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A9 PUSH2 0xB44 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x2889 JUMP JUMPDEST PUSH2 0xB56 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x45F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45A SWAP2 SWAP1 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x480 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x29CD JUMP JUMPDEST PUSH2 0xC0D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x28D9 JUMP JUMPDEST PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4ED PUSH2 0xD66 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x503 PUSH2 0xD79 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x510 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x519 PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x543 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x2723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x564 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x2A18 JUMP JUMPDEST PUSH2 0xE44 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x2B7E JUMP JUMPDEST PUSH2 0xE5A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BD PUSH2 0xE77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E7 PUSH2 0xE89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x608 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x2723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x644 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x65F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65A SWAP2 SWAP1 PUSH2 0x2BFE JUMP JUMPDEST PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66C SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x680 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x69B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x28D9 JUMP JUMPDEST PUSH2 0xF90 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x6A7 DUP3 PUSH2 0x1014 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x6BC SWAP1 PUSH2 0x2C69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6E8 SWAP1 PUSH2 0x2C69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x733 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x70A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x733 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x716 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x747 DUP3 PUSH2 0x108D JUMP JUMPDEST POP PUSH2 0x751 DUP3 PUSH2 0x1113 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76A DUP3 DUP3 PUSH2 0x765 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x1153 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x7FD DUP4 DUP4 PUSH2 0x7F8 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x1165 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x873 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BE SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH7 0x470DE4DF820000 CALLVALUE EQ PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP1 PUSH2 0x2D80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x918 PUSH2 0x117A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97D SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA06 SWAP1 PUSH2 0x2E50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH6 0xB5E620F48000 CALLVALUE EQ PUSH2 0xA57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP1 PUSH2 0x2D80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA5F PUSH2 0x117A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA69 PUSH2 0x11EB JUMP JUMPDEST DUP2 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAAA DUP4 PUSH2 0xCB0 JUMP JUMPDEST DUP3 LT PUSH2 0xAEF JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE6 SWAP3 SWAP2 SWAP1 PUSH2 0x2E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB4C PUSH2 0x11EB JUMP JUMPDEST PUSH2 0xB54 PUSH2 0x1272 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB70 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xE5A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB7E PUSH2 0x76E JUMP JUMPDEST DUP3 LT PUSH2 0xBC3 JUMPI PUSH0 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBA SWAP3 SWAP2 SWAP1 PUSH2 0x2E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBD7 JUMPI PUSH2 0xBD6 PUSH2 0x2E95 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xC06 DUP3 PUSH2 0x108D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC15 PUSH2 0x11EB JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0xCAB JUMPI PUSH1 0x1 PUSH1 0xE PUSH0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xC3A JUMPI PUSH2 0xC39 PUSH2 0x2E95 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC4F SWAP2 SWAP1 PUSH2 0x28D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC17 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD21 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6E PUSH2 0x11EB JUMP JUMPDEST PUSH2 0xD77 PUSH0 PUSH2 0x12D3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD81 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0xD89 PUSH2 0x1398 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xDC3 SWAP1 PUSH2 0x2C69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDEF SWAP1 PUSH2 0x2C69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE3A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE3A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE1D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE56 PUSH2 0xE4F PUSH2 0x114C JUMP JUMPDEST DUP4 DUP4 PUSH2 0x13FA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE65 DUP5 DUP5 DUP5 PUSH2 0x77A JUMP JUMPDEST PUSH2 0xE71 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1563 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEA7 DUP3 PUSH2 0x108D JUMP JUMPDEST POP PUSH0 PUSH2 0xEB1 PUSH2 0x1715 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xEFA JUMP JUMPDEST DUP1 PUSH2 0xED9 DUP5 PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEEA SWAP3 SWAP2 SWAP1 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF98 PUSH2 0x11EB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1008 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1011 DUP2 PUSH2 0x12D3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1086 JUMPI POP PUSH2 0x1085 DUP3 PUSH2 0x17FF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1098 DUP4 PUSH2 0x18E0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x110A JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1101 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1160 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1919 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1171 DUP5 DUP5 DUP5 PUSH2 0x1AD8 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1185 PUSH2 0x76E JUMP JUMPDEST LT PUSH2 0x11C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BC SWAP1 PUSH2 0x2F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x11D8 SWAP1 PUSH2 0x2FB4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x11E8 CALLER DUP3 PUSH2 0x1AF5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x11F3 PUSH2 0x114C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1211 PUSH2 0xD8B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1270 JUMPI PUSH2 0x1234 PUSH2 0x114C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1267 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x127A PUSH2 0x1B12 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x12BC PUSH2 0x114C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C9 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xA PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x13A0 PUSH2 0x1B52 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x13E3 PUSH2 0x114C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F0 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x146A JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1461 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1556 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x170F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x15A6 PUSH2 0x114C JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x304D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1603 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1600 SWAP2 SWAP1 PUSH2 0x30AB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1684 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1631 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x167C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1673 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x170D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1704 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x67 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3164 PUSH1 0x67 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1743 DUP5 PUSH2 0x1B93 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1761 JUMPI PUSH2 0x1760 PUSH2 0x2A5A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1793 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x17F4 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x17E9 JUMPI PUSH2 0x17E8 PUSH2 0x30D6 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x17A0 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x18C9 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x18D9 JUMPI POP PUSH2 0x18D8 DUP3 PUSH2 0x1CE4 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1951 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1A83 JUMPI PUSH0 PUSH2 0x1960 DUP5 PUSH2 0x108D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x19CA JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x19DD JUMPI POP PUSH2 0x19DB DUP2 DUP5 PUSH2 0xF02 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1A1F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A16 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1A81 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AE1 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0x1AEC DUP5 DUP5 DUP5 PUSH2 0x1D4D JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B0E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1E67 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1B1A PUSH2 0xBE7 JUMP JUMPDEST PUSH2 0x1B50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1B5A PUSH2 0xBE7 JUMP JUMPDEST ISZERO PUSH2 0x1B91 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1BEF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1BE5 JUMPI PUSH2 0x1BE4 PUSH2 0x30D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1C2C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1C22 JUMPI PUSH2 0x1C21 PUSH2 0x30D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1C5B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1C51 JUMPI PUSH2 0x1C50 PUSH2 0x30D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1C84 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1C7A JUMPI PUSH2 0x1C79 PUSH2 0x30D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1CA9 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1C9F JUMPI PUSH2 0x1C9E PUSH2 0x30D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1CCC JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1CC2 JUMPI PUSH2 0x1CC1 PUSH2 0x30D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1CDB JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1D5A DUP6 DUP6 DUP6 PUSH2 0x1E82 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D9D JUMPI PUSH2 0x1D98 DUP5 PUSH2 0x208D JUMP JUMPDEST PUSH2 0x1DDC JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DDB JUMPI PUSH2 0x1DDA DUP2 DUP6 PUSH2 0x20D1 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E1D JUMPI PUSH2 0x1E18 DUP5 PUSH2 0x221B JUMP JUMPDEST PUSH2 0x1E5C JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E5B JUMPI PUSH2 0x1E5A DUP6 DUP6 PUSH2 0x22DB JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1E71 DUP4 DUP4 PUSH2 0x235F JUMP JUMPDEST PUSH2 0x1E7D PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1563 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1E8D DUP5 PUSH2 0x18E0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1ECE JUMPI PUSH2 0x1ECD DUP2 DUP5 DUP7 PUSH2 0x2452 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F59 JUMPI PUSH2 0x1F0D PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1919 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FD8 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20DB DUP4 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x21B2 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x6 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x222E SWAP2 SWAP1 PUSH2 0x3103 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x225A JUMPI PUSH2 0x2259 PUSH2 0x2E95 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x227A JUMPI PUSH2 0x2279 PUSH2 0x2E95 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x22C2 JUMPI PUSH2 0x22C1 PUSH2 0x3136 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x22E7 DUP5 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x22F1 SWAP2 SWAP1 PUSH2 0x3103 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x23CF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23C6 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x23DB DUP4 DUP4 PUSH0 PUSH2 0x1165 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x244D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2444 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x245D DUP4 DUP4 DUP4 PUSH2 0x2515 JUMP JUMPDEST PUSH2 0x2510 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x24D1 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24C8 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2507 SWAP3 SWAP2 SWAP1 PUSH2 0x2E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x25CC JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x258D JUMPI POP PUSH2 0x258C DUP5 DUP5 PUSH2 0xF02 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x25CB JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25B3 DUP4 PUSH2 0x1113 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x261A DUP2 PUSH2 0x25E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2624 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2635 DUP2 PUSH2 0x2611 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2650 JUMPI PUSH2 0x264F PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x265D DUP5 DUP3 DUP6 ADD PUSH2 0x2627 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x267A DUP2 PUSH2 0x2666 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2693 PUSH0 DUP4 ADD DUP5 PUSH2 0x2671 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26D0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x26B5 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26F5 DUP3 PUSH2 0x2699 JUMP JUMPDEST PUSH2 0x26FF DUP2 DUP6 PUSH2 0x26A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x270F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26B3 JUMP JUMPDEST PUSH2 0x2718 DUP2 PUSH2 0x26DB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x273B DUP2 DUP5 PUSH2 0x26EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2755 DUP2 PUSH2 0x2743 JUMP JUMPDEST DUP2 EQ PUSH2 0x275F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2770 DUP2 PUSH2 0x274C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x278B JUMPI PUSH2 0x278A PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2798 DUP5 DUP3 DUP6 ADD PUSH2 0x2762 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27CA DUP3 PUSH2 0x27A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27DA DUP2 PUSH2 0x27C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x27D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2802 DUP2 PUSH2 0x27C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x280C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x281D DUP2 PUSH2 0x27F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2839 JUMPI PUSH2 0x2838 PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2846 DUP6 DUP3 DUP7 ADD PUSH2 0x280F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2857 DUP6 DUP3 DUP7 ADD PUSH2 0x2762 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x286A DUP2 PUSH2 0x2743 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2883 PUSH0 DUP4 ADD DUP5 PUSH2 0x2861 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x28A0 JUMPI PUSH2 0x289F PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28AD DUP7 DUP3 DUP8 ADD PUSH2 0x280F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x28BE DUP7 DUP3 DUP8 ADD PUSH2 0x280F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x28CF DUP7 DUP3 DUP8 ADD PUSH2 0x2762 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28EE JUMPI PUSH2 0x28ED PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28FB DUP5 DUP3 DUP6 ADD PUSH2 0x280F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x290D DUP2 PUSH2 0x2666 JUMP JUMPDEST DUP2 EQ PUSH2 0x2917 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2928 DUP2 PUSH2 0x2904 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2944 JUMPI PUSH2 0x2943 PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2951 DUP6 DUP3 DUP7 ADD PUSH2 0x291A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2962 DUP6 DUP3 DUP7 ADD PUSH2 0x291A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x298D JUMPI PUSH2 0x298C PUSH2 0x296C JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29AA JUMPI PUSH2 0x29A9 PUSH2 0x2970 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x29C6 JUMPI PUSH2 0x29C5 PUSH2 0x2974 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29E3 JUMPI PUSH2 0x29E2 PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A00 JUMPI PUSH2 0x29FF PUSH2 0x25E2 JUMP JUMPDEST JUMPDEST PUSH2 0x2A0C DUP6 DUP3 DUP7 ADD PUSH2 0x2978 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A2E JUMPI PUSH2 0x2A2D PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A3B DUP6 DUP3 DUP7 ADD PUSH2 0x280F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A4C DUP6 DUP3 DUP7 ADD PUSH2 0x291A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2A90 DUP3 PUSH2 0x26DB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2AAF JUMPI PUSH2 0x2AAE PUSH2 0x2A5A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2AC1 PUSH2 0x25D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x2ACD DUP3 DUP3 PUSH2 0x2A87 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2AEC JUMPI PUSH2 0x2AEB PUSH2 0x2A5A JUMP JUMPDEST JUMPDEST PUSH2 0x2AF5 DUP3 PUSH2 0x26DB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B22 PUSH2 0x2B1D DUP5 PUSH2 0x2AD2 JUMP JUMPDEST PUSH2 0x2AB8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2B3E JUMPI PUSH2 0x2B3D PUSH2 0x2A56 JUMP JUMPDEST JUMPDEST PUSH2 0x2B49 DUP5 DUP3 DUP6 PUSH2 0x2B02 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B65 JUMPI PUSH2 0x2B64 PUSH2 0x296C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2B75 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2B10 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2B96 JUMPI PUSH2 0x2B95 PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BA3 DUP8 DUP3 DUP9 ADD PUSH2 0x280F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2BB4 DUP8 DUP3 DUP9 ADD PUSH2 0x280F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2BC5 DUP8 DUP3 DUP9 ADD PUSH2 0x2762 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BE6 JUMPI PUSH2 0x2BE5 PUSH2 0x25E2 JUMP JUMPDEST JUMPDEST PUSH2 0x2BF2 DUP8 DUP3 DUP9 ADD PUSH2 0x2B51 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C14 JUMPI PUSH2 0x2C13 PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C21 DUP6 DUP3 DUP7 ADD PUSH2 0x280F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2C32 DUP6 DUP3 DUP7 ADD PUSH2 0x280F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2C80 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2C93 JUMPI PUSH2 0x2C92 PUSH2 0x2C3C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2CAC PUSH0 DUP4 ADD DUP7 PUSH2 0x27D1 JUMP JUMPDEST PUSH2 0x2CB9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2861 JUMP JUMPDEST PUSH2 0x2CC6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x27D1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5075626C6963204D696E7420436C6F7365640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D02 PUSH1 0x12 DUP4 PUSH2 0x26A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D0D DUP3 PUSH2 0x2CCE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D2F DUP2 PUSH2 0x2CF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B686F6E67206475207469656E00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D6A PUSH1 0xD DUP4 PUSH2 0x26A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D75 DUP3 PUSH2 0x2D36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D97 DUP2 PUSH2 0x2D5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C6C6F77697374204D696E7420436C6F736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DD2 PUSH1 0x14 DUP4 PUSH2 0x26A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DDD DUP3 PUSH2 0x2D9E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DFF DUP2 PUSH2 0x2DC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42616E206B686F6E6720636F20717579656E2100000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E3A PUSH1 0x13 DUP4 PUSH2 0x26A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E45 DUP3 PUSH2 0x2E06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E67 DUP2 PUSH2 0x2E2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E81 PUSH0 DUP4 ADD DUP6 PUSH2 0x27D1 JUMP JUMPDEST PUSH2 0x2E8E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2861 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2ED6 DUP3 PUSH2 0x2699 JUMP JUMPDEST PUSH2 0x2EE0 DUP2 DUP6 PUSH2 0x2EC2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2EF0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26B3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2F07 DUP3 DUP6 PUSH2 0x2ECC JUMP JUMPDEST SWAP2 POP PUSH2 0x2F13 DUP3 DUP5 PUSH2 0x2ECC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4B686F6E6720636F6E204E465421000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F53 PUSH1 0xE DUP4 PUSH2 0x26A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F5E DUP3 PUSH2 0x2F1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F80 DUP2 PUSH2 0x2F47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2FBE DUP3 PUSH2 0x2743 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2FF0 JUMPI PUSH2 0x2FEF PUSH2 0x2F87 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x301F DUP3 PUSH2 0x2FFB JUMP JUMPDEST PUSH2 0x3029 DUP2 DUP6 PUSH2 0x3005 JUMP JUMPDEST SWAP4 POP PUSH2 0x3039 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26B3 JUMP JUMPDEST PUSH2 0x3042 DUP2 PUSH2 0x26DB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3060 PUSH0 DUP4 ADD DUP8 PUSH2 0x27D1 JUMP JUMPDEST PUSH2 0x306D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x27D1 JUMP JUMPDEST PUSH2 0x307A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2861 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x308C DUP2 DUP5 PUSH2 0x3015 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x30A5 DUP2 PUSH2 0x2611 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30C0 JUMPI PUSH2 0x30BF PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x30CD DUP5 DUP3 DUP6 ADD PUSH2 0x3097 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x310D DUP3 PUSH2 0x2743 JUMP JUMPDEST SWAP2 POP PUSH2 0x3118 DUP4 PUSH2 0x2743 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3130 JUMPI PUSH2 0x312F PUSH2 0x2F87 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH9 0x747470733A2F2F656D PUSH6 0x72616C642D77 PUSH16 0x6F64656E2D67616D65666F776C2D3437 ORIGIN 0x2E PUSH14 0x7970696E6174612E636C6F75642F PUSH10 0x7066732F516D63726E79 0x4C GAS PUSH19 0x3479357448637A31576D4B474C574359725554 GASLIMIT PUSH5 0x4332475566 PUSH5 0x6B62425768 NUMBER PUSH15 0x3531772FA26469706673582212203F SWAP4 0xCD 0xC2 DELEGATECALL 0x4D MULMOD CALLCODE PUSH8 0xF39423522A072D90 CREATE 0xEA ADDMOD PUSH26 0x3EA56194BCDB21E467E1CE64736F6C6343000816003300000000 ",
							"sourceMap": "68562:2593:0:-:0;;;68695:3;68675:23;;68733:5;68704:34;;;;;;;;;;;;;;;;;;;;68775:5;68744:36;;;;;;;;;;;;;;;;;;;;68834:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;68920:12;39846:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39920:5;39912;:13;;;;;;:::i;:::-;;39945:7;39935;:17;;;;;;:::i;:::-;;39846:113;;65629:5;65619:7;;:15;;;;;;;;;;;;;;;;;;2369:1;2345:26;;:12;:26;;;2341:95;;2422:1;2394:31;;;;;;;;;;;:::i;:::-;;;;;;;;2341:95;2445:32;2464:12;2445:18;;;:32;;:::i;:::-;2297:187;68834:106;68562:2593;;3984:187;4057:16;4076:6;;;;;;;;;;;4057:25;;4101:8;4092:6;;:17;;;;;;;;;;;;;;;;;;4155:8;4124:40;;4145:8;4124:40;;;;;;;;;;;;4047:124;3984:187;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;68562:2593:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addTokenToAllTokensEnumeration_3170": {
									"entryPoint": 8333,
									"id": 3170,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addTokenToOwnerEnumeration_3150": {
									"entryPoint": 8923,
									"id": 3150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_approve_2701": {
									"entryPoint": 4435,
									"id": 2701,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_2767": {
									"entryPoint": 6425,
									"id": 2767,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_3494": {
									"entryPoint": 5909,
									"id": 3494,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_2349": {
									"entryPoint": 9298,
									"id": 2349,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_2897": {
									"entryPoint": 5475,
									"id": 2897,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_111": {
									"entryPoint": 4587,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getApproved_2276": {
									"entryPoint": 4371,
									"id": 2276,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_2312": {
									"entryPoint": 9493,
									"id": 2312,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_2505": {
									"entryPoint": 9055,
									"id": 2505,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 4428,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_2263": {
									"entryPoint": 6368,
									"id": 2263,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_pause_3401": {
									"entryPoint": 5016,
									"id": 3401,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_removeTokenFromAllTokensEnumeration_3278": {
									"entryPoint": 8731,
									"id": 3278,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeTokenFromOwnerEnumeration_3230": {
									"entryPoint": 8401,
									"id": 3230,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_requireNotPaused_3372": {
									"entryPoint": 6994,
									"id": 3372,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireOwned_2833": {
									"entryPoint": 4237,
									"id": 2833,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requirePaused_3385": {
									"entryPoint": 6930,
									"id": 3385,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_safeMint_2520": {
									"entryPoint": 6901,
									"id": 2520,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_2546": {
									"entryPoint": 7783,
									"id": 2546,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setApprovalForAll_2804": {
									"entryPoint": 5114,
									"id": 2804,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_173": {
									"entryPoint": 4819,
									"id": 173,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_3417": {
									"entryPoint": 4722,
									"id": 3417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_2455": {
									"entryPoint": 7810,
									"id": 2455,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_update_3119": {
									"entryPoint": 7501,
									"id": 3119,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_update_3447": {
									"entryPoint": 6872,
									"id": 3447,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_update_3654": {
									"entryPoint": 4453,
									"id": 3654,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@allowList_3472": {
									"entryPoint": 2330,
									"id": 3472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowistMintOpen_3468": {
									"entryPoint": 3721,
									"id": 3468,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowistMint_3608": {
									"entryPoint": 2359,
									"id": 3608,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_2110": {
									"entryPoint": 1880,
									"id": 2110,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_2018": {
									"entryPoint": 3248,
									"id": 2018,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@editMintWindows_3560": {
									"entryPoint": 2657,
									"id": 3560,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getApproved_2127": {
									"entryPoint": 1853,
									"id": 2127,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@internalMint_3631": {
									"entryPoint": 4474,
									"id": 3631,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isApprovedForAll_2160": {
									"entryPoint": 3842,
									"id": 2160,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_1371": {
									"entryPoint": 7059,
									"id": 1371,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_2040": {
									"entryPoint": 1710,
									"id": 2040,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_2031": {
									"entryPoint": 3068,
									"id": 2031,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_94": {
									"entryPoint": 3467,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_3503": {
									"entryPoint": 3449,
									"id": 3503,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_3360": {
									"entryPoint": 3047,
									"id": 3360,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@publicMintOpen_3465": {
									"entryPoint": 3703,
									"id": 3465,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@publicMint_3580": {
									"entryPoint": 2169,
									"id": 3580,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_125": {
									"entryPoint": 3430,
									"id": 125,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_2224": {
									"entryPoint": 2902,
									"id": 2224,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2250": {
									"entryPoint": 3674,
									"id": 2250,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setAllowList_3542": {
									"entryPoint": 3085,
									"id": 3542,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setApprovalForAll_2143": {
									"entryPoint": 3652,
									"id": 2143,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1990": {
									"entryPoint": 6143,
									"id": 1990,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2984": {
									"entryPoint": 4116,
									"id": 2984,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3688": {
									"entryPoint": 1693,
									"id": 3688,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_497": {
									"entryPoint": 7396,
									"id": 497,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_2049": {
									"entryPoint": 3508,
									"id": 2049,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1718": {
									"entryPoint": 5941,
									"id": 1718,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenByIndex_3050": {
									"entryPoint": 2933,
									"id": 3050,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenOfOwnerByIndex_3013": {
									"entryPoint": 2720,
									"id": 3013,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenURI_2085": {
									"entryPoint": 3740,
									"id": 2085,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_3023": {
									"entryPoint": 1902,
									"id": 3023,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_2206": {
									"entryPoint": 1914,
									"id": 2206,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_153": {
									"entryPoint": 3984,
									"id": 153,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_3512": {
									"entryPoint": 2884,
									"id": 3512,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 11024,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 10255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 10616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool": {
									"entryPoint": 10522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 9767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 12439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 11089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 11262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 10377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 11134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 10776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 10275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 10701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_boolt_bool": {
									"entryPoint": 10542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 9787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 12459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 10102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 12309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_61cfb3f8f290d71745242e1d6d2c8c8eb692c2a985bf3b95041ff77b8a87add1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7c04249364a04dff6b55ac8edcf495f23fd180f6458f000171cd9318f06be5c6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a86de37de099325fdba98bd973ee353863620b1b9e5689a27bb937f240986db1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bc0e333509ab750e7eef18b674ce3a3ec259182436c6d413981d959da546bafc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fbae475842e005629bc2b35231dc8b6e9845355bc9fdd97ff31d41bafdc9ce2b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 12028,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 12365,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11886,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 11417,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_61cfb3f8f290d71745242e1d6d2c8c8eb692c2a985bf3b95041ff77b8a87add1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7c04249364a04dff6b55ac8edcf495f23fd180f6458f000171cd9318f06be5c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a86de37de099325fdba98bd973ee353863620b1b9e5689a27bb937f240986db1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bc0e333509ab750e7eef18b674ce3a3ec259182436c6d413981d959da546bafc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fbae475842e005629bc2b35231dc8b6e9845355bc9fdd97ff31d41bafdc9ce2b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 10936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 9685,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 10962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 12283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 12293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 11970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 12547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 10176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 9702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 11010,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9907,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 11369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 10887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 12212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 12167,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 12502,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 11324,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 12598,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11925,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 10842,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 10608,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 10604,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 10612,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 10838,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 9698,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9694,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_61cfb3f8f290d71745242e1d6d2c8c8eb692c2a985bf3b95041ff77b8a87add1": {
									"entryPoint": 11470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7c04249364a04dff6b55ac8edcf495f23fd180f6458f000171cd9318f06be5c6": {
									"entryPoint": 12063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a86de37de099325fdba98bd973ee353863620b1b9e5689a27bb937f240986db1": {
									"entryPoint": 11574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bc0e333509ab750e7eef18b674ce3a3ec259182436c6d413981d959da546bafc": {
									"entryPoint": 11678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fbae475842e005629bc2b35231dc8b6e9845355bc9fdd97ff31d41bafdc9ce2b": {
									"entryPoint": 11782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 9745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22464:1",
										"nodeType": "YulBlock",
										"src": "0:22464:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "378:105:1",
													"nodeType": "YulBlock",
													"src": "378:105:1",
													"statements": [
														{
															"nativeSrc": "388:89:1",
															"nodeType": "YulAssignment",
															"src": "388:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:1",
																		"nodeType": "YulLiteral",
																		"src": "410:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nativeSrc": "399:78:1",
																"nodeType": "YulFunctionCall",
																"src": "399:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:1",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:1",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:149:1"
											},
											{
												"body": {
													"nativeSrc": "531:78:1",
													"nodeType": "YulBlock",
													"src": "531:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:1",
																"nodeType": "YulBlock",
																"src": "587:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:1",
																					"nodeType": "YulLiteral",
																					"src": "596:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "599:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			"nativeSrc": "589:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:1"
																		},
																		"nativeSrc": "589:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:1"
																				},
																				"nativeSrc": "561:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:1"
																		},
																		"nativeSrc": "551:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nativeSrc": "544:42:1",
																"nodeType": "YulFunctionCall",
																"src": "544:42:1"
															},
															"nativeSrc": "541:62:1",
															"nodeType": "YulIf",
															"src": "541:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:1",
														"nodeType": "YulTypedName",
														"src": "524:5:1",
														"type": ""
													}
												],
												"src": "489:120:1"
											},
											{
												"body": {
													"nativeSrc": "666:86:1",
													"nodeType": "YulBlock",
													"src": "666:86:1",
													"statements": [
														{
															"nativeSrc": "676:29:1",
															"nodeType": "YulAssignment",
															"src": "676:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:1"
																},
																"nativeSrc": "685:20:1",
																"nodeType": "YulFunctionCall",
																"src": "685:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:1"
																},
																"nativeSrc": "714:32:1",
																"nodeType": "YulFunctionCall",
																"src": "714:32:1"
															},
															"nativeSrc": "714:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:1",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:1",
														"nodeType": "YulTypedName",
														"src": "652:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:1",
														"nodeType": "YulTypedName",
														"src": "660:5:1",
														"type": ""
													}
												],
												"src": "615:137:1"
											},
											{
												"body": {
													"nativeSrc": "823:262:1",
													"nodeType": "YulBlock",
													"src": "823:262:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:1",
																"nodeType": "YulBlock",
																"src": "869:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:1"
																			},
																			"nativeSrc": "871:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:1"
																		},
																		"nativeSrc": "871:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nativeSrc": "840:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:1",
																		"nodeType": "YulLiteral",
																		"src": "865:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nativeSrc": "836:32:1",
																"nodeType": "YulFunctionCall",
																"src": "836:32:1"
															},
															"nativeSrc": "833:119:1",
															"nodeType": "YulIf",
															"src": "833:119:1"
														},
														{
															"nativeSrc": "962:116:1",
															"nodeType": "YulBlock",
															"src": "962:116:1",
															"statements": [
																{
																	"nativeSrc": "977:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:1",
																		"nodeType": "YulLiteral",
																		"src": "991:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:1",
																			"nodeType": "YulTypedName",
																			"src": "981:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:1",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:1"
																				},
																				"nativeSrc": "1036:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:1"
																		},
																		"nativeSrc": "1016:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:1",
														"nodeType": "YulTypedName",
														"src": "793:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:1",
														"nodeType": "YulTypedName",
														"src": "804:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:1",
														"nodeType": "YulTypedName",
														"src": "816:6:1",
														"type": ""
													}
												],
												"src": "758:327:1"
											},
											{
												"body": {
													"nativeSrc": "1133:48:1",
													"nodeType": "YulBlock",
													"src": "1133:48:1",
													"statements": [
														{
															"nativeSrc": "1143:32:1",
															"nodeType": "YulAssignment",
															"src": "1143:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:1"
																		},
																		"nativeSrc": "1161:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:1"
																},
																"nativeSrc": "1154:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:1",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:1",
														"nodeType": "YulTypedName",
														"src": "1125:7:1",
														"type": ""
													}
												],
												"src": "1091:90:1"
											},
											{
												"body": {
													"nativeSrc": "1246:50:1",
													"nodeType": "YulBlock",
													"src": "1246:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:1"
																		},
																		"nativeSrc": "1268:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nativeSrc": "1256:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:1"
															},
															"nativeSrc": "1256:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:1",
														"nodeType": "YulTypedName",
														"src": "1234:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:1",
														"nodeType": "YulTypedName",
														"src": "1241:3:1",
														"type": ""
													}
												],
												"src": "1187:109:1"
											},
											{
												"body": {
													"nativeSrc": "1394:118:1",
													"nodeType": "YulBlock",
													"src": "1394:118:1",
													"statements": [
														{
															"nativeSrc": "1404:26:1",
															"nodeType": "YulAssignment",
															"src": "1404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:1"
																},
																"nativeSrc": "1412:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nativeSrc": "1487:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:1"
																},
																"nativeSrc": "1440:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:1"
															},
															"nativeSrc": "1440:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:1",
														"nodeType": "YulTypedName",
														"src": "1366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:1",
														"nodeType": "YulTypedName",
														"src": "1378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:1",
														"nodeType": "YulTypedName",
														"src": "1389:4:1",
														"type": ""
													}
												],
												"src": "1302:210:1"
											},
											{
												"body": {
													"nativeSrc": "1577:40:1",
													"nodeType": "YulBlock",
													"src": "1577:40:1",
													"statements": [
														{
															"nativeSrc": "1588:22:1",
															"nodeType": "YulAssignment",
															"src": "1588:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:1"
																},
																"nativeSrc": "1598:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:1",
														"nodeType": "YulTypedName",
														"src": "1560:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:1",
														"nodeType": "YulTypedName",
														"src": "1570:6:1",
														"type": ""
													}
												],
												"src": "1518:99:1"
											},
											{
												"body": {
													"nativeSrc": "1719:73:1",
													"nodeType": "YulBlock",
													"src": "1719:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:1"
																},
																"nativeSrc": "1729:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:1"
															},
															"nativeSrc": "1729:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:1"
														},
														{
															"nativeSrc": "1757:29:1",
															"nodeType": "YulAssignment",
															"src": "1757:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:1"
																},
																"nativeSrc": "1772:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:1",
														"nodeType": "YulTypedName",
														"src": "1691:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:1",
														"nodeType": "YulTypedName",
														"src": "1696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:1",
														"nodeType": "YulTypedName",
														"src": "1707:11:1",
														"type": ""
													}
												],
												"src": "1623:169:1"
											},
											{
												"body": {
													"nativeSrc": "1860:184:1",
													"nodeType": "YulBlock",
													"src": "1860:184:1",
													"statements": [
														{
															"nativeSrc": "1870:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:1",
																"nodeType": "YulLiteral",
																"src": "1879:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:1",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:1",
																"nodeType": "YulBlock",
																"src": "1939:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:1"
																					},
																					"nativeSrc": "1960:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:1"
																							},
																							"nativeSrc": "1979:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:1"
																					},
																					"nativeSrc": "1973:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:1"
																			},
																			"nativeSrc": "1953:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:1"
																		},
																		"nativeSrc": "1953:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:1"
																},
																"nativeSrc": "1897:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:1"
															},
															"nativeSrc": "1889:113:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:1",
																"nodeType": "YulBlock",
																"src": "1911:19:1",
																"statements": [
																	{
																		"nativeSrc": "1913:15:1",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:1",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:1"
																			},
																			"nativeSrc": "1918:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:1",
																"nodeType": "YulBlock",
																"src": "1893:3:1",
																"statements": []
															},
															"src": "1889:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:1"
																		},
																		"nativeSrc": "2018:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:1"
																},
																"nativeSrc": "2011:27:1",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:1"
															},
															"nativeSrc": "2011:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:1",
														"nodeType": "YulTypedName",
														"src": "1842:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:1",
														"nodeType": "YulTypedName",
														"src": "1847:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:1",
														"nodeType": "YulTypedName",
														"src": "1852:6:1",
														"type": ""
													}
												],
												"src": "1798:246:1"
											},
											{
												"body": {
													"nativeSrc": "2098:54:1",
													"nodeType": "YulBlock",
													"src": "2098:54:1",
													"statements": [
														{
															"nativeSrc": "2108:38:1",
															"nodeType": "YulAssignment",
															"src": "2108:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:1"
																		},
																		"nativeSrc": "2122:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:1"
																		},
																		"nativeSrc": "2138:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:1"
																},
																"nativeSrc": "2118:28:1",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:1",
														"nodeType": "YulTypedName",
														"src": "2081:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:1",
														"nodeType": "YulTypedName",
														"src": "2091:6:1",
														"type": ""
													}
												],
												"src": "2050:102:1"
											},
											{
												"body": {
													"nativeSrc": "2250:285:1",
													"nodeType": "YulBlock",
													"src": "2250:285:1",
													"statements": [
														{
															"nativeSrc": "2260:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:1"
																},
																"nativeSrc": "2274:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:1",
															"nodeType": "YulAssignment",
															"src": "2322:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:1"
																},
																"nativeSrc": "2329:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:1"
																		},
																		"nativeSrc": "2444:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:1"
																},
																"nativeSrc": "2409:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:1"
															},
															"nativeSrc": "2409:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:1"
														},
														{
															"nativeSrc": "2483:46:1",
															"nodeType": "YulAssignment",
															"src": "2483:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:1"
																		},
																		"nativeSrc": "2499:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:1"
																},
																"nativeSrc": "2490:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:1",
														"nodeType": "YulTypedName",
														"src": "2231:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:1",
														"nodeType": "YulTypedName",
														"src": "2238:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:1",
														"nodeType": "YulTypedName",
														"src": "2246:3:1",
														"type": ""
													}
												],
												"src": "2158:377:1"
											},
											{
												"body": {
													"nativeSrc": "2659:195:1",
													"nodeType": "YulBlock",
													"src": "2659:195:1",
													"statements": [
														{
															"nativeSrc": "2669:26:1",
															"nodeType": "YulAssignment",
															"src": "2669:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:1"
																},
																"nativeSrc": "2677:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:1"
																		},
																		"nativeSrc": "2712:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nativeSrc": "2731:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:1"
																},
																"nativeSrc": "2705:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:1"
															},
															"nativeSrc": "2705:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:1"
														},
														{
															"nativeSrc": "2761:86:1",
															"nodeType": "YulAssignment",
															"src": "2761:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:1"
																},
																"nativeSrc": "2769:78:1",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:1",
														"nodeType": "YulTypedName",
														"src": "2631:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:1",
														"nodeType": "YulTypedName",
														"src": "2643:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:1",
														"nodeType": "YulTypedName",
														"src": "2654:4:1",
														"type": ""
													}
												],
												"src": "2541:313:1"
											},
											{
												"body": {
													"nativeSrc": "2905:32:1",
													"nodeType": "YulBlock",
													"src": "2905:32:1",
													"statements": [
														{
															"nativeSrc": "2915:16:1",
															"nodeType": "YulAssignment",
															"src": "2915:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:1",
																"nodeType": "YulIdentifier",
																"src": "2926:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:1",
														"nodeType": "YulTypedName",
														"src": "2887:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:1",
														"nodeType": "YulTypedName",
														"src": "2897:7:1",
														"type": ""
													}
												],
												"src": "2860:77:1"
											},
											{
												"body": {
													"nativeSrc": "2986:79:1",
													"nodeType": "YulBlock",
													"src": "2986:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:1",
																"nodeType": "YulBlock",
																"src": "3043:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:1"
																			},
																			"nativeSrc": "3045:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:1"
																		},
																		"nativeSrc": "3045:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:1"
																				},
																				"nativeSrc": "3016:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:1"
																		},
																		"nativeSrc": "3006:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:1"
																},
																"nativeSrc": "2999:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:1"
															},
															"nativeSrc": "2996:63:1",
															"nodeType": "YulIf",
															"src": "2996:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:1",
														"nodeType": "YulTypedName",
														"src": "2979:5:1",
														"type": ""
													}
												],
												"src": "2943:122:1"
											},
											{
												"body": {
													"nativeSrc": "3123:87:1",
													"nodeType": "YulBlock",
													"src": "3123:87:1",
													"statements": [
														{
															"nativeSrc": "3133:29:1",
															"nodeType": "YulAssignment",
															"src": "3133:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:1"
																},
																"nativeSrc": "3142:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:1"
																},
																"nativeSrc": "3171:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:1"
															},
															"nativeSrc": "3171:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:1",
														"nodeType": "YulTypedName",
														"src": "3101:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:1",
														"nodeType": "YulTypedName",
														"src": "3109:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:1",
														"nodeType": "YulTypedName",
														"src": "3117:5:1",
														"type": ""
													}
												],
												"src": "3071:139:1"
											},
											{
												"body": {
													"nativeSrc": "3282:263:1",
													"nodeType": "YulBlock",
													"src": "3282:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:1",
																"nodeType": "YulBlock",
																"src": "3328:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:1"
																			},
																			"nativeSrc": "3330:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:1"
																		},
																		"nativeSrc": "3330:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:1"
																		},
																		"nativeSrc": "3299:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:1"
																},
																"nativeSrc": "3295:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:1"
															},
															"nativeSrc": "3292:119:1",
															"nodeType": "YulIf",
															"src": "3292:119:1"
														},
														{
															"nativeSrc": "3421:117:1",
															"nodeType": "YulBlock",
															"src": "3421:117:1",
															"statements": [
																{
																	"nativeSrc": "3436:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:1"
																				},
																				"nativeSrc": "3496:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:1"
																		},
																		"nativeSrc": "3475:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:1",
														"nodeType": "YulTypedName",
														"src": "3252:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:1",
														"nodeType": "YulTypedName",
														"src": "3263:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:1",
														"nodeType": "YulTypedName",
														"src": "3275:6:1",
														"type": ""
													}
												],
												"src": "3216:329:1"
											},
											{
												"body": {
													"nativeSrc": "3596:81:1",
													"nodeType": "YulBlock",
													"src": "3596:81:1",
													"statements": [
														{
															"nativeSrc": "3606:65:1",
															"nodeType": "YulAssignment",
															"src": "3606:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:1",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:1"
																},
																"nativeSrc": "3617:54:1",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:1",
														"nodeType": "YulTypedName",
														"src": "3578:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:1",
														"nodeType": "YulTypedName",
														"src": "3588:7:1",
														"type": ""
													}
												],
												"src": "3551:126:1"
											},
											{
												"body": {
													"nativeSrc": "3728:51:1",
													"nodeType": "YulBlock",
													"src": "3728:51:1",
													"statements": [
														{
															"nativeSrc": "3738:35:1",
															"nodeType": "YulAssignment",
															"src": "3738:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:1"
																},
																"nativeSrc": "3749:24:1",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:1",
														"nodeType": "YulTypedName",
														"src": "3710:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:1",
														"nodeType": "YulTypedName",
														"src": "3720:7:1",
														"type": ""
													}
												],
												"src": "3683:96:1"
											},
											{
												"body": {
													"nativeSrc": "3850:53:1",
													"nodeType": "YulBlock",
													"src": "3850:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:1"
																		},
																		"nativeSrc": "3872:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:1"
																},
																"nativeSrc": "3860:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:1"
															},
															"nativeSrc": "3860:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:1",
														"nodeType": "YulTypedName",
														"src": "3838:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:1",
														"nodeType": "YulTypedName",
														"src": "3845:3:1",
														"type": ""
													}
												],
												"src": "3785:118:1"
											},
											{
												"body": {
													"nativeSrc": "4007:124:1",
													"nodeType": "YulBlock",
													"src": "4007:124:1",
													"statements": [
														{
															"nativeSrc": "4017:26:1",
															"nodeType": "YulAssignment",
															"src": "4017:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:1"
																},
																"nativeSrc": "4025:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:1"
																		},
																		"nativeSrc": "4106:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:1"
																},
																"nativeSrc": "4053:71:1",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:1"
															},
															"nativeSrc": "4053:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:1",
														"nodeType": "YulTypedName",
														"src": "3979:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:1",
														"nodeType": "YulTypedName",
														"src": "3991:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:1",
														"nodeType": "YulTypedName",
														"src": "4002:4:1",
														"type": ""
													}
												],
												"src": "3909:222:1"
											},
											{
												"body": {
													"nativeSrc": "4180:79:1",
													"nodeType": "YulBlock",
													"src": "4180:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:1",
																"nodeType": "YulBlock",
																"src": "4237:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:1"
																			},
																			"nativeSrc": "4239:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:1"
																		},
																		"nativeSrc": "4239:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:1"
																				},
																				"nativeSrc": "4210:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:1"
																		},
																		"nativeSrc": "4200:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:1"
																},
																"nativeSrc": "4193:43:1",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:1"
															},
															"nativeSrc": "4190:63:1",
															"nodeType": "YulIf",
															"src": "4190:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:1",
														"nodeType": "YulTypedName",
														"src": "4173:5:1",
														"type": ""
													}
												],
												"src": "4137:122:1"
											},
											{
												"body": {
													"nativeSrc": "4317:87:1",
													"nodeType": "YulBlock",
													"src": "4317:87:1",
													"statements": [
														{
															"nativeSrc": "4327:29:1",
															"nodeType": "YulAssignment",
															"src": "4327:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:1"
																},
																"nativeSrc": "4336:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:1"
																},
																"nativeSrc": "4365:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:1"
															},
															"nativeSrc": "4365:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:1",
														"nodeType": "YulTypedName",
														"src": "4295:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:1",
														"nodeType": "YulTypedName",
														"src": "4303:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:1",
														"nodeType": "YulTypedName",
														"src": "4311:5:1",
														"type": ""
													}
												],
												"src": "4265:139:1"
											},
											{
												"body": {
													"nativeSrc": "4493:391:1",
													"nodeType": "YulBlock",
													"src": "4493:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:1",
																"nodeType": "YulBlock",
																"src": "4539:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:1"
																			},
																			"nativeSrc": "4541:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:1"
																		},
																		"nativeSrc": "4541:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:1"
																		},
																		"nativeSrc": "4510:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:1"
																},
																"nativeSrc": "4506:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:1"
															},
															"nativeSrc": "4503:119:1",
															"nodeType": "YulIf",
															"src": "4503:119:1"
														},
														{
															"nativeSrc": "4632:117:1",
															"nodeType": "YulBlock",
															"src": "4632:117:1",
															"statements": [
																{
																	"nativeSrc": "4647:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:1"
																				},
																				"nativeSrc": "4707:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:1"
																		},
																		"nativeSrc": "4686:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:1",
															"nodeType": "YulBlock",
															"src": "4759:118:1",
															"statements": [
																{
																	"nativeSrc": "4774:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:1"
																				},
																				"nativeSrc": "4835:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:1"
																		},
																		"nativeSrc": "4814:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:1",
														"nodeType": "YulTypedName",
														"src": "4455:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:1",
														"nodeType": "YulTypedName",
														"src": "4466:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:1",
														"nodeType": "YulTypedName",
														"src": "4478:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:1",
														"nodeType": "YulTypedName",
														"src": "4486:6:1",
														"type": ""
													}
												],
												"src": "4410:474:1"
											},
											{
												"body": {
													"nativeSrc": "4955:53:1",
													"nodeType": "YulBlock",
													"src": "4955:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4972:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4972:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4995:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4995:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4977:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "4977:17:1"
																		},
																		"nativeSrc": "4977:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4977:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4965:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:1"
																},
																"nativeSrc": "4965:37:1",
																"nodeType": "YulFunctionCall",
																"src": "4965:37:1"
															},
															"nativeSrc": "4965:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "4965:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4890:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4943:5:1",
														"nodeType": "YulTypedName",
														"src": "4943:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4950:3:1",
														"nodeType": "YulTypedName",
														"src": "4950:3:1",
														"type": ""
													}
												],
												"src": "4890:118:1"
											},
											{
												"body": {
													"nativeSrc": "5112:124:1",
													"nodeType": "YulBlock",
													"src": "5112:124:1",
													"statements": [
														{
															"nativeSrc": "5122:26:1",
															"nodeType": "YulAssignment",
															"src": "5122:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5134:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5134:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5145:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5145:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5130:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:1"
																},
																"nativeSrc": "5130:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5130:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5122:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5122:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5202:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5202:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5215:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5215:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5226:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5226:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5211:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5211:3:1"
																		},
																		"nativeSrc": "5211:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5211:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5158:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5158:43:1"
																},
																"nativeSrc": "5158:71:1",
																"nodeType": "YulFunctionCall",
																"src": "5158:71:1"
															},
															"nativeSrc": "5158:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "5158:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5014:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5084:9:1",
														"nodeType": "YulTypedName",
														"src": "5084:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5096:6:1",
														"nodeType": "YulTypedName",
														"src": "5096:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5107:4:1",
														"nodeType": "YulTypedName",
														"src": "5107:4:1",
														"type": ""
													}
												],
												"src": "5014:222:1"
											},
											{
												"body": {
													"nativeSrc": "5342:519:1",
													"nodeType": "YulBlock",
													"src": "5342:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5388:83:1",
																"nodeType": "YulBlock",
																"src": "5388:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5390:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5390:77:1"
																			},
																			"nativeSrc": "5390:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5390:79:1"
																		},
																		"nativeSrc": "5390:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5390:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5363:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5363:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5372:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5372:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5359:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5359:3:1"
																		},
																		"nativeSrc": "5359:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5359:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5384:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5384:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5355:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5355:3:1"
																},
																"nativeSrc": "5355:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5355:32:1"
															},
															"nativeSrc": "5352:119:1",
															"nodeType": "YulIf",
															"src": "5352:119:1"
														},
														{
															"nativeSrc": "5481:117:1",
															"nodeType": "YulBlock",
															"src": "5481:117:1",
															"statements": [
																{
																	"nativeSrc": "5496:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5496:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5510:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5510:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5500:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5500:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5525:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5525:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5560:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5560:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5571:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5571:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5556:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5556:3:1"
																				},
																				"nativeSrc": "5556:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5556:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5580:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5580:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5535:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5535:20:1"
																		},
																		"nativeSrc": "5535:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5535:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5525:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5608:118:1",
															"nodeType": "YulBlock",
															"src": "5608:118:1",
															"statements": [
																{
																	"nativeSrc": "5623:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5623:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5637:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5637:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5627:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5627:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5653:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5653:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5688:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5688:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5699:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5699:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5684:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5684:3:1"
																				},
																				"nativeSrc": "5684:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5684:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5708:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5708:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5663:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5663:20:1"
																		},
																		"nativeSrc": "5663:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5663:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5653:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5653:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5736:118:1",
															"nodeType": "YulBlock",
															"src": "5736:118:1",
															"statements": [
																{
																	"nativeSrc": "5751:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5751:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5765:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5755:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5755:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5781:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5781:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5816:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5816:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5827:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5827:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5812:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5812:3:1"
																				},
																				"nativeSrc": "5812:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5812:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5836:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5836:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5791:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5791:20:1"
																		},
																		"nativeSrc": "5791:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5791:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5781:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5781:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5242:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5296:9:1",
														"nodeType": "YulTypedName",
														"src": "5296:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5307:7:1",
														"nodeType": "YulTypedName",
														"src": "5307:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5319:6:1",
														"nodeType": "YulTypedName",
														"src": "5319:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5327:6:1",
														"nodeType": "YulTypedName",
														"src": "5327:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5335:6:1",
														"nodeType": "YulTypedName",
														"src": "5335:6:1",
														"type": ""
													}
												],
												"src": "5242:619:1"
											},
											{
												"body": {
													"nativeSrc": "5933:263:1",
													"nodeType": "YulBlock",
													"src": "5933:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5979:83:1",
																"nodeType": "YulBlock",
																"src": "5979:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5981:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5981:77:1"
																			},
																			"nativeSrc": "5981:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5981:79:1"
																		},
																		"nativeSrc": "5981:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5981:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5954:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5954:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5963:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5950:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:1"
																		},
																		"nativeSrc": "5950:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5950:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5975:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5975:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5946:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:1"
																},
																"nativeSrc": "5946:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5946:32:1"
															},
															"nativeSrc": "5943:119:1",
															"nodeType": "YulIf",
															"src": "5943:119:1"
														},
														{
															"nativeSrc": "6072:117:1",
															"nodeType": "YulBlock",
															"src": "6072:117:1",
															"statements": [
																{
																	"nativeSrc": "6087:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6087:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6101:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6101:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6091:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6091:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6116:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6116:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6151:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6151:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6162:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6147:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6147:3:1"
																				},
																				"nativeSrc": "6147:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6171:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6126:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6126:20:1"
																		},
																		"nativeSrc": "6126:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6126:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6116:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6116:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5867:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5903:9:1",
														"nodeType": "YulTypedName",
														"src": "5903:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5914:7:1",
														"nodeType": "YulTypedName",
														"src": "5914:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5926:6:1",
														"nodeType": "YulTypedName",
														"src": "5926:6:1",
														"type": ""
													}
												],
												"src": "5867:329:1"
											},
											{
												"body": {
													"nativeSrc": "6242:76:1",
													"nodeType": "YulBlock",
													"src": "6242:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6296:16:1",
																"nodeType": "YulBlock",
																"src": "6296:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6305:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6308:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6298:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:1"
																			},
																			"nativeSrc": "6298:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:1"
																		},
																		"nativeSrc": "6298:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6265:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6287:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6272:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:1"
																				},
																				"nativeSrc": "6272:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6262:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:1"
																		},
																		"nativeSrc": "6262:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6255:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:1"
																},
																"nativeSrc": "6255:40:1",
																"nodeType": "YulFunctionCall",
																"src": "6255:40:1"
															},
															"nativeSrc": "6252:60:1",
															"nodeType": "YulIf",
															"src": "6252:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6202:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6235:5:1",
														"nodeType": "YulTypedName",
														"src": "6235:5:1",
														"type": ""
													}
												],
												"src": "6202:116:1"
											},
											{
												"body": {
													"nativeSrc": "6373:84:1",
													"nodeType": "YulBlock",
													"src": "6373:84:1",
													"statements": [
														{
															"nativeSrc": "6383:29:1",
															"nodeType": "YulAssignment",
															"src": "6383:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6405:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6392:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:1"
																},
																"nativeSrc": "6392:20:1",
																"nodeType": "YulFunctionCall",
																"src": "6392:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6383:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6445:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6421:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:1"
																},
																"nativeSrc": "6421:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6421:30:1"
															},
															"nativeSrc": "6421:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6324:133:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6351:6:1",
														"nodeType": "YulTypedName",
														"src": "6351:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6359:3:1",
														"nodeType": "YulTypedName",
														"src": "6359:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6367:5:1",
														"nodeType": "YulTypedName",
														"src": "6367:5:1",
														"type": ""
													}
												],
												"src": "6324:133:1"
											},
											{
												"body": {
													"nativeSrc": "6540:385:1",
													"nodeType": "YulBlock",
													"src": "6540:385:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6586:83:1",
																"nodeType": "YulBlock",
																"src": "6586:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6588:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "6588:77:1"
																			},
																			"nativeSrc": "6588:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6588:79:1"
																		},
																		"nativeSrc": "6588:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6588:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6561:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6561:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6570:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6570:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6557:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6557:3:1"
																		},
																		"nativeSrc": "6557:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6557:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6582:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6582:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6553:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6553:3:1"
																},
																"nativeSrc": "6553:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6553:32:1"
															},
															"nativeSrc": "6550:119:1",
															"nodeType": "YulIf",
															"src": "6550:119:1"
														},
														{
															"nativeSrc": "6679:114:1",
															"nodeType": "YulBlock",
															"src": "6679:114:1",
															"statements": [
																{
																	"nativeSrc": "6694:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6694:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6708:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6708:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6698:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6698:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6723:60:1",
																	"nodeType": "YulAssignment",
																	"src": "6723:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6755:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6755:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6766:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6766:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6751:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6751:3:1"
																				},
																				"nativeSrc": "6751:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6751:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6775:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6775:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6733:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6733:17:1"
																		},
																		"nativeSrc": "6733:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6733:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6723:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6723:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6803:115:1",
															"nodeType": "YulBlock",
															"src": "6803:115:1",
															"statements": [
																{
																	"nativeSrc": "6818:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6818:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6832:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6832:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6822:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6822:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6848:60:1",
																	"nodeType": "YulAssignment",
																	"src": "6848:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6880:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6880:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6891:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6891:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6876:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6876:3:1"
																				},
																				"nativeSrc": "6876:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6876:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6900:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6900:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6858:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6858:17:1"
																		},
																		"nativeSrc": "6858:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6858:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6848:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6848:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_bool",
												"nativeSrc": "6463:462:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6502:9:1",
														"nodeType": "YulTypedName",
														"src": "6502:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6513:7:1",
														"nodeType": "YulTypedName",
														"src": "6513:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6525:6:1",
														"nodeType": "YulTypedName",
														"src": "6525:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6533:6:1",
														"nodeType": "YulTypedName",
														"src": "6533:6:1",
														"type": ""
													}
												],
												"src": "6463:462:1"
											},
											{
												"body": {
													"nativeSrc": "7020:28:1",
													"nodeType": "YulBlock",
													"src": "7020:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7037:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7037:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7040:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7040:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7030:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7030:6:1"
																},
																"nativeSrc": "7030:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7030:12:1"
															},
															"nativeSrc": "7030:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "7030:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6931:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6931:117:1"
											},
											{
												"body": {
													"nativeSrc": "7143:28:1",
													"nodeType": "YulBlock",
													"src": "7143:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7160:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7160:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7163:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7163:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7153:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7153:6:1"
																},
																"nativeSrc": "7153:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7153:12:1"
															},
															"nativeSrc": "7153:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "7153:12:1"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "7054:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7054:117:1"
											},
											{
												"body": {
													"nativeSrc": "7266:28:1",
													"nodeType": "YulBlock",
													"src": "7266:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7283:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7283:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7286:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7286:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7276:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7276:6:1"
																},
																"nativeSrc": "7276:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7276:12:1"
															},
															"nativeSrc": "7276:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "7276:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "7177:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7177:117:1"
											},
											{
												"body": {
													"nativeSrc": "7407:478:1",
													"nodeType": "YulBlock",
													"src": "7407:478:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7456:83:1",
																"nodeType": "YulBlock",
																"src": "7456:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "7458:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "7458:77:1"
																			},
																			"nativeSrc": "7458:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7458:79:1"
																		},
																		"nativeSrc": "7458:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7458:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "7435:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7435:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7443:4:1",
																						"nodeType": "YulLiteral",
																						"src": "7443:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7431:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7431:3:1"
																				},
																				"nativeSrc": "7431:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7431:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "7450:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7450:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "7427:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7427:3:1"
																		},
																		"nativeSrc": "7427:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7427:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7420:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7420:6:1"
																},
																"nativeSrc": "7420:35:1",
																"nodeType": "YulFunctionCall",
																"src": "7420:35:1"
															},
															"nativeSrc": "7417:122:1",
															"nodeType": "YulIf",
															"src": "7417:122:1"
														},
														{
															"nativeSrc": "7548:30:1",
															"nodeType": "YulAssignment",
															"src": "7548:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7571:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7571:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7558:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "7558:12:1"
																},
																"nativeSrc": "7558:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7558:20:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7548:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7548:6:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7621:83:1",
																"nodeType": "YulBlock",
																"src": "7621:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "7623:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "7623:77:1"
																			},
																			"nativeSrc": "7623:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7623:79:1"
																		},
																		"nativeSrc": "7623:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7623:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7593:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7593:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7601:18:1",
																		"nodeType": "YulLiteral",
																		"src": "7601:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7590:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7590:2:1"
																},
																"nativeSrc": "7590:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7590:30:1"
															},
															"nativeSrc": "7587:117:1",
															"nodeType": "YulIf",
															"src": "7587:117:1"
														},
														{
															"nativeSrc": "7713:29:1",
															"nodeType": "YulAssignment",
															"src": "7713:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7729:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7729:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7737:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7737:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7725:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7725:3:1"
																},
																"nativeSrc": "7725:17:1",
																"nodeType": "YulFunctionCall",
																"src": "7725:17:1"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "7713:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "7713:8:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7796:83:1",
																"nodeType": "YulBlock",
																"src": "7796:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "7798:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "7798:77:1"
																			},
																			"nativeSrc": "7798:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7798:79:1"
																		},
																		"nativeSrc": "7798:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7798:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "7761:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "7761:8:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "7775:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7775:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7783:4:1",
																						"nodeType": "YulLiteral",
																						"src": "7783:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7771:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7771:3:1"
																				},
																				"nativeSrc": "7771:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7771:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7757:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7757:3:1"
																		},
																		"nativeSrc": "7757:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7757:32:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7791:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7791:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7754:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7754:2:1"
																},
																"nativeSrc": "7754:41:1",
																"nodeType": "YulFunctionCall",
																"src": "7754:41:1"
															},
															"nativeSrc": "7751:128:1",
															"nodeType": "YulIf",
															"src": "7751:128:1"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "7317:568:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7374:6:1",
														"nodeType": "YulTypedName",
														"src": "7374:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7382:3:1",
														"nodeType": "YulTypedName",
														"src": "7382:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "7390:8:1",
														"nodeType": "YulTypedName",
														"src": "7390:8:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7400:6:1",
														"nodeType": "YulTypedName",
														"src": "7400:6:1",
														"type": ""
													}
												],
												"src": "7317:568:1"
											},
											{
												"body": {
													"nativeSrc": "7992:458:1",
													"nodeType": "YulBlock",
													"src": "7992:458:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8038:83:1",
																"nodeType": "YulBlock",
																"src": "8038:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8040:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "8040:77:1"
																			},
																			"nativeSrc": "8040:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8040:79:1"
																		},
																		"nativeSrc": "8040:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8040:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8013:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "8013:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8022:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8022:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8009:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8009:3:1"
																		},
																		"nativeSrc": "8009:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8009:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8034:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8034:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8005:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8005:3:1"
																},
																"nativeSrc": "8005:32:1",
																"nodeType": "YulFunctionCall",
																"src": "8005:32:1"
															},
															"nativeSrc": "8002:119:1",
															"nodeType": "YulIf",
															"src": "8002:119:1"
														},
														{
															"nativeSrc": "8131:312:1",
															"nodeType": "YulBlock",
															"src": "8131:312:1",
															"statements": [
																{
																	"nativeSrc": "8146:45:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8146:45:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8177:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "8177:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8188:1:1",
																						"nodeType": "YulLiteral",
																						"src": "8188:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8173:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8173:3:1"
																				},
																				"nativeSrc": "8173:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8173:17:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8160:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "8160:12:1"
																		},
																		"nativeSrc": "8160:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8160:31:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8150:6:1",
																			"nodeType": "YulTypedName",
																			"src": "8150:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8238:83:1",
																		"nodeType": "YulBlock",
																		"src": "8238:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8240:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "8240:77:1"
																					},
																					"nativeSrc": "8240:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8240:79:1"
																				},
																				"nativeSrc": "8240:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "8240:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8210:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8210:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8218:18:1",
																				"nodeType": "YulLiteral",
																				"src": "8218:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8207:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "8207:2:1"
																		},
																		"nativeSrc": "8207:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8207:30:1"
																	},
																	"nativeSrc": "8204:117:1",
																	"nodeType": "YulIf",
																	"src": "8204:117:1"
																},
																{
																	"nativeSrc": "8335:98:1",
																	"nodeType": "YulAssignment",
																	"src": "8335:98:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8405:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "8405:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8416:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8416:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8401:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8401:3:1"
																				},
																				"nativeSrc": "8401:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8401:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8425:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "8425:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "8353:47:1",
																			"nodeType": "YulIdentifier",
																			"src": "8353:47:1"
																		},
																		"nativeSrc": "8353:80:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8353:80:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8335:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "8335:6:1"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "8343:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "8343:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "7891:559:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7954:9:1",
														"nodeType": "YulTypedName",
														"src": "7954:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7965:7:1",
														"nodeType": "YulTypedName",
														"src": "7965:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7977:6:1",
														"nodeType": "YulTypedName",
														"src": "7977:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7985:6:1",
														"nodeType": "YulTypedName",
														"src": "7985:6:1",
														"type": ""
													}
												],
												"src": "7891:559:1"
											},
											{
												"body": {
													"nativeSrc": "8536:388:1",
													"nodeType": "YulBlock",
													"src": "8536:388:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8582:83:1",
																"nodeType": "YulBlock",
																"src": "8582:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8584:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "8584:77:1"
																			},
																			"nativeSrc": "8584:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8584:79:1"
																		},
																		"nativeSrc": "8584:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8584:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8557:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "8557:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8566:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8566:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8553:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8553:3:1"
																		},
																		"nativeSrc": "8553:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8553:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8578:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8578:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8549:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8549:3:1"
																},
																"nativeSrc": "8549:32:1",
																"nodeType": "YulFunctionCall",
																"src": "8549:32:1"
															},
															"nativeSrc": "8546:119:1",
															"nodeType": "YulIf",
															"src": "8546:119:1"
														},
														{
															"nativeSrc": "8675:117:1",
															"nodeType": "YulBlock",
															"src": "8675:117:1",
															"statements": [
																{
																	"nativeSrc": "8690:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8690:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8704:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8704:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8694:6:1",
																			"nodeType": "YulTypedName",
																			"src": "8694:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8719:63:1",
																	"nodeType": "YulAssignment",
																	"src": "8719:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8754:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "8754:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8765:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8765:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8750:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8750:3:1"
																				},
																				"nativeSrc": "8750:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8750:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8774:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "8774:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8729:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "8729:20:1"
																		},
																		"nativeSrc": "8729:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8729:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8719:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "8719:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8802:115:1",
															"nodeType": "YulBlock",
															"src": "8802:115:1",
															"statements": [
																{
																	"nativeSrc": "8817:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8817:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8831:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8831:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8821:6:1",
																			"nodeType": "YulTypedName",
																			"src": "8821:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8847:60:1",
																	"nodeType": "YulAssignment",
																	"src": "8847:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8879:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "8879:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8890:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8890:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8875:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8875:3:1"
																				},
																				"nativeSrc": "8875:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8875:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8899:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "8899:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "8857:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "8857:17:1"
																		},
																		"nativeSrc": "8857:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8857:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8847:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "8847:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "8456:468:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8498:9:1",
														"nodeType": "YulTypedName",
														"src": "8498:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8509:7:1",
														"nodeType": "YulTypedName",
														"src": "8509:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8521:6:1",
														"nodeType": "YulTypedName",
														"src": "8521:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8529:6:1",
														"nodeType": "YulTypedName",
														"src": "8529:6:1",
														"type": ""
													}
												],
												"src": "8456:468:1"
											},
											{
												"body": {
													"nativeSrc": "9019:28:1",
													"nodeType": "YulBlock",
													"src": "9019:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9036:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9036:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9039:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9039:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9029:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9029:6:1"
																},
																"nativeSrc": "9029:12:1",
																"nodeType": "YulFunctionCall",
																"src": "9029:12:1"
															},
															"nativeSrc": "9029:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "9029:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "8930:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "8930:117:1"
											},
											{
												"body": {
													"nativeSrc": "9081:152:1",
													"nodeType": "YulBlock",
													"src": "9081:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9098:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9098:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9101:77:1",
																		"nodeType": "YulLiteral",
																		"src": "9101:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9091:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9091:6:1"
																},
																"nativeSrc": "9091:88:1",
																"nodeType": "YulFunctionCall",
																"src": "9091:88:1"
															},
															"nativeSrc": "9091:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "9091:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9195:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9195:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9198:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9198:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9188:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9188:6:1"
																},
																"nativeSrc": "9188:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9188:15:1"
															},
															"nativeSrc": "9188:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9188:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9219:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9219:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9222:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9222:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9212:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9212:6:1"
																},
																"nativeSrc": "9212:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9212:15:1"
															},
															"nativeSrc": "9212:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9212:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "9053:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "9053:180:1"
											},
											{
												"body": {
													"nativeSrc": "9282:238:1",
													"nodeType": "YulBlock",
													"src": "9282:238:1",
													"statements": [
														{
															"nativeSrc": "9292:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "9292:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "9314:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9314:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "9344:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "9344:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "9322:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "9322:21:1"
																		},
																		"nativeSrc": "9322:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9322:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9310:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9310:3:1"
																},
																"nativeSrc": "9310:40:1",
																"nodeType": "YulFunctionCall",
																"src": "9310:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "9296:10:1",
																	"nodeType": "YulTypedName",
																	"src": "9296:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9461:22:1",
																"nodeType": "YulBlock",
																"src": "9461:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9463:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9463:16:1"
																			},
																			"nativeSrc": "9463:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9463:18:1"
																		},
																		"nativeSrc": "9463:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9463:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "9404:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "9404:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9416:18:1",
																				"nodeType": "YulLiteral",
																				"src": "9416:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9401:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9401:2:1"
																		},
																		"nativeSrc": "9401:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9401:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "9440:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "9440:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "9452:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9452:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9437:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9437:2:1"
																		},
																		"nativeSrc": "9437:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9437:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9398:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9398:2:1"
																},
																"nativeSrc": "9398:62:1",
																"nodeType": "YulFunctionCall",
																"src": "9398:62:1"
															},
															"nativeSrc": "9395:88:1",
															"nodeType": "YulIf",
															"src": "9395:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9499:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9499:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "9503:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "9503:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9492:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9492:6:1"
																},
																"nativeSrc": "9492:22:1",
																"nodeType": "YulFunctionCall",
																"src": "9492:22:1"
															},
															"nativeSrc": "9492:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "9492:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "9239:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9268:6:1",
														"nodeType": "YulTypedName",
														"src": "9268:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "9276:4:1",
														"nodeType": "YulTypedName",
														"src": "9276:4:1",
														"type": ""
													}
												],
												"src": "9239:281:1"
											},
											{
												"body": {
													"nativeSrc": "9567:88:1",
													"nodeType": "YulBlock",
													"src": "9567:88:1",
													"statements": [
														{
															"nativeSrc": "9577:30:1",
															"nodeType": "YulAssignment",
															"src": "9577:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "9587:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "9587:18:1"
																},
																"nativeSrc": "9587:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9587:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "9577:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9577:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "9636:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9636:6:1"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "9644:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9644:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "9616:19:1",
																	"nodeType": "YulIdentifier",
																	"src": "9616:19:1"
																},
																"nativeSrc": "9616:33:1",
																"nodeType": "YulFunctionCall",
																"src": "9616:33:1"
															},
															"nativeSrc": "9616:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "9616:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "9526:129:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "9551:4:1",
														"nodeType": "YulTypedName",
														"src": "9551:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "9560:6:1",
														"nodeType": "YulTypedName",
														"src": "9560:6:1",
														"type": ""
													}
												],
												"src": "9526:129:1"
											},
											{
												"body": {
													"nativeSrc": "9727:241:1",
													"nodeType": "YulBlock",
													"src": "9727:241:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9832:22:1",
																"nodeType": "YulBlock",
																"src": "9832:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9834:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9834:16:1"
																			},
																			"nativeSrc": "9834:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9834:18:1"
																		},
																		"nativeSrc": "9834:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9834:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9804:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9804:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9812:18:1",
																		"nodeType": "YulLiteral",
																		"src": "9812:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9801:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9801:2:1"
																},
																"nativeSrc": "9801:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9801:30:1"
															},
															"nativeSrc": "9798:56:1",
															"nodeType": "YulIf",
															"src": "9798:56:1"
														},
														{
															"nativeSrc": "9864:37:1",
															"nodeType": "YulAssignment",
															"src": "9864:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9894:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9894:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "9872:21:1",
																	"nodeType": "YulIdentifier",
																	"src": "9872:21:1"
																},
																"nativeSrc": "9872:29:1",
																"nodeType": "YulFunctionCall",
																"src": "9872:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9864:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9864:4:1"
																}
															]
														},
														{
															"nativeSrc": "9938:23:1",
															"nodeType": "YulAssignment",
															"src": "9938:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9950:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9950:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9956:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9956:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9946:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9946:3:1"
																},
																"nativeSrc": "9946:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9946:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9938:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9938:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "9661:307:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "9711:6:1",
														"nodeType": "YulTypedName",
														"src": "9711:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "9722:4:1",
														"nodeType": "YulTypedName",
														"src": "9722:4:1",
														"type": ""
													}
												],
												"src": "9661:307:1"
											},
											{
												"body": {
													"nativeSrc": "10038:82:1",
													"nodeType": "YulBlock",
													"src": "10038:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "10061:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10061:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "10066:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10066:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10071:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10071:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "10048:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "10048:12:1"
																},
																"nativeSrc": "10048:30:1",
																"nodeType": "YulFunctionCall",
																"src": "10048:30:1"
															},
															"nativeSrc": "10048:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "10048:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10098:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "10098:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10103:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10103:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10094:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10094:3:1"
																		},
																		"nativeSrc": "10094:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10094:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10112:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10112:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10087:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10087:6:1"
																},
																"nativeSrc": "10087:27:1",
																"nodeType": "YulFunctionCall",
																"src": "10087:27:1"
															},
															"nativeSrc": "10087:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "10087:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "9974:146:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10020:3:1",
														"nodeType": "YulTypedName",
														"src": "10020:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10025:3:1",
														"nodeType": "YulTypedName",
														"src": "10025:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10030:6:1",
														"nodeType": "YulTypedName",
														"src": "10030:6:1",
														"type": ""
													}
												],
												"src": "9974:146:1"
											},
											{
												"body": {
													"nativeSrc": "10209:340:1",
													"nodeType": "YulBlock",
													"src": "10209:340:1",
													"statements": [
														{
															"nativeSrc": "10219:74:1",
															"nodeType": "YulAssignment",
															"src": "10219:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10285:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10285:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "10244:40:1",
																			"nodeType": "YulIdentifier",
																			"src": "10244:40:1"
																		},
																		"nativeSrc": "10244:48:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10244:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10228:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "10228:15:1"
																},
																"nativeSrc": "10228:65:1",
																"nodeType": "YulFunctionCall",
																"src": "10228:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10219:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "10219:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10309:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "10309:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10316:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10316:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10302:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10302:6:1"
																},
																"nativeSrc": "10302:21:1",
																"nodeType": "YulFunctionCall",
																"src": "10302:21:1"
															},
															"nativeSrc": "10302:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "10302:21:1"
														},
														{
															"nativeSrc": "10332:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "10332:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "10347:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "10347:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10354:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10354:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10343:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10343:3:1"
																},
																"nativeSrc": "10343:16:1",
																"nodeType": "YulFunctionCall",
																"src": "10343:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "10336:3:1",
																	"nodeType": "YulTypedName",
																	"src": "10336:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10397:83:1",
																"nodeType": "YulBlock",
																"src": "10397:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "10399:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "10399:77:1"
																			},
																			"nativeSrc": "10399:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10399:79:1"
																		},
																		"nativeSrc": "10399:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10399:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "10378:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "10378:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10383:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10383:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10374:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10374:3:1"
																		},
																		"nativeSrc": "10374:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10374:16:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10392:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10392:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10371:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10371:2:1"
																},
																"nativeSrc": "10371:25:1",
																"nodeType": "YulFunctionCall",
																"src": "10371:25:1"
															},
															"nativeSrc": "10368:112:1",
															"nodeType": "YulIf",
															"src": "10368:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10526:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10526:3:1"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "10531:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10531:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10536:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10536:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "10489:36:1",
																	"nodeType": "YulIdentifier",
																	"src": "10489:36:1"
																},
																"nativeSrc": "10489:54:1",
																"nodeType": "YulFunctionCall",
																"src": "10489:54:1"
															},
															"nativeSrc": "10489:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "10489:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "10126:423:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10182:3:1",
														"nodeType": "YulTypedName",
														"src": "10182:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10187:6:1",
														"nodeType": "YulTypedName",
														"src": "10187:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10195:3:1",
														"nodeType": "YulTypedName",
														"src": "10195:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10203:5:1",
														"nodeType": "YulTypedName",
														"src": "10203:5:1",
														"type": ""
													}
												],
												"src": "10126:423:1"
											},
											{
												"body": {
													"nativeSrc": "10629:277:1",
													"nodeType": "YulBlock",
													"src": "10629:277:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10678:83:1",
																"nodeType": "YulBlock",
																"src": "10678:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10680:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "10680:77:1"
																			},
																			"nativeSrc": "10680:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10680:79:1"
																		},
																		"nativeSrc": "10680:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10680:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10657:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10657:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10665:4:1",
																						"nodeType": "YulLiteral",
																						"src": "10665:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10653:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10653:3:1"
																				},
																				"nativeSrc": "10653:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10653:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10672:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "10672:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10649:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10649:3:1"
																		},
																		"nativeSrc": "10649:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10649:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10642:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10642:6:1"
																},
																"nativeSrc": "10642:35:1",
																"nodeType": "YulFunctionCall",
																"src": "10642:35:1"
															},
															"nativeSrc": "10639:122:1",
															"nodeType": "YulIf",
															"src": "10639:122:1"
														},
														{
															"nativeSrc": "10770:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "10770:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10797:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10797:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10784:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "10784:12:1"
																},
																"nativeSrc": "10784:20:1",
																"nodeType": "YulFunctionCall",
																"src": "10784:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10774:6:1",
																	"nodeType": "YulTypedName",
																	"src": "10774:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10813:87:1",
															"nodeType": "YulAssignment",
															"src": "10813:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10873:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10873:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10881:4:1",
																				"nodeType": "YulLiteral",
																				"src": "10881:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10869:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10869:3:1"
																		},
																		"nativeSrc": "10869:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10869:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10888:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10888:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10896:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10896:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "10822:46:1",
																	"nodeType": "YulIdentifier",
																	"src": "10822:46:1"
																},
																"nativeSrc": "10822:78:1",
																"nodeType": "YulFunctionCall",
																"src": "10822:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10813:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "10813:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "10568:338:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10607:6:1",
														"nodeType": "YulTypedName",
														"src": "10607:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10615:3:1",
														"nodeType": "YulTypedName",
														"src": "10615:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10623:5:1",
														"nodeType": "YulTypedName",
														"src": "10623:5:1",
														"type": ""
													}
												],
												"src": "10568:338:1"
											},
											{
												"body": {
													"nativeSrc": "11038:817:1",
													"nodeType": "YulBlock",
													"src": "11038:817:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "11085:83:1",
																"nodeType": "YulBlock",
																"src": "11085:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11087:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "11087:77:1"
																			},
																			"nativeSrc": "11087:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11087:79:1"
																		},
																		"nativeSrc": "11087:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11087:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11059:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11059:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11068:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11068:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11055:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11055:3:1"
																		},
																		"nativeSrc": "11055:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11055:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11080:3:1",
																		"nodeType": "YulLiteral",
																		"src": "11080:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11051:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11051:3:1"
																},
																"nativeSrc": "11051:33:1",
																"nodeType": "YulFunctionCall",
																"src": "11051:33:1"
															},
															"nativeSrc": "11048:120:1",
															"nodeType": "YulIf",
															"src": "11048:120:1"
														},
														{
															"nativeSrc": "11178:117:1",
															"nodeType": "YulBlock",
															"src": "11178:117:1",
															"statements": [
																{
																	"nativeSrc": "11193:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11193:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11207:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11207:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11197:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11197:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11222:63:1",
																	"nodeType": "YulAssignment",
																	"src": "11222:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11257:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11257:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11268:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11268:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11253:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11253:3:1"
																				},
																				"nativeSrc": "11253:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11253:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11277:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11277:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11232:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "11232:20:1"
																		},
																		"nativeSrc": "11232:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11232:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11222:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11222:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11305:118:1",
															"nodeType": "YulBlock",
															"src": "11305:118:1",
															"statements": [
																{
																	"nativeSrc": "11320:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11320:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11334:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11334:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11324:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11324:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11350:63:1",
																	"nodeType": "YulAssignment",
																	"src": "11350:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11385:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11385:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11396:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11396:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11381:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11381:3:1"
																				},
																				"nativeSrc": "11381:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11381:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11405:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11405:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11360:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "11360:20:1"
																		},
																		"nativeSrc": "11360:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11360:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11350:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11350:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11433:118:1",
															"nodeType": "YulBlock",
															"src": "11433:118:1",
															"statements": [
																{
																	"nativeSrc": "11448:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11448:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11462:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11462:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11452:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11452:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11478:63:1",
																	"nodeType": "YulAssignment",
																	"src": "11478:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11513:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11513:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11524:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11524:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11509:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11509:3:1"
																				},
																				"nativeSrc": "11509:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11509:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11533:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11533:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11488:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "11488:20:1"
																		},
																		"nativeSrc": "11488:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11488:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11478:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11478:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11561:287:1",
															"nodeType": "YulBlock",
															"src": "11561:287:1",
															"statements": [
																{
																	"nativeSrc": "11576:46:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11576:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11607:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11607:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11618:2:1",
																						"nodeType": "YulLiteral",
																						"src": "11618:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11603:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11603:3:1"
																				},
																				"nativeSrc": "11603:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11603:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11590:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "11590:12:1"
																		},
																		"nativeSrc": "11590:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11590:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11580:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11580:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11669:83:1",
																		"nodeType": "YulBlock",
																		"src": "11669:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11671:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "11671:77:1"
																					},
																					"nativeSrc": "11671:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "11671:79:1"
																				},
																				"nativeSrc": "11671:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "11671:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11641:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11641:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11649:18:1",
																				"nodeType": "YulLiteral",
																				"src": "11649:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11638:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "11638:2:1"
																		},
																		"nativeSrc": "11638:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11638:30:1"
																	},
																	"nativeSrc": "11635:117:1",
																	"nodeType": "YulIf",
																	"src": "11635:117:1"
																},
																{
																	"nativeSrc": "11766:72:1",
																	"nodeType": "YulAssignment",
																	"src": "11766:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11810:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11810:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11821:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11821:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11806:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11806:3:1"
																				},
																				"nativeSrc": "11806:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11806:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11830:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11830:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "11776:29:1",
																			"nodeType": "YulIdentifier",
																			"src": "11776:29:1"
																		},
																		"nativeSrc": "11776:62:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11776:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11766:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11766:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "10912:943:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10984:9:1",
														"nodeType": "YulTypedName",
														"src": "10984:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10995:7:1",
														"nodeType": "YulTypedName",
														"src": "10995:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11007:6:1",
														"nodeType": "YulTypedName",
														"src": "11007:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11015:6:1",
														"nodeType": "YulTypedName",
														"src": "11015:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11023:6:1",
														"nodeType": "YulTypedName",
														"src": "11023:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11031:6:1",
														"nodeType": "YulTypedName",
														"src": "11031:6:1",
														"type": ""
													}
												],
												"src": "10912:943:1"
											},
											{
												"body": {
													"nativeSrc": "11944:391:1",
													"nodeType": "YulBlock",
													"src": "11944:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "11990:83:1",
																"nodeType": "YulBlock",
																"src": "11990:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11992:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "11992:77:1"
																			},
																			"nativeSrc": "11992:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11992:79:1"
																		},
																		"nativeSrc": "11992:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11992:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11965:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11965:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11974:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11974:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11961:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11961:3:1"
																		},
																		"nativeSrc": "11961:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11961:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11986:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11986:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11957:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11957:3:1"
																},
																"nativeSrc": "11957:32:1",
																"nodeType": "YulFunctionCall",
																"src": "11957:32:1"
															},
															"nativeSrc": "11954:119:1",
															"nodeType": "YulIf",
															"src": "11954:119:1"
														},
														{
															"nativeSrc": "12083:117:1",
															"nodeType": "YulBlock",
															"src": "12083:117:1",
															"statements": [
																{
																	"nativeSrc": "12098:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12098:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12112:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12112:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12102:6:1",
																			"nodeType": "YulTypedName",
																			"src": "12102:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12127:63:1",
																	"nodeType": "YulAssignment",
																	"src": "12127:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12162:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "12162:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12173:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "12173:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12158:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12158:3:1"
																				},
																				"nativeSrc": "12158:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12158:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12182:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "12182:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12137:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "12137:20:1"
																		},
																		"nativeSrc": "12137:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12137:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12127:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "12127:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12210:118:1",
															"nodeType": "YulBlock",
															"src": "12210:118:1",
															"statements": [
																{
																	"nativeSrc": "12225:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12225:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12239:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12239:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12229:6:1",
																			"nodeType": "YulTypedName",
																			"src": "12229:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12255:63:1",
																	"nodeType": "YulAssignment",
																	"src": "12255:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12290:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "12290:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12301:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "12301:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12286:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12286:3:1"
																				},
																				"nativeSrc": "12286:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12286:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12310:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "12310:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12265:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "12265:20:1"
																		},
																		"nativeSrc": "12265:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12265:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12255:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "12255:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "11861:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11906:9:1",
														"nodeType": "YulTypedName",
														"src": "11906:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11917:7:1",
														"nodeType": "YulTypedName",
														"src": "11917:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11929:6:1",
														"nodeType": "YulTypedName",
														"src": "11929:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11937:6:1",
														"nodeType": "YulTypedName",
														"src": "11937:6:1",
														"type": ""
													}
												],
												"src": "11861:474:1"
											},
											{
												"body": {
													"nativeSrc": "12369:152:1",
													"nodeType": "YulBlock",
													"src": "12369:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12386:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12389:77:1",
																		"nodeType": "YulLiteral",
																		"src": "12389:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12379:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12379:6:1"
																},
																"nativeSrc": "12379:88:1",
																"nodeType": "YulFunctionCall",
																"src": "12379:88:1"
															},
															"nativeSrc": "12379:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "12379:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12483:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12483:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12486:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12486:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12476:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12476:6:1"
																},
																"nativeSrc": "12476:15:1",
																"nodeType": "YulFunctionCall",
																"src": "12476:15:1"
															},
															"nativeSrc": "12476:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "12476:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12507:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12507:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12510:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12510:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12500:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12500:6:1"
																},
																"nativeSrc": "12500:15:1",
																"nodeType": "YulFunctionCall",
																"src": "12500:15:1"
															},
															"nativeSrc": "12500:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "12500:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "12341:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "12341:180:1"
											},
											{
												"body": {
													"nativeSrc": "12578:269:1",
													"nodeType": "YulBlock",
													"src": "12578:269:1",
													"statements": [
														{
															"nativeSrc": "12588:22:1",
															"nodeType": "YulAssignment",
															"src": "12588:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12602:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "12602:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12608:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12608:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12598:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12598:3:1"
																},
																"nativeSrc": "12598:12:1",
																"nodeType": "YulFunctionCall",
																"src": "12598:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12588:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12588:6:1"
																}
															]
														},
														{
															"nativeSrc": "12619:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12619:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12649:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "12649:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12655:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12655:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12645:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12645:3:1"
																},
																"nativeSrc": "12645:12:1",
																"nodeType": "YulFunctionCall",
																"src": "12645:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12623:18:1",
																	"nodeType": "YulTypedName",
																	"src": "12623:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12696:51:1",
																"nodeType": "YulBlock",
																"src": "12696:51:1",
																"statements": [
																	{
																		"nativeSrc": "12710:27:1",
																		"nodeType": "YulAssignment",
																		"src": "12710:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12724:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "12724:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12732:4:1",
																					"nodeType": "YulLiteral",
																					"src": "12732:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12720:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "12720:3:1"
																			},
																			"nativeSrc": "12720:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12720:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12710:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12710:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12676:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "12676:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12669:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12669:6:1"
																},
																"nativeSrc": "12669:26:1",
																"nodeType": "YulFunctionCall",
																"src": "12669:26:1"
															},
															"nativeSrc": "12666:81:1",
															"nodeType": "YulIf",
															"src": "12666:81:1"
														},
														{
															"body": {
																"nativeSrc": "12799:42:1",
																"nodeType": "YulBlock",
																"src": "12799:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12813:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "12813:16:1"
																			},
																			"nativeSrc": "12813:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12813:18:1"
																		},
																		"nativeSrc": "12813:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12813:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12763:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "12763:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12786:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12786:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12794:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12794:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12783:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "12783:2:1"
																		},
																		"nativeSrc": "12783:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12783:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12760:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "12760:2:1"
																},
																"nativeSrc": "12760:38:1",
																"nodeType": "YulFunctionCall",
																"src": "12760:38:1"
															},
															"nativeSrc": "12757:84:1",
															"nodeType": "YulIf",
															"src": "12757:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12527:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12562:4:1",
														"nodeType": "YulTypedName",
														"src": "12562:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12571:6:1",
														"nodeType": "YulTypedName",
														"src": "12571:6:1",
														"type": ""
													}
												],
												"src": "12527:320:1"
											},
											{
												"body": {
													"nativeSrc": "13007:288:1",
													"nodeType": "YulBlock",
													"src": "13007:288:1",
													"statements": [
														{
															"nativeSrc": "13017:26:1",
															"nodeType": "YulAssignment",
															"src": "13017:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13029:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13029:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13040:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13040:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13025:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13025:3:1"
																},
																"nativeSrc": "13025:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13025:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13017:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13017:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13097:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13097:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13110:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13110:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13121:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13121:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13106:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13106:3:1"
																		},
																		"nativeSrc": "13106:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13106:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13053:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13053:43:1"
																},
																"nativeSrc": "13053:71:1",
																"nodeType": "YulFunctionCall",
																"src": "13053:71:1"
															},
															"nativeSrc": "13053:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "13053:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13178:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13178:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13191:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13191:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13202:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13202:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13187:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13187:3:1"
																		},
																		"nativeSrc": "13187:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13187:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13134:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13134:43:1"
																},
																"nativeSrc": "13134:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13134:72:1"
															},
															"nativeSrc": "13134:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13134:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13260:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13260:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13273:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13273:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13284:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13284:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13269:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13269:3:1"
																		},
																		"nativeSrc": "13269:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13269:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13216:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13216:43:1"
																},
																"nativeSrc": "13216:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13216:72:1"
															},
															"nativeSrc": "13216:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13216:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "12853:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12963:9:1",
														"nodeType": "YulTypedName",
														"src": "12963:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12975:6:1",
														"nodeType": "YulTypedName",
														"src": "12975:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12983:6:1",
														"nodeType": "YulTypedName",
														"src": "12983:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12991:6:1",
														"nodeType": "YulTypedName",
														"src": "12991:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13002:4:1",
														"nodeType": "YulTypedName",
														"src": "13002:4:1",
														"type": ""
													}
												],
												"src": "12853:442:1"
											},
											{
												"body": {
													"nativeSrc": "13407:62:1",
													"nodeType": "YulBlock",
													"src": "13407:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13429:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "13429:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13437:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13437:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13425:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13425:3:1"
																		},
																		"nativeSrc": "13425:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13425:14:1"
																	},
																	{
																		"hexValue": "5075626c6963204d696e7420436c6f736564",
																		"kind": "string",
																		"nativeSrc": "13441:20:1",
																		"nodeType": "YulLiteral",
																		"src": "13441:20:1",
																		"type": "",
																		"value": "Public Mint Closed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13418:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13418:6:1"
																},
																"nativeSrc": "13418:44:1",
																"nodeType": "YulFunctionCall",
																"src": "13418:44:1"
															},
															"nativeSrc": "13418:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "13418:44:1"
														}
													]
												},
												"name": "store_literal_in_memory_61cfb3f8f290d71745242e1d6d2c8c8eb692c2a985bf3b95041ff77b8a87add1",
												"nativeSrc": "13301:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13399:6:1",
														"nodeType": "YulTypedName",
														"src": "13399:6:1",
														"type": ""
													}
												],
												"src": "13301:168:1"
											},
											{
												"body": {
													"nativeSrc": "13621:220:1",
													"nodeType": "YulBlock",
													"src": "13621:220:1",
													"statements": [
														{
															"nativeSrc": "13631:74:1",
															"nodeType": "YulAssignment",
															"src": "13631:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13697:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13697:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13702:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13702:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13638:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "13638:58:1"
																},
																"nativeSrc": "13638:67:1",
																"nodeType": "YulFunctionCall",
																"src": "13638:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13631:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13631:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13803:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13803:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_61cfb3f8f290d71745242e1d6d2c8c8eb692c2a985bf3b95041ff77b8a87add1",
																	"nativeSrc": "13714:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "13714:88:1"
																},
																"nativeSrc": "13714:93:1",
																"nodeType": "YulFunctionCall",
																"src": "13714:93:1"
															},
															"nativeSrc": "13714:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "13714:93:1"
														},
														{
															"nativeSrc": "13816:19:1",
															"nodeType": "YulAssignment",
															"src": "13816:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13827:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13827:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13832:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13832:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13823:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13823:3:1"
																},
																"nativeSrc": "13823:12:1",
																"nodeType": "YulFunctionCall",
																"src": "13823:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13816:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13816:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_61cfb3f8f290d71745242e1d6d2c8c8eb692c2a985bf3b95041ff77b8a87add1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13475:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13609:3:1",
														"nodeType": "YulTypedName",
														"src": "13609:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13617:3:1",
														"nodeType": "YulTypedName",
														"src": "13617:3:1",
														"type": ""
													}
												],
												"src": "13475:366:1"
											},
											{
												"body": {
													"nativeSrc": "14018:248:1",
													"nodeType": "YulBlock",
													"src": "14018:248:1",
													"statements": [
														{
															"nativeSrc": "14028:26:1",
															"nodeType": "YulAssignment",
															"src": "14028:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14040:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14040:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14051:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14051:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14036:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14036:3:1"
																},
																"nativeSrc": "14036:18:1",
																"nodeType": "YulFunctionCall",
																"src": "14036:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14028:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14028:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14075:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14075:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14086:1:1",
																				"nodeType": "YulLiteral",
																				"src": "14086:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14071:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14071:3:1"
																		},
																		"nativeSrc": "14071:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14071:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14094:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "14094:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14100:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14100:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14090:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14090:3:1"
																		},
																		"nativeSrc": "14090:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14090:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14064:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14064:6:1"
																},
																"nativeSrc": "14064:47:1",
																"nodeType": "YulFunctionCall",
																"src": "14064:47:1"
															},
															"nativeSrc": "14064:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "14064:47:1"
														},
														{
															"nativeSrc": "14120:139:1",
															"nodeType": "YulAssignment",
															"src": "14120:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14254:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "14254:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_61cfb3f8f290d71745242e1d6d2c8c8eb692c2a985bf3b95041ff77b8a87add1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14128:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "14128:124:1"
																},
																"nativeSrc": "14128:131:1",
																"nodeType": "YulFunctionCall",
																"src": "14128:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14120:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14120:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_61cfb3f8f290d71745242e1d6d2c8c8eb692c2a985bf3b95041ff77b8a87add1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13847:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13998:9:1",
														"nodeType": "YulTypedName",
														"src": "13998:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14013:4:1",
														"nodeType": "YulTypedName",
														"src": "14013:4:1",
														"type": ""
													}
												],
												"src": "13847:419:1"
											},
											{
												"body": {
													"nativeSrc": "14378:57:1",
													"nodeType": "YulBlock",
													"src": "14378:57:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14400:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "14400:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14408:1:1",
																				"nodeType": "YulLiteral",
																				"src": "14408:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14396:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14396:3:1"
																		},
																		"nativeSrc": "14396:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14396:14:1"
																	},
																	{
																		"hexValue": "4b686f6e67206475207469656e",
																		"kind": "string",
																		"nativeSrc": "14412:15:1",
																		"nodeType": "YulLiteral",
																		"src": "14412:15:1",
																		"type": "",
																		"value": "Khong du tien"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14389:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14389:6:1"
																},
																"nativeSrc": "14389:39:1",
																"nodeType": "YulFunctionCall",
																"src": "14389:39:1"
															},
															"nativeSrc": "14389:39:1",
															"nodeType": "YulExpressionStatement",
															"src": "14389:39:1"
														}
													]
												},
												"name": "store_literal_in_memory_a86de37de099325fdba98bd973ee353863620b1b9e5689a27bb937f240986db1",
												"nativeSrc": "14272:163:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14370:6:1",
														"nodeType": "YulTypedName",
														"src": "14370:6:1",
														"type": ""
													}
												],
												"src": "14272:163:1"
											},
											{
												"body": {
													"nativeSrc": "14587:220:1",
													"nodeType": "YulBlock",
													"src": "14587:220:1",
													"statements": [
														{
															"nativeSrc": "14597:74:1",
															"nodeType": "YulAssignment",
															"src": "14597:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14663:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14663:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14668:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14668:2:1",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14604:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "14604:58:1"
																},
																"nativeSrc": "14604:67:1",
																"nodeType": "YulFunctionCall",
																"src": "14604:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14597:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14597:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14769:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14769:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a86de37de099325fdba98bd973ee353863620b1b9e5689a27bb937f240986db1",
																	"nativeSrc": "14680:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "14680:88:1"
																},
																"nativeSrc": "14680:93:1",
																"nodeType": "YulFunctionCall",
																"src": "14680:93:1"
															},
															"nativeSrc": "14680:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "14680:93:1"
														},
														{
															"nativeSrc": "14782:19:1",
															"nodeType": "YulAssignment",
															"src": "14782:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14793:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14793:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14798:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14789:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14789:3:1"
																},
																"nativeSrc": "14789:12:1",
																"nodeType": "YulFunctionCall",
																"src": "14789:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14782:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14782:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a86de37de099325fdba98bd973ee353863620b1b9e5689a27bb937f240986db1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14441:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14575:3:1",
														"nodeType": "YulTypedName",
														"src": "14575:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14583:3:1",
														"nodeType": "YulTypedName",
														"src": "14583:3:1",
														"type": ""
													}
												],
												"src": "14441:366:1"
											},
											{
												"body": {
													"nativeSrc": "14984:248:1",
													"nodeType": "YulBlock",
													"src": "14984:248:1",
													"statements": [
														{
															"nativeSrc": "14994:26:1",
															"nodeType": "YulAssignment",
															"src": "14994:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15006:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "15006:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15017:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15017:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15002:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15002:3:1"
																},
																"nativeSrc": "15002:18:1",
																"nodeType": "YulFunctionCall",
																"src": "15002:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14994:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14994:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15041:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15041:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15052:1:1",
																				"nodeType": "YulLiteral",
																				"src": "15052:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15037:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15037:3:1"
																		},
																		"nativeSrc": "15037:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15037:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15060:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "15060:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15066:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15066:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15056:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15056:3:1"
																		},
																		"nativeSrc": "15056:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15056:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15030:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15030:6:1"
																},
																"nativeSrc": "15030:47:1",
																"nodeType": "YulFunctionCall",
																"src": "15030:47:1"
															},
															"nativeSrc": "15030:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "15030:47:1"
														},
														{
															"nativeSrc": "15086:139:1",
															"nodeType": "YulAssignment",
															"src": "15086:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15220:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "15220:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a86de37de099325fdba98bd973ee353863620b1b9e5689a27bb937f240986db1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15094:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "15094:124:1"
																},
																"nativeSrc": "15094:131:1",
																"nodeType": "YulFunctionCall",
																"src": "15094:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15086:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15086:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a86de37de099325fdba98bd973ee353863620b1b9e5689a27bb937f240986db1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14813:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14964:9:1",
														"nodeType": "YulTypedName",
														"src": "14964:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14979:4:1",
														"nodeType": "YulTypedName",
														"src": "14979:4:1",
														"type": ""
													}
												],
												"src": "14813:419:1"
											},
											{
												"body": {
													"nativeSrc": "15344:64:1",
													"nodeType": "YulBlock",
													"src": "15344:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15366:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "15366:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15374:1:1",
																				"nodeType": "YulLiteral",
																				"src": "15374:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15362:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15362:3:1"
																		},
																		"nativeSrc": "15362:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15362:14:1"
																	},
																	{
																		"hexValue": "416c6c6f77697374204d696e7420436c6f736564",
																		"kind": "string",
																		"nativeSrc": "15378:22:1",
																		"nodeType": "YulLiteral",
																		"src": "15378:22:1",
																		"type": "",
																		"value": "Allowist Mint Closed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15355:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15355:6:1"
																},
																"nativeSrc": "15355:46:1",
																"nodeType": "YulFunctionCall",
																"src": "15355:46:1"
															},
															"nativeSrc": "15355:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "15355:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_bc0e333509ab750e7eef18b674ce3a3ec259182436c6d413981d959da546bafc",
												"nativeSrc": "15238:170:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15336:6:1",
														"nodeType": "YulTypedName",
														"src": "15336:6:1",
														"type": ""
													}
												],
												"src": "15238:170:1"
											},
											{
												"body": {
													"nativeSrc": "15560:220:1",
													"nodeType": "YulBlock",
													"src": "15560:220:1",
													"statements": [
														{
															"nativeSrc": "15570:74:1",
															"nodeType": "YulAssignment",
															"src": "15570:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15636:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15636:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15641:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15641:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15577:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "15577:58:1"
																},
																"nativeSrc": "15577:67:1",
																"nodeType": "YulFunctionCall",
																"src": "15577:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15570:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15570:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15742:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15742:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bc0e333509ab750e7eef18b674ce3a3ec259182436c6d413981d959da546bafc",
																	"nativeSrc": "15653:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "15653:88:1"
																},
																"nativeSrc": "15653:93:1",
																"nodeType": "YulFunctionCall",
																"src": "15653:93:1"
															},
															"nativeSrc": "15653:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "15653:93:1"
														},
														{
															"nativeSrc": "15755:19:1",
															"nodeType": "YulAssignment",
															"src": "15755:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15766:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15766:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15771:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15771:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15762:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15762:3:1"
																},
																"nativeSrc": "15762:12:1",
																"nodeType": "YulFunctionCall",
																"src": "15762:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15755:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15755:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bc0e333509ab750e7eef18b674ce3a3ec259182436c6d413981d959da546bafc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15414:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15548:3:1",
														"nodeType": "YulTypedName",
														"src": "15548:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15556:3:1",
														"nodeType": "YulTypedName",
														"src": "15556:3:1",
														"type": ""
													}
												],
												"src": "15414:366:1"
											},
											{
												"body": {
													"nativeSrc": "15957:248:1",
													"nodeType": "YulBlock",
													"src": "15957:248:1",
													"statements": [
														{
															"nativeSrc": "15967:26:1",
															"nodeType": "YulAssignment",
															"src": "15967:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15979:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "15979:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15990:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15990:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15975:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15975:3:1"
																},
																"nativeSrc": "15975:18:1",
																"nodeType": "YulFunctionCall",
																"src": "15975:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15967:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15967:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16014:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16014:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16025:1:1",
																				"nodeType": "YulLiteral",
																				"src": "16025:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16010:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16010:3:1"
																		},
																		"nativeSrc": "16010:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16010:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16033:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "16033:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16039:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16039:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16029:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16029:3:1"
																		},
																		"nativeSrc": "16029:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16029:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16003:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16003:6:1"
																},
																"nativeSrc": "16003:47:1",
																"nodeType": "YulFunctionCall",
																"src": "16003:47:1"
															},
															"nativeSrc": "16003:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "16003:47:1"
														},
														{
															"nativeSrc": "16059:139:1",
															"nodeType": "YulAssignment",
															"src": "16059:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16193:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "16193:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bc0e333509ab750e7eef18b674ce3a3ec259182436c6d413981d959da546bafc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16067:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "16067:124:1"
																},
																"nativeSrc": "16067:131:1",
																"nodeType": "YulFunctionCall",
																"src": "16067:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16059:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "16059:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bc0e333509ab750e7eef18b674ce3a3ec259182436c6d413981d959da546bafc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15786:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15937:9:1",
														"nodeType": "YulTypedName",
														"src": "15937:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15952:4:1",
														"nodeType": "YulTypedName",
														"src": "15952:4:1",
														"type": ""
													}
												],
												"src": "15786:419:1"
											},
											{
												"body": {
													"nativeSrc": "16317:63:1",
													"nodeType": "YulBlock",
													"src": "16317:63:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16339:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16339:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16347:1:1",
																				"nodeType": "YulLiteral",
																				"src": "16347:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16335:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16335:3:1"
																		},
																		"nativeSrc": "16335:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16335:14:1"
																	},
																	{
																		"hexValue": "42616e206b686f6e6720636f20717579656e21",
																		"kind": "string",
																		"nativeSrc": "16351:21:1",
																		"nodeType": "YulLiteral",
																		"src": "16351:21:1",
																		"type": "",
																		"value": "Ban khong co quyen!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16328:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16328:6:1"
																},
																"nativeSrc": "16328:45:1",
																"nodeType": "YulFunctionCall",
																"src": "16328:45:1"
															},
															"nativeSrc": "16328:45:1",
															"nodeType": "YulExpressionStatement",
															"src": "16328:45:1"
														}
													]
												},
												"name": "store_literal_in_memory_fbae475842e005629bc2b35231dc8b6e9845355bc9fdd97ff31d41bafdc9ce2b",
												"nativeSrc": "16211:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16309:6:1",
														"nodeType": "YulTypedName",
														"src": "16309:6:1",
														"type": ""
													}
												],
												"src": "16211:169:1"
											},
											{
												"body": {
													"nativeSrc": "16532:220:1",
													"nodeType": "YulBlock",
													"src": "16532:220:1",
													"statements": [
														{
															"nativeSrc": "16542:74:1",
															"nodeType": "YulAssignment",
															"src": "16542:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16608:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "16608:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16613:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16613:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16549:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "16549:58:1"
																},
																"nativeSrc": "16549:67:1",
																"nodeType": "YulFunctionCall",
																"src": "16549:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16542:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16542:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16714:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "16714:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fbae475842e005629bc2b35231dc8b6e9845355bc9fdd97ff31d41bafdc9ce2b",
																	"nativeSrc": "16625:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "16625:88:1"
																},
																"nativeSrc": "16625:93:1",
																"nodeType": "YulFunctionCall",
																"src": "16625:93:1"
															},
															"nativeSrc": "16625:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "16625:93:1"
														},
														{
															"nativeSrc": "16727:19:1",
															"nodeType": "YulAssignment",
															"src": "16727:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16738:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "16738:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16743:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16743:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16734:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16734:3:1"
																},
																"nativeSrc": "16734:12:1",
																"nodeType": "YulFunctionCall",
																"src": "16734:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16727:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16727:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fbae475842e005629bc2b35231dc8b6e9845355bc9fdd97ff31d41bafdc9ce2b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16386:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16520:3:1",
														"nodeType": "YulTypedName",
														"src": "16520:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16528:3:1",
														"nodeType": "YulTypedName",
														"src": "16528:3:1",
														"type": ""
													}
												],
												"src": "16386:366:1"
											},
											{
												"body": {
													"nativeSrc": "16929:248:1",
													"nodeType": "YulBlock",
													"src": "16929:248:1",
													"statements": [
														{
															"nativeSrc": "16939:26:1",
															"nodeType": "YulAssignment",
															"src": "16939:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16951:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "16951:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16962:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16962:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16947:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16947:3:1"
																},
																"nativeSrc": "16947:18:1",
																"nodeType": "YulFunctionCall",
																"src": "16947:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16939:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "16939:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16986:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16986:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16997:1:1",
																				"nodeType": "YulLiteral",
																				"src": "16997:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16982:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16982:3:1"
																		},
																		"nativeSrc": "16982:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16982:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17005:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "17005:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17011:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17011:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17001:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17001:3:1"
																		},
																		"nativeSrc": "17001:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17001:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16975:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16975:6:1"
																},
																"nativeSrc": "16975:47:1",
																"nodeType": "YulFunctionCall",
																"src": "16975:47:1"
															},
															"nativeSrc": "16975:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "16975:47:1"
														},
														{
															"nativeSrc": "17031:139:1",
															"nodeType": "YulAssignment",
															"src": "17031:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17165:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "17165:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fbae475842e005629bc2b35231dc8b6e9845355bc9fdd97ff31d41bafdc9ce2b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17039:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "17039:124:1"
																},
																"nativeSrc": "17039:131:1",
																"nodeType": "YulFunctionCall",
																"src": "17039:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17031:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "17031:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fbae475842e005629bc2b35231dc8b6e9845355bc9fdd97ff31d41bafdc9ce2b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16758:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16909:9:1",
														"nodeType": "YulTypedName",
														"src": "16909:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16924:4:1",
														"nodeType": "YulTypedName",
														"src": "16924:4:1",
														"type": ""
													}
												],
												"src": "16758:419:1"
											},
											{
												"body": {
													"nativeSrc": "17309:206:1",
													"nodeType": "YulBlock",
													"src": "17309:206:1",
													"statements": [
														{
															"nativeSrc": "17319:26:1",
															"nodeType": "YulAssignment",
															"src": "17319:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17331:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "17331:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17342:2:1",
																		"nodeType": "YulLiteral",
																		"src": "17342:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17327:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17327:3:1"
																},
																"nativeSrc": "17327:18:1",
																"nodeType": "YulFunctionCall",
																"src": "17327:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17319:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "17319:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17399:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17399:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17412:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17412:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17423:1:1",
																				"nodeType": "YulLiteral",
																				"src": "17423:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17408:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17408:3:1"
																		},
																		"nativeSrc": "17408:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17408:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17355:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "17355:43:1"
																},
																"nativeSrc": "17355:71:1",
																"nodeType": "YulFunctionCall",
																"src": "17355:71:1"
															},
															"nativeSrc": "17355:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "17355:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17480:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17480:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17493:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17493:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17504:2:1",
																				"nodeType": "YulLiteral",
																				"src": "17504:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17489:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17489:3:1"
																		},
																		"nativeSrc": "17489:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17489:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17436:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "17436:43:1"
																},
																"nativeSrc": "17436:72:1",
																"nodeType": "YulFunctionCall",
																"src": "17436:72:1"
															},
															"nativeSrc": "17436:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "17436:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17183:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17273:9:1",
														"nodeType": "YulTypedName",
														"src": "17273:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17285:6:1",
														"nodeType": "YulTypedName",
														"src": "17285:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17293:6:1",
														"nodeType": "YulTypedName",
														"src": "17293:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17304:4:1",
														"nodeType": "YulTypedName",
														"src": "17304:4:1",
														"type": ""
													}
												],
												"src": "17183:332:1"
											},
											{
												"body": {
													"nativeSrc": "17549:152:1",
													"nodeType": "YulBlock",
													"src": "17549:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17566:1:1",
																		"nodeType": "YulLiteral",
																		"src": "17566:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17569:77:1",
																		"nodeType": "YulLiteral",
																		"src": "17569:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17559:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17559:6:1"
																},
																"nativeSrc": "17559:88:1",
																"nodeType": "YulFunctionCall",
																"src": "17559:88:1"
															},
															"nativeSrc": "17559:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "17559:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17663:1:1",
																		"nodeType": "YulLiteral",
																		"src": "17663:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17666:4:1",
																		"nodeType": "YulLiteral",
																		"src": "17666:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17656:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17656:6:1"
																},
																"nativeSrc": "17656:15:1",
																"nodeType": "YulFunctionCall",
																"src": "17656:15:1"
															},
															"nativeSrc": "17656:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "17656:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17687:1:1",
																		"nodeType": "YulLiteral",
																		"src": "17687:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17690:4:1",
																		"nodeType": "YulLiteral",
																		"src": "17690:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17680:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17680:6:1"
																},
																"nativeSrc": "17680:15:1",
																"nodeType": "YulFunctionCall",
																"src": "17680:15:1"
															},
															"nativeSrc": "17680:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "17680:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "17521:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "17521:180:1"
											},
											{
												"body": {
													"nativeSrc": "17821:34:1",
													"nodeType": "YulBlock",
													"src": "17821:34:1",
													"statements": [
														{
															"nativeSrc": "17831:18:1",
															"nodeType": "YulAssignment",
															"src": "17831:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "17846:3:1",
																"nodeType": "YulIdentifier",
																"src": "17846:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "17831:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "17831:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "17707:148:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17793:3:1",
														"nodeType": "YulTypedName",
														"src": "17793:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "17798:6:1",
														"nodeType": "YulTypedName",
														"src": "17798:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "17809:11:1",
														"nodeType": "YulTypedName",
														"src": "17809:11:1",
														"type": ""
													}
												],
												"src": "17707:148:1"
											},
											{
												"body": {
													"nativeSrc": "17971:280:1",
													"nodeType": "YulBlock",
													"src": "17971:280:1",
													"statements": [
														{
															"nativeSrc": "17981:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "17981:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18028:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "18028:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "17995:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "17995:32:1"
																},
																"nativeSrc": "17995:39:1",
																"nodeType": "YulFunctionCall",
																"src": "17995:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "17985:6:1",
																	"nodeType": "YulTypedName",
																	"src": "17985:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18043:96:1",
															"nodeType": "YulAssignment",
															"src": "18043:96:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18127:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "18127:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18132:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18132:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18050:76:1",
																	"nodeType": "YulIdentifier",
																	"src": "18050:76:1"
																},
																"nativeSrc": "18050:89:1",
																"nodeType": "YulFunctionCall",
																"src": "18050:89:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18043:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18043:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18187:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "18187:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18194:4:1",
																				"nodeType": "YulLiteral",
																				"src": "18194:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18183:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18183:3:1"
																		},
																		"nativeSrc": "18183:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18183:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18201:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "18201:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18206:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18206:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "18148:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "18148:34:1"
																},
																"nativeSrc": "18148:65:1",
																"nodeType": "YulFunctionCall",
																"src": "18148:65:1"
															},
															"nativeSrc": "18148:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "18148:65:1"
														},
														{
															"nativeSrc": "18222:23:1",
															"nodeType": "YulAssignment",
															"src": "18222:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18233:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "18233:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18238:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18238:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18229:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18229:3:1"
																},
																"nativeSrc": "18229:16:1",
																"nodeType": "YulFunctionCall",
																"src": "18229:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18222:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18222:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "17861:390:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17952:5:1",
														"nodeType": "YulTypedName",
														"src": "17952:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17959:3:1",
														"nodeType": "YulTypedName",
														"src": "17959:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17967:3:1",
														"nodeType": "YulTypedName",
														"src": "17967:3:1",
														"type": ""
													}
												],
												"src": "17861:390:1"
											},
											{
												"body": {
													"nativeSrc": "18441:251:1",
													"nodeType": "YulBlock",
													"src": "18441:251:1",
													"statements": [
														{
															"nativeSrc": "18452:102:1",
															"nodeType": "YulAssignment",
															"src": "18452:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18541:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18541:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18550:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "18550:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18459:81:1",
																	"nodeType": "YulIdentifier",
																	"src": "18459:81:1"
																},
																"nativeSrc": "18459:95:1",
																"nodeType": "YulFunctionCall",
																"src": "18459:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18452:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18452:3:1"
																}
															]
														},
														{
															"nativeSrc": "18564:102:1",
															"nodeType": "YulAssignment",
															"src": "18564:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18653:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18653:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18662:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "18662:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18571:81:1",
																	"nodeType": "YulIdentifier",
																	"src": "18571:81:1"
																},
																"nativeSrc": "18571:95:1",
																"nodeType": "YulFunctionCall",
																"src": "18571:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18564:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18564:3:1"
																}
															]
														},
														{
															"nativeSrc": "18676:10:1",
															"nodeType": "YulAssignment",
															"src": "18676:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "18683:3:1",
																"nodeType": "YulIdentifier",
																"src": "18683:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18676:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18676:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "18257:435:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18412:3:1",
														"nodeType": "YulTypedName",
														"src": "18412:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18418:6:1",
														"nodeType": "YulTypedName",
														"src": "18418:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18426:6:1",
														"nodeType": "YulTypedName",
														"src": "18426:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18437:3:1",
														"nodeType": "YulTypedName",
														"src": "18437:3:1",
														"type": ""
													}
												],
												"src": "18257:435:1"
											},
											{
												"body": {
													"nativeSrc": "18804:58:1",
													"nodeType": "YulBlock",
													"src": "18804:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18826:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "18826:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18834:1:1",
																				"nodeType": "YulLiteral",
																				"src": "18834:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18822:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18822:3:1"
																		},
																		"nativeSrc": "18822:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18822:14:1"
																	},
																	{
																		"hexValue": "4b686f6e6720636f6e204e465421",
																		"kind": "string",
																		"nativeSrc": "18838:16:1",
																		"nodeType": "YulLiteral",
																		"src": "18838:16:1",
																		"type": "",
																		"value": "Khong con NFT!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18815:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "18815:6:1"
																},
																"nativeSrc": "18815:40:1",
																"nodeType": "YulFunctionCall",
																"src": "18815:40:1"
															},
															"nativeSrc": "18815:40:1",
															"nodeType": "YulExpressionStatement",
															"src": "18815:40:1"
														}
													]
												},
												"name": "store_literal_in_memory_7c04249364a04dff6b55ac8edcf495f23fd180f6458f000171cd9318f06be5c6",
												"nativeSrc": "18698:164:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18796:6:1",
														"nodeType": "YulTypedName",
														"src": "18796:6:1",
														"type": ""
													}
												],
												"src": "18698:164:1"
											},
											{
												"body": {
													"nativeSrc": "19014:220:1",
													"nodeType": "YulBlock",
													"src": "19014:220:1",
													"statements": [
														{
															"nativeSrc": "19024:74:1",
															"nodeType": "YulAssignment",
															"src": "19024:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19090:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "19090:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19095:2:1",
																		"nodeType": "YulLiteral",
																		"src": "19095:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19031:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "19031:58:1"
																},
																"nativeSrc": "19031:67:1",
																"nodeType": "YulFunctionCall",
																"src": "19031:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19024:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "19024:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19196:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "19196:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7c04249364a04dff6b55ac8edcf495f23fd180f6458f000171cd9318f06be5c6",
																	"nativeSrc": "19107:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "19107:88:1"
																},
																"nativeSrc": "19107:93:1",
																"nodeType": "YulFunctionCall",
																"src": "19107:93:1"
															},
															"nativeSrc": "19107:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "19107:93:1"
														},
														{
															"nativeSrc": "19209:19:1",
															"nodeType": "YulAssignment",
															"src": "19209:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19220:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "19220:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19225:2:1",
																		"nodeType": "YulLiteral",
																		"src": "19225:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19216:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "19216:3:1"
																},
																"nativeSrc": "19216:12:1",
																"nodeType": "YulFunctionCall",
																"src": "19216:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19209:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "19209:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7c04249364a04dff6b55ac8edcf495f23fd180f6458f000171cd9318f06be5c6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18868:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19002:3:1",
														"nodeType": "YulTypedName",
														"src": "19002:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19010:3:1",
														"nodeType": "YulTypedName",
														"src": "19010:3:1",
														"type": ""
													}
												],
												"src": "18868:366:1"
											},
											{
												"body": {
													"nativeSrc": "19411:248:1",
													"nodeType": "YulBlock",
													"src": "19411:248:1",
													"statements": [
														{
															"nativeSrc": "19421:26:1",
															"nodeType": "YulAssignment",
															"src": "19421:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19433:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "19433:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19444:2:1",
																		"nodeType": "YulLiteral",
																		"src": "19444:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19429:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "19429:3:1"
																},
																"nativeSrc": "19429:18:1",
																"nodeType": "YulFunctionCall",
																"src": "19429:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19421:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "19421:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19468:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "19468:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19479:1:1",
																				"nodeType": "YulLiteral",
																				"src": "19479:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19464:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "19464:3:1"
																		},
																		"nativeSrc": "19464:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19464:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19487:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "19487:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19493:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "19493:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19483:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "19483:3:1"
																		},
																		"nativeSrc": "19483:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19483:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19457:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "19457:6:1"
																},
																"nativeSrc": "19457:47:1",
																"nodeType": "YulFunctionCall",
																"src": "19457:47:1"
															},
															"nativeSrc": "19457:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "19457:47:1"
														},
														{
															"nativeSrc": "19513:139:1",
															"nodeType": "YulAssignment",
															"src": "19513:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19647:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "19647:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7c04249364a04dff6b55ac8edcf495f23fd180f6458f000171cd9318f06be5c6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19521:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "19521:124:1"
																},
																"nativeSrc": "19521:131:1",
																"nodeType": "YulFunctionCall",
																"src": "19521:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19513:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "19513:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7c04249364a04dff6b55ac8edcf495f23fd180f6458f000171cd9318f06be5c6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19240:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19391:9:1",
														"nodeType": "YulTypedName",
														"src": "19391:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19406:4:1",
														"nodeType": "YulTypedName",
														"src": "19406:4:1",
														"type": ""
													}
												],
												"src": "19240:419:1"
											},
											{
												"body": {
													"nativeSrc": "19693:152:1",
													"nodeType": "YulBlock",
													"src": "19693:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19710:1:1",
																		"nodeType": "YulLiteral",
																		"src": "19710:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19713:77:1",
																		"nodeType": "YulLiteral",
																		"src": "19713:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19703:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "19703:6:1"
																},
																"nativeSrc": "19703:88:1",
																"nodeType": "YulFunctionCall",
																"src": "19703:88:1"
															},
															"nativeSrc": "19703:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "19703:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19807:1:1",
																		"nodeType": "YulLiteral",
																		"src": "19807:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19810:4:1",
																		"nodeType": "YulLiteral",
																		"src": "19810:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19800:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "19800:6:1"
																},
																"nativeSrc": "19800:15:1",
																"nodeType": "YulFunctionCall",
																"src": "19800:15:1"
															},
															"nativeSrc": "19800:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "19800:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19831:1:1",
																		"nodeType": "YulLiteral",
																		"src": "19831:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19834:4:1",
																		"nodeType": "YulLiteral",
																		"src": "19834:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19824:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "19824:6:1"
																},
																"nativeSrc": "19824:15:1",
																"nodeType": "YulFunctionCall",
																"src": "19824:15:1"
															},
															"nativeSrc": "19824:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "19824:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "19665:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "19665:180:1"
											},
											{
												"body": {
													"nativeSrc": "19894:190:1",
													"nodeType": "YulBlock",
													"src": "19894:190:1",
													"statements": [
														{
															"nativeSrc": "19904:33:1",
															"nodeType": "YulAssignment",
															"src": "19904:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19931:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "19931:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19913:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "19913:17:1"
																},
																"nativeSrc": "19913:24:1",
																"nodeType": "YulFunctionCall",
																"src": "19913:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "19904:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "19904:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20027:22:1",
																"nodeType": "YulBlock",
																"src": "20027:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20029:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "20029:16:1"
																			},
																			"nativeSrc": "20029:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "20029:18:1"
																		},
																		"nativeSrc": "20029:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "20029:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19952:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "19952:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19959:66:1",
																		"nodeType": "YulLiteral",
																		"src": "19959:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "19949:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "19949:2:1"
																},
																"nativeSrc": "19949:77:1",
																"nodeType": "YulFunctionCall",
																"src": "19949:77:1"
															},
															"nativeSrc": "19946:103:1",
															"nodeType": "YulIf",
															"src": "19946:103:1"
														},
														{
															"nativeSrc": "20058:20:1",
															"nodeType": "YulAssignment",
															"src": "20058:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20069:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "20069:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20076:1:1",
																		"nodeType": "YulLiteral",
																		"src": "20076:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20065:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20065:3:1"
																},
																"nativeSrc": "20065:13:1",
																"nodeType": "YulFunctionCall",
																"src": "20065:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "20058:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20058:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "19851:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19880:5:1",
														"nodeType": "YulTypedName",
														"src": "19880:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "19890:3:1",
														"nodeType": "YulTypedName",
														"src": "19890:3:1",
														"type": ""
													}
												],
												"src": "19851:233:1"
											},
											{
												"body": {
													"nativeSrc": "20148:40:1",
													"nodeType": "YulBlock",
													"src": "20148:40:1",
													"statements": [
														{
															"nativeSrc": "20159:22:1",
															"nodeType": "YulAssignment",
															"src": "20159:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20175:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "20175:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20169:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "20169:5:1"
																},
																"nativeSrc": "20169:12:1",
																"nodeType": "YulFunctionCall",
																"src": "20169:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "20159:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "20159:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "20090:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20131:5:1",
														"nodeType": "YulTypedName",
														"src": "20131:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "20141:6:1",
														"nodeType": "YulTypedName",
														"src": "20141:6:1",
														"type": ""
													}
												],
												"src": "20090:98:1"
											},
											{
												"body": {
													"nativeSrc": "20289:73:1",
													"nodeType": "YulBlock",
													"src": "20289:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20306:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "20306:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20311:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "20311:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20299:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "20299:6:1"
																},
																"nativeSrc": "20299:19:1",
																"nodeType": "YulFunctionCall",
																"src": "20299:19:1"
															},
															"nativeSrc": "20299:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "20299:19:1"
														},
														{
															"nativeSrc": "20327:29:1",
															"nodeType": "YulAssignment",
															"src": "20327:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20346:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "20346:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20351:4:1",
																		"nodeType": "YulLiteral",
																		"src": "20351:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20342:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20342:3:1"
																},
																"nativeSrc": "20342:14:1",
																"nodeType": "YulFunctionCall",
																"src": "20342:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "20327:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "20327:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "20194:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20261:3:1",
														"nodeType": "YulTypedName",
														"src": "20261:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "20266:6:1",
														"nodeType": "YulTypedName",
														"src": "20266:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "20277:11:1",
														"nodeType": "YulTypedName",
														"src": "20277:11:1",
														"type": ""
													}
												],
												"src": "20194:168:1"
											},
											{
												"body": {
													"nativeSrc": "20458:283:1",
													"nodeType": "YulBlock",
													"src": "20458:283:1",
													"statements": [
														{
															"nativeSrc": "20468:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "20468:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20514:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "20514:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "20482:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "20482:31:1"
																},
																"nativeSrc": "20482:38:1",
																"nodeType": "YulFunctionCall",
																"src": "20482:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "20472:6:1",
																	"nodeType": "YulTypedName",
																	"src": "20472:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20529:77:1",
															"nodeType": "YulAssignment",
															"src": "20529:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20594:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "20594:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20599:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "20599:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "20536:57:1",
																	"nodeType": "YulIdentifier",
																	"src": "20536:57:1"
																},
																"nativeSrc": "20536:70:1",
																"nodeType": "YulFunctionCall",
																"src": "20536:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20529:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20529:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20654:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "20654:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20661:4:1",
																				"nodeType": "YulLiteral",
																				"src": "20661:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20650:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "20650:3:1"
																		},
																		"nativeSrc": "20650:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20650:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20668:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "20668:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20673:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "20673:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "20615:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "20615:34:1"
																},
																"nativeSrc": "20615:65:1",
																"nodeType": "YulFunctionCall",
																"src": "20615:65:1"
															},
															"nativeSrc": "20615:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "20615:65:1"
														},
														{
															"nativeSrc": "20689:46:1",
															"nodeType": "YulAssignment",
															"src": "20689:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20700:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "20700:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "20727:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "20727:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "20705:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "20705:21:1"
																		},
																		"nativeSrc": "20705:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20705:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20696:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20696:3:1"
																},
																"nativeSrc": "20696:39:1",
																"nodeType": "YulFunctionCall",
																"src": "20696:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20689:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20689:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "20368:373:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20439:5:1",
														"nodeType": "YulTypedName",
														"src": "20439:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20446:3:1",
														"nodeType": "YulTypedName",
														"src": "20446:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20454:3:1",
														"nodeType": "YulTypedName",
														"src": "20454:3:1",
														"type": ""
													}
												],
												"src": "20368:373:1"
											},
											{
												"body": {
													"nativeSrc": "20947:440:1",
													"nodeType": "YulBlock",
													"src": "20947:440:1",
													"statements": [
														{
															"nativeSrc": "20957:27:1",
															"nodeType": "YulAssignment",
															"src": "20957:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20969:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "20969:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20980:3:1",
																		"nodeType": "YulLiteral",
																		"src": "20980:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20965:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20965:3:1"
																},
																"nativeSrc": "20965:19:1",
																"nodeType": "YulFunctionCall",
																"src": "20965:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20957:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "20957:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21038:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21038:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21051:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "21051:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21062:1:1",
																				"nodeType": "YulLiteral",
																				"src": "21062:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21047:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "21047:3:1"
																		},
																		"nativeSrc": "21047:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21047:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20994:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "20994:43:1"
																},
																"nativeSrc": "20994:71:1",
																"nodeType": "YulFunctionCall",
																"src": "20994:71:1"
															},
															"nativeSrc": "20994:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "20994:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21119:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21119:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21132:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "21132:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21143:2:1",
																				"nodeType": "YulLiteral",
																				"src": "21143:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21128:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "21128:3:1"
																		},
																		"nativeSrc": "21128:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21128:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21075:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "21075:43:1"
																},
																"nativeSrc": "21075:72:1",
																"nodeType": "YulFunctionCall",
																"src": "21075:72:1"
															},
															"nativeSrc": "21075:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "21075:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21201:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21201:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21214:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "21214:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21225:2:1",
																				"nodeType": "YulLiteral",
																				"src": "21225:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21210:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "21210:3:1"
																		},
																		"nativeSrc": "21210:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21210:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21157:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "21157:43:1"
																},
																"nativeSrc": "21157:72:1",
																"nodeType": "YulFunctionCall",
																"src": "21157:72:1"
															},
															"nativeSrc": "21157:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "21157:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21250:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "21250:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21261:2:1",
																				"nodeType": "YulLiteral",
																				"src": "21261:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21246:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "21246:3:1"
																		},
																		"nativeSrc": "21246:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21246:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21270:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "21270:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21276:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "21276:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21266:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "21266:3:1"
																		},
																		"nativeSrc": "21266:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21266:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21239:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "21239:6:1"
																},
																"nativeSrc": "21239:48:1",
																"nodeType": "YulFunctionCall",
																"src": "21239:48:1"
															},
															"nativeSrc": "21239:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "21239:48:1"
														},
														{
															"nativeSrc": "21296:84:1",
															"nodeType": "YulAssignment",
															"src": "21296:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "21366:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21366:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "21375:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "21375:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "21304:61:1",
																	"nodeType": "YulIdentifier",
																	"src": "21304:61:1"
																},
																"nativeSrc": "21304:76:1",
																"nodeType": "YulFunctionCall",
																"src": "21304:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21296:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "21296:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "20747:640:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20895:9:1",
														"nodeType": "YulTypedName",
														"src": "20895:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "20907:6:1",
														"nodeType": "YulTypedName",
														"src": "20907:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20915:6:1",
														"nodeType": "YulTypedName",
														"src": "20915:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20923:6:1",
														"nodeType": "YulTypedName",
														"src": "20923:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20931:6:1",
														"nodeType": "YulTypedName",
														"src": "20931:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20942:4:1",
														"nodeType": "YulTypedName",
														"src": "20942:4:1",
														"type": ""
													}
												],
												"src": "20747:640:1"
											},
											{
												"body": {
													"nativeSrc": "21455:79:1",
													"nodeType": "YulBlock",
													"src": "21455:79:1",
													"statements": [
														{
															"nativeSrc": "21465:22:1",
															"nodeType": "YulAssignment",
															"src": "21465:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21480:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21480:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21474:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "21474:5:1"
																},
																"nativeSrc": "21474:13:1",
																"nodeType": "YulFunctionCall",
																"src": "21474:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21465:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "21465:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21522:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "21522:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "21496:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "21496:25:1"
																},
																"nativeSrc": "21496:32:1",
																"nodeType": "YulFunctionCall",
																"src": "21496:32:1"
															},
															"nativeSrc": "21496:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "21496:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "21393:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21433:6:1",
														"nodeType": "YulTypedName",
														"src": "21433:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21441:3:1",
														"nodeType": "YulTypedName",
														"src": "21441:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "21449:5:1",
														"nodeType": "YulTypedName",
														"src": "21449:5:1",
														"type": ""
													}
												],
												"src": "21393:141:1"
											},
											{
												"body": {
													"nativeSrc": "21616:273:1",
													"nodeType": "YulBlock",
													"src": "21616:273:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "21662:83:1",
																"nodeType": "YulBlock",
																"src": "21662:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21664:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "21664:77:1"
																			},
																			"nativeSrc": "21664:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "21664:79:1"
																		},
																		"nativeSrc": "21664:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "21664:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21637:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "21637:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21646:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "21646:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21633:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "21633:3:1"
																		},
																		"nativeSrc": "21633:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21633:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21658:2:1",
																		"nodeType": "YulLiteral",
																		"src": "21658:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21629:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "21629:3:1"
																},
																"nativeSrc": "21629:32:1",
																"nodeType": "YulFunctionCall",
																"src": "21629:32:1"
															},
															"nativeSrc": "21626:119:1",
															"nodeType": "YulIf",
															"src": "21626:119:1"
														},
														{
															"nativeSrc": "21755:127:1",
															"nodeType": "YulBlock",
															"src": "21755:127:1",
															"statements": [
																{
																	"nativeSrc": "21770:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21770:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21784:1:1",
																		"nodeType": "YulLiteral",
																		"src": "21784:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21774:6:1",
																			"nodeType": "YulTypedName",
																			"src": "21774:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21799:73:1",
																	"nodeType": "YulAssignment",
																	"src": "21799:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21844:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "21844:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21855:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "21855:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21840:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "21840:3:1"
																				},
																				"nativeSrc": "21840:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "21840:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21864:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "21864:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "21809:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "21809:30:1"
																		},
																		"nativeSrc": "21809:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21809:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21799:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "21799:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "21540:349:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21586:9:1",
														"nodeType": "YulTypedName",
														"src": "21586:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21597:7:1",
														"nodeType": "YulTypedName",
														"src": "21597:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21609:6:1",
														"nodeType": "YulTypedName",
														"src": "21609:6:1",
														"type": ""
													}
												],
												"src": "21540:349:1"
											},
											{
												"body": {
													"nativeSrc": "21923:152:1",
													"nodeType": "YulBlock",
													"src": "21923:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21940:1:1",
																		"nodeType": "YulLiteral",
																		"src": "21940:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21943:77:1",
																		"nodeType": "YulLiteral",
																		"src": "21943:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21933:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "21933:6:1"
																},
																"nativeSrc": "21933:88:1",
																"nodeType": "YulFunctionCall",
																"src": "21933:88:1"
															},
															"nativeSrc": "21933:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "21933:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22037:1:1",
																		"nodeType": "YulLiteral",
																		"src": "22037:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22040:4:1",
																		"nodeType": "YulLiteral",
																		"src": "22040:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22030:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "22030:6:1"
																},
																"nativeSrc": "22030:15:1",
																"nodeType": "YulFunctionCall",
																"src": "22030:15:1"
															},
															"nativeSrc": "22030:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "22030:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22061:1:1",
																		"nodeType": "YulLiteral",
																		"src": "22061:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22064:4:1",
																		"nodeType": "YulLiteral",
																		"src": "22064:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "22054:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "22054:6:1"
																},
																"nativeSrc": "22054:15:1",
																"nodeType": "YulFunctionCall",
																"src": "22054:15:1"
															},
															"nativeSrc": "22054:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "22054:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "21895:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "21895:180:1"
											},
											{
												"body": {
													"nativeSrc": "22126:149:1",
													"nodeType": "YulBlock",
													"src": "22126:149:1",
													"statements": [
														{
															"nativeSrc": "22136:25:1",
															"nodeType": "YulAssignment",
															"src": "22136:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22159:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "22159:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22141:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "22141:17:1"
																},
																"nativeSrc": "22141:20:1",
																"nodeType": "YulFunctionCall",
																"src": "22141:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "22136:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "22136:1:1"
																}
															]
														},
														{
															"nativeSrc": "22170:25:1",
															"nodeType": "YulAssignment",
															"src": "22170:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "22193:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "22193:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22175:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "22175:17:1"
																},
																"nativeSrc": "22175:20:1",
																"nodeType": "YulFunctionCall",
																"src": "22175:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "22170:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "22170:1:1"
																}
															]
														},
														{
															"nativeSrc": "22204:17:1",
															"nodeType": "YulAssignment",
															"src": "22204:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "22216:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "22216:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "22219:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "22219:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "22212:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "22212:3:1"
																},
																"nativeSrc": "22212:9:1",
																"nodeType": "YulFunctionCall",
																"src": "22212:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "22204:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "22204:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22246:22:1",
																"nodeType": "YulBlock",
																"src": "22246:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "22248:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "22248:16:1"
																			},
																			"nativeSrc": "22248:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "22248:18:1"
																		},
																		"nativeSrc": "22248:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "22248:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "22237:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "22237:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "22243:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "22243:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22234:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "22234:2:1"
																},
																"nativeSrc": "22234:11:1",
																"nodeType": "YulFunctionCall",
																"src": "22234:11:1"
															},
															"nativeSrc": "22231:37:1",
															"nodeType": "YulIf",
															"src": "22231:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "22081:194:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "22112:1:1",
														"nodeType": "YulTypedName",
														"src": "22112:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "22115:1:1",
														"nodeType": "YulTypedName",
														"src": "22115:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "22121:4:1",
														"nodeType": "YulTypedName",
														"src": "22121:4:1",
														"type": ""
													}
												],
												"src": "22081:194:1"
											},
											{
												"body": {
													"nativeSrc": "22309:152:1",
													"nodeType": "YulBlock",
													"src": "22309:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22326:1:1",
																		"nodeType": "YulLiteral",
																		"src": "22326:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22329:77:1",
																		"nodeType": "YulLiteral",
																		"src": "22329:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22319:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "22319:6:1"
																},
																"nativeSrc": "22319:88:1",
																"nodeType": "YulFunctionCall",
																"src": "22319:88:1"
															},
															"nativeSrc": "22319:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "22319:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22423:1:1",
																		"nodeType": "YulLiteral",
																		"src": "22423:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22426:4:1",
																		"nodeType": "YulLiteral",
																		"src": "22426:4:1",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22416:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "22416:6:1"
																},
																"nativeSrc": "22416:15:1",
																"nodeType": "YulFunctionCall",
																"src": "22416:15:1"
															},
															"nativeSrc": "22416:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "22416:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22447:1:1",
																		"nodeType": "YulLiteral",
																		"src": "22447:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22450:4:1",
																		"nodeType": "YulLiteral",
																		"src": "22450:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "22440:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "22440:6:1"
																},
																"nativeSrc": "22440:15:1",
																"nodeType": "YulFunctionCall",
																"src": "22440:15:1"
															},
															"nativeSrc": "22440:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "22440:15:1"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "22281:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "22281:180:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_boolt_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_61cfb3f8f290d71745242e1d6d2c8c8eb692c2a985bf3b95041ff77b8a87add1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Public Mint Closed\")\n\n    }\n\n    function abi_encode_t_stringliteral_61cfb3f8f290d71745242e1d6d2c8c8eb692c2a985bf3b95041ff77b8a87add1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_61cfb3f8f290d71745242e1d6d2c8c8eb692c2a985bf3b95041ff77b8a87add1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_61cfb3f8f290d71745242e1d6d2c8c8eb692c2a985bf3b95041ff77b8a87add1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_61cfb3f8f290d71745242e1d6d2c8c8eb692c2a985bf3b95041ff77b8a87add1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a86de37de099325fdba98bd973ee353863620b1b9e5689a27bb937f240986db1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Khong du tien\")\n\n    }\n\n    function abi_encode_t_stringliteral_a86de37de099325fdba98bd973ee353863620b1b9e5689a27bb937f240986db1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_a86de37de099325fdba98bd973ee353863620b1b9e5689a27bb937f240986db1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a86de37de099325fdba98bd973ee353863620b1b9e5689a27bb937f240986db1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a86de37de099325fdba98bd973ee353863620b1b9e5689a27bb937f240986db1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bc0e333509ab750e7eef18b674ce3a3ec259182436c6d413981d959da546bafc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Allowist Mint Closed\")\n\n    }\n\n    function abi_encode_t_stringliteral_bc0e333509ab750e7eef18b674ce3a3ec259182436c6d413981d959da546bafc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_bc0e333509ab750e7eef18b674ce3a3ec259182436c6d413981d959da546bafc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bc0e333509ab750e7eef18b674ce3a3ec259182436c6d413981d959da546bafc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bc0e333509ab750e7eef18b674ce3a3ec259182436c6d413981d959da546bafc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fbae475842e005629bc2b35231dc8b6e9845355bc9fdd97ff31d41bafdc9ce2b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ban khong co quyen!\")\n\n    }\n\n    function abi_encode_t_stringliteral_fbae475842e005629bc2b35231dc8b6e9845355bc9fdd97ff31d41bafdc9ce2b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_fbae475842e005629bc2b35231dc8b6e9845355bc9fdd97ff31d41bafdc9ce2b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fbae475842e005629bc2b35231dc8b6e9845355bc9fdd97ff31d41bafdc9ce2b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fbae475842e005629bc2b35231dc8b6e9845355bc9fdd97ff31d41bafdc9ce2b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_7c04249364a04dff6b55ac8edcf495f23fd180f6458f000171cd9318f06be5c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Khong con NFT!\")\n\n    }\n\n    function abi_encode_t_stringliteral_7c04249364a04dff6b55ac8edcf495f23fd180f6458f000171cd9318f06be5c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_7c04249364a04dff6b55ac8edcf495f23fd180f6458f000171cd9318f06be5c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7c04249364a04dff6b55ac8edcf495f23fd180f6458f000171cd9318f06be5c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7c04249364a04dff6b55ac8edcf495f23fd180f6458f000171cd9318f06be5c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101c1575f3560e01c80635c975abb116100f657806395d89b4111610094578063c5b8bbb911610063578063c5b8bbb9146105d3578063c87b56dd146105fd578063e985e9c514610639578063f2fde38b14610675576101c1565b806395d89b411461052f578063a22cb46514610559578063b88d4fde14610581578063bcc9ca5b146105a9576101c1565b806370a08231116100d057806370a082311461049d578063715018a6146104d95780638456cb59146104ef5780638da5cb5b14610505576101c1565b80635c975abb1461040f5780636352211e146104395780636447c35d14610475576101c1565b80632848aeaf116101635780632f745c591161013d5780632f745c59146103595780633f4ba83a1461039557806342842e0e146103ab5780634f6ccce7146103d3576101c1565b80632848aeaf146102eb5780632e9b82f2146103275780632f48de7914610331576101c1565b8063095ea7b31161019f578063095ea7b31461026757806318160ddd1461028f57806323b872dd146102b957806326092b83146102e1576101c1565b806301ffc9a7146101c557806306fdde0314610201578063081812fc1461022b575b5f80fd5b3480156101d0575f80fd5b506101eb60048036038101906101e6919061263b565b61069d565b6040516101f89190612680565b60405180910390f35b34801561020c575f80fd5b506102156106ae565b6040516102229190612723565b60405180910390f35b348015610236575f80fd5b50610251600480360381019061024c9190612776565b61073d565b60405161025e91906127e0565b60405180910390f35b348015610272575f80fd5b5061028d60048036038101906102889190612823565b610758565b005b34801561029a575f80fd5b506102a361076e565b6040516102b09190612870565b60405180910390f35b3480156102c4575f80fd5b506102df60048036038101906102da9190612889565b61077a565b005b6102e9610879565b005b3480156102f6575f80fd5b50610311600480360381019061030c91906128d9565b61091a565b60405161031e9190612680565b60405180910390f35b61032f610937565b005b34801561033c575f80fd5b506103576004803603810190610352919061292e565b610a61565b005b348015610364575f80fd5b5061037f600480360381019061037a9190612823565b610aa0565b60405161038c9190612870565b60405180910390f35b3480156103a0575f80fd5b506103a9610b44565b005b3480156103b6575f80fd5b506103d160048036038101906103cc9190612889565b610b56565b005b3480156103de575f80fd5b506103f960048036038101906103f49190612776565b610b75565b6040516104069190612870565b60405180910390f35b34801561041a575f80fd5b50610423610be7565b6040516104309190612680565b60405180910390f35b348015610444575f80fd5b5061045f600480360381019061045a9190612776565b610bfc565b60405161046c91906127e0565b60405180910390f35b348015610480575f80fd5b5061049b600480360381019061049691906129cd565b610c0d565b005b3480156104a8575f80fd5b506104c360048036038101906104be91906128d9565b610cb0565b6040516104d09190612870565b60405180910390f35b3480156104e4575f80fd5b506104ed610d66565b005b3480156104fa575f80fd5b50610503610d79565b005b348015610510575f80fd5b50610519610d8b565b60405161052691906127e0565b60405180910390f35b34801561053a575f80fd5b50610543610db4565b6040516105509190612723565b60405180910390f35b348015610564575f80fd5b5061057f600480360381019061057a9190612a18565b610e44565b005b34801561058c575f80fd5b506105a760048036038101906105a29190612b7e565b610e5a565b005b3480156105b4575f80fd5b506105bd610e77565b6040516105ca9190612680565b60405180910390f35b3480156105de575f80fd5b506105e7610e89565b6040516105f49190612680565b60405180910390f35b348015610608575f80fd5b50610623600480360381019061061e9190612776565b610e9c565b6040516106309190612723565b60405180910390f35b348015610644575f80fd5b5061065f600480360381019061065a9190612bfe565b610f02565b60405161066c9190612680565b60405180910390f35b348015610680575f80fd5b5061069b600480360381019061069691906128d9565b610f90565b005b5f6106a782611014565b9050919050565b60605f80546106bc90612c69565b80601f01602080910402602001604051908101604052809291908181526020018280546106e890612c69565b80156107335780601f1061070a57610100808354040283529160200191610733565b820191905f5260205f20905b81548152906001019060200180831161071657829003601f168201915b5050505050905090565b5f6107478261108d565b5061075182611113565b9050919050565b61076a828261076561114c565b611153565b5050565b5f600880549050905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107ea575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016107e191906127e0565b60405180910390fd5b5f6107fd83836107f861114c565b611165565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610873578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161086a93929190612c99565b60405180910390fd5b50505050565b600d5f9054906101000a900460ff166108c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108be90612d18565b60405180910390fd5b66470de4df8200003414610910576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090790612d80565b60405180910390fd5b61091861117a565b565b600e602052805f5260405f205f915054906101000a900460ff1681565b600d60019054906101000a900460ff16610986576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097d90612de8565b60405180910390fd5b600e5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610a0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0690612e50565b60405180910390fd5b65b5e620f480003414610a57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4e90612d80565b60405180910390fd5b610a5f61117a565b565b610a696111eb565b81600d5f6101000a81548160ff02191690831515021790555080600d60016101000a81548160ff0219169083151502179055505050565b5f610aaa83610cb0565b8210610aef5782826040517fa57d13dc000000000000000000000000000000000000000000000000000000008152600401610ae6929190612e6e565b60405180910390fd5b60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f2054905092915050565b610b4c6111eb565b610b54611272565b565b610b7083838360405180602001604052805f815250610e5a565b505050565b5f610b7e61076e565b8210610bc3575f826040517fa57d13dc000000000000000000000000000000000000000000000000000000008152600401610bba929190612e6e565b60405180910390fd5b60088281548110610bd757610bd6612e95565b5b905f5260205f2001549050919050565b5f600a5f9054906101000a900460ff16905090565b5f610c068261108d565b9050919050565b610c156111eb565b5f5b82829050811015610cab576001600e5f858585818110610c3a57610c39612e95565b5b9050602002016020810190610c4f91906128d9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508080600101915050610c17565b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d21575f6040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610d1891906127e0565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610d6e6111eb565b610d775f6112d3565b565b610d816111eb565b610d89611398565b565b5f600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054610dc390612c69565b80601f0160208091040260200160405190810160405280929190818152602001828054610def90612c69565b8015610e3a5780601f10610e1157610100808354040283529160200191610e3a565b820191905f5260205f20905b815481529060010190602001808311610e1d57829003601f168201915b5050505050905090565b610e56610e4f61114c565b83836113fa565b5050565b610e6584848461077a565b610e7184848484611563565b50505050565b600d5f9054906101000a900460ff1681565b600d60019054906101000a900460ff1681565b6060610ea78261108d565b505f610eb1611715565b90505f815111610ecf5760405180602001604052805f815250610efa565b80610ed984611735565b604051602001610eea929190612efc565b6040516020818303038152906040525b915050919050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b610f986111eb565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611008575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610fff91906127e0565b60405180910390fd5b611011816112d3565b50565b5f7f780e9d63000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806110865750611085826117ff565b5b9050919050565b5f80611098836118e0565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361110a57826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016111019190612870565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b6111608383836001611919565b505050565b5f611171848484611ad8565b90509392505050565b600c5461118561076e565b106111c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111bc90612f69565b60405180910390fd5b5f600b5f8154809291906111d890612fb4565b9190505590506111e83382611af5565b50565b6111f361114c565b73ffffffffffffffffffffffffffffffffffffffff16611211610d8b565b73ffffffffffffffffffffffffffffffffffffffff16146112705761123461114c565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161126791906127e0565b60405180910390fd5b565b61127a611b12565b5f600a5f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6112bc61114c565b6040516112c991906127e0565b60405180910390a1565b5f600a60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600a60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113a0611b52565b6001600a5f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113e361114c565b6040516113f091906127e0565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361146a57816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161146191906127e0565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516115569190612680565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b111561170f578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026115a661114c565b8685856040518563ffffffff1660e01b81526004016115c8949392919061304d565b6020604051808303815f875af192505050801561160357506040513d601f19601f8201168201806040525081019061160091906130ab565b60015b611684573d805f8114611631576040519150601f19603f3d011682016040523d82523d5f602084013e611636565b606091505b505f81510361167c57836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161167391906127e0565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461170d57836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161170491906127e0565b60405180910390fd5b505b50505050565b60606040518060a001604052806067815260200161316460679139905090565b60605f600161174384611b93565b0190505f8167ffffffffffffffff81111561176157611760612a5a565b5b6040519080825280601f01601f1916602001820160405280156117935781602001600182028036833780820191505090505b5090505f82602001820190505b6001156117f4578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816117e9576117e86130d6565b5b0494505f85036117a0575b819350505050919050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806118c957507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806118d957506118d882611ce4565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061195157505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611a83575f6119608461108d565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156119ca57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156119dd57506119db8184610f02565b155b15611a1f57826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611a1691906127e0565b60405180910390fd5b8115611a8157838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b5f611ae1611b52565b611aec848484611d4d565b90509392505050565b611b0e828260405180602001604052805f815250611e67565b5050565b611b1a610be7565b611b50576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611b5a610be7565b15611b91576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611bef577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611be557611be46130d6565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611c2c576d04ee2d6d415b85acef81000000008381611c2257611c216130d6565b5b0492506020810190505b662386f26fc100008310611c5b57662386f26fc100008381611c5157611c506130d6565b5b0492506010810190505b6305f5e1008310611c84576305f5e1008381611c7a57611c796130d6565b5b0492506008810190505b6127108310611ca9576127108381611c9f57611c9e6130d6565b5b0492506004810190505b60648310611ccc5760648381611cc257611cc16130d6565b5b0492506002810190505b600a8310611cdb576001810190505b80915050919050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80611d5a858585611e82565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611d9d57611d988461208d565b611ddc565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611ddb57611dda81856120d1565b5b5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611e1d57611e188461221b565b611e5c565b8473ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611e5b57611e5a85856122db565b5b5b809150509392505050565b611e71838361235f565b611e7d5f848484611563565b505050565b5f80611e8d846118e0565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611ece57611ecd818486612452565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611f5957611f0d5f855f80611919565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611fd857600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b60088054905060095f8381526020019081526020015f2081905550600881908060018154018082558091505060019003905f5260205f20015f909190919091505550565b5f6120db83610cb0565b90505f60075f8481526020019081526020015f205490508181146121b2575f60065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205490508060065f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f20819055508160075f8381526020019081526020015f2081905550505b60075f8481526020019081526020015f205f905560065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f905550505050565b5f600160088054905061222e9190613103565b90505f60095f8481526020019081526020015f205490505f6008838154811061225a57612259612e95565b5b905f5260205f2001549050806008838154811061227a57612279612e95565b5b905f5260205f2001819055508160095f8381526020019081526020015f208190555060095f8581526020019081526020015f205f905560088054806122c2576122c1613136565b5b600190038181905f5260205f20015f9055905550505050565b5f60016122e784610cb0565b6122f19190613103565b90508160065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f20819055508060075f8481526020019081526020015f2081905550505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036123cf575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016123c691906127e0565b60405180910390fd5b5f6123db83835f611165565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461244d575f6040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161244491906127e0565b60405180910390fd5b505050565b61245d838383612515565b612510575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036124d157806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016124c89190612870565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401612507929190612e6e565b60405180910390fd5b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156125cc57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061258d575061258c8484610f02565b5b806125cb57508273ffffffffffffffffffffffffffffffffffffffff166125b383611113565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61261a816125e6565b8114612624575f80fd5b50565b5f8135905061263581612611565b92915050565b5f602082840312156126505761264f6125de565b5b5f61265d84828501612627565b91505092915050565b5f8115159050919050565b61267a81612666565b82525050565b5f6020820190506126935f830184612671565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156126d05780820151818401526020810190506126b5565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6126f582612699565b6126ff81856126a3565b935061270f8185602086016126b3565b612718816126db565b840191505092915050565b5f6020820190508181035f83015261273b81846126eb565b905092915050565b5f819050919050565b61275581612743565b811461275f575f80fd5b50565b5f813590506127708161274c565b92915050565b5f6020828403121561278b5761278a6125de565b5b5f61279884828501612762565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6127ca826127a1565b9050919050565b6127da816127c0565b82525050565b5f6020820190506127f35f8301846127d1565b92915050565b612802816127c0565b811461280c575f80fd5b50565b5f8135905061281d816127f9565b92915050565b5f8060408385031215612839576128386125de565b5b5f6128468582860161280f565b925050602061285785828601612762565b9150509250929050565b61286a81612743565b82525050565b5f6020820190506128835f830184612861565b92915050565b5f805f606084860312156128a05761289f6125de565b5b5f6128ad8682870161280f565b93505060206128be8682870161280f565b92505060406128cf86828701612762565b9150509250925092565b5f602082840312156128ee576128ed6125de565b5b5f6128fb8482850161280f565b91505092915050565b61290d81612666565b8114612917575f80fd5b50565b5f8135905061292881612904565b92915050565b5f8060408385031215612944576129436125de565b5b5f6129518582860161291a565b92505060206129628582860161291a565b9150509250929050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261298d5761298c61296c565b5b8235905067ffffffffffffffff8111156129aa576129a9612970565b5b6020830191508360208202830111156129c6576129c5612974565b5b9250929050565b5f80602083850312156129e3576129e26125de565b5b5f83013567ffffffffffffffff811115612a00576129ff6125e2565b5b612a0c85828601612978565b92509250509250929050565b5f8060408385031215612a2e57612a2d6125de565b5b5f612a3b8582860161280f565b9250506020612a4c8582860161291a565b9150509250929050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612a90826126db565b810181811067ffffffffffffffff82111715612aaf57612aae612a5a565b5b80604052505050565b5f612ac16125d5565b9050612acd8282612a87565b919050565b5f67ffffffffffffffff821115612aec57612aeb612a5a565b5b612af5826126db565b9050602081019050919050565b828183375f83830152505050565b5f612b22612b1d84612ad2565b612ab8565b905082815260208101848484011115612b3e57612b3d612a56565b5b612b49848285612b02565b509392505050565b5f82601f830112612b6557612b6461296c565b5b8135612b75848260208601612b10565b91505092915050565b5f805f8060808587031215612b9657612b956125de565b5b5f612ba38782880161280f565b9450506020612bb48782880161280f565b9350506040612bc587828801612762565b925050606085013567ffffffffffffffff811115612be657612be56125e2565b5b612bf287828801612b51565b91505092959194509250565b5f8060408385031215612c1457612c136125de565b5b5f612c218582860161280f565b9250506020612c328582860161280f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612c8057607f821691505b602082108103612c9357612c92612c3c565b5b50919050565b5f606082019050612cac5f8301866127d1565b612cb96020830185612861565b612cc660408301846127d1565b949350505050565b7f5075626c6963204d696e7420436c6f73656400000000000000000000000000005f82015250565b5f612d026012836126a3565b9150612d0d82612cce565b602082019050919050565b5f6020820190508181035f830152612d2f81612cf6565b9050919050565b7f4b686f6e67206475207469656e000000000000000000000000000000000000005f82015250565b5f612d6a600d836126a3565b9150612d7582612d36565b602082019050919050565b5f6020820190508181035f830152612d9781612d5e565b9050919050565b7f416c6c6f77697374204d696e7420436c6f7365640000000000000000000000005f82015250565b5f612dd26014836126a3565b9150612ddd82612d9e565b602082019050919050565b5f6020820190508181035f830152612dff81612dc6565b9050919050565b7f42616e206b686f6e6720636f20717579656e21000000000000000000000000005f82015250565b5f612e3a6013836126a3565b9150612e4582612e06565b602082019050919050565b5f6020820190508181035f830152612e6781612e2e565b9050919050565b5f604082019050612e815f8301856127d1565b612e8e6020830184612861565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f81905092915050565b5f612ed682612699565b612ee08185612ec2565b9350612ef08185602086016126b3565b80840191505092915050565b5f612f078285612ecc565b9150612f138284612ecc565b91508190509392505050565b7f4b686f6e6720636f6e204e4654210000000000000000000000000000000000005f82015250565b5f612f53600e836126a3565b9150612f5e82612f1f565b602082019050919050565b5f6020820190508181035f830152612f8081612f47565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612fbe82612743565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612ff057612fef612f87565b5b600182019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f61301f82612ffb565b6130298185613005565b93506130398185602086016126b3565b613042816126db565b840191505092915050565b5f6080820190506130605f8301876127d1565b61306d60208301866127d1565b61307a6040830185612861565b818103606083015261308c8184613015565b905095945050505050565b5f815190506130a581612611565b92915050565b5f602082840312156130c0576130bf6125de565b5b5f6130cd84828501613097565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61310d82612743565b915061311883612743565b92508282039050818111156131305761312f612f87565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfe68747470733a2f2f656d6572616c642d776f6f64656e2d67616d65666f776c2d3437322e6d7970696e6174612e636c6f75642f697066732f516d63726e794c5a723479357448637a31576d4b474c57435972555445644332475566646b62425768436e3531772fa26469706673582212203f93cdc2f44d09f267f39423522a072d90f0ea08793ea56194bcdb21e467e1ce64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C1 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xF6 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xC5B8BBB9 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xC5B8BBB9 EQ PUSH2 0x5D3 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x5FD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x639 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x675 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0xBCC9CA5B EQ PUSH2 0x5A9 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4EF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x505 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0x6447C35D EQ PUSH2 0x475 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x2848AEAF GT PUSH2 0x163 JUMPI DUP1 PUSH4 0x2F745C59 GT PUSH2 0x13D JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x3D3 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x2848AEAF EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x2E9B82F2 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x2F48DE79 EQ PUSH2 0x331 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x19F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0x26092B83 EQ PUSH2 0x2E1 JUMPI PUSH2 0x1C1 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x22B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x263B JUMP JUMPDEST PUSH2 0x69D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x6AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x2723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x2823 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A3 PUSH2 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x2889 JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E9 PUSH2 0x879 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x28D9 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32F PUSH2 0x937 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x292E JUMP JUMPDEST PUSH2 0xA61 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37A SWAP2 SWAP1 PUSH2 0x2823 JUMP JUMPDEST PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A9 PUSH2 0xB44 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x2889 JUMP JUMPDEST PUSH2 0xB56 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x406 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0xBE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x444 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x45F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45A SWAP2 SWAP1 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46C SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x480 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x49B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x29CD JUMP JUMPDEST PUSH2 0xC0D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x28D9 JUMP JUMPDEST PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4ED PUSH2 0xD66 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x503 PUSH2 0xD79 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x510 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x519 PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x526 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x543 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x2723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x564 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x2A18 JUMP JUMPDEST PUSH2 0xE44 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0x2B7E JUMP JUMPDEST PUSH2 0xE5A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5BD PUSH2 0xE77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E7 PUSH2 0xE89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x608 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x623 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x2776 JUMP JUMPDEST PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x2723 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x644 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x65F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65A SWAP2 SWAP1 PUSH2 0x2BFE JUMP JUMPDEST PUSH2 0xF02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66C SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x680 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x69B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x696 SWAP2 SWAP1 PUSH2 0x28D9 JUMP JUMPDEST PUSH2 0xF90 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH2 0x6A7 DUP3 PUSH2 0x1014 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x6BC SWAP1 PUSH2 0x2C69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6E8 SWAP1 PUSH2 0x2C69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x733 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x70A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x733 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x716 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x747 DUP3 PUSH2 0x108D JUMP JUMPDEST POP PUSH2 0x751 DUP3 PUSH2 0x1113 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76A DUP3 DUP3 PUSH2 0x765 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x1153 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7EA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x7FD DUP4 DUP4 PUSH2 0x7F8 PUSH2 0x114C JUMP JUMPDEST PUSH2 0x1165 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x873 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BE SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH7 0x470DE4DF820000 CALLVALUE EQ PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x907 SWAP1 PUSH2 0x2D80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x918 PUSH2 0x117A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97D SWAP1 PUSH2 0x2DE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA06 SWAP1 PUSH2 0x2E50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH6 0xB5E620F48000 CALLVALUE EQ PUSH2 0xA57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP1 PUSH2 0x2D80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA5F PUSH2 0x117A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA69 PUSH2 0x11EB JUMP JUMPDEST DUP2 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAAA DUP4 PUSH2 0xCB0 JUMP JUMPDEST DUP3 LT PUSH2 0xAEF JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE6 SWAP3 SWAP2 SWAP1 PUSH2 0x2E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB4C PUSH2 0x11EB JUMP JUMPDEST PUSH2 0xB54 PUSH2 0x1272 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB70 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xE5A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB7E PUSH2 0x76E JUMP JUMPDEST DUP3 LT PUSH2 0xBC3 JUMPI PUSH0 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA57D13DC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBA SWAP3 SWAP2 SWAP1 PUSH2 0x2E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBD7 JUMPI PUSH2 0xBD6 PUSH2 0x2E95 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xC06 DUP3 PUSH2 0x108D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC15 PUSH2 0x11EB JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0xCAB JUMPI PUSH1 0x1 PUSH1 0xE PUSH0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xC3A JUMPI PUSH2 0xC39 PUSH2 0x2E95 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC4F SWAP2 SWAP1 PUSH2 0x28D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC17 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD21 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD18 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD6E PUSH2 0x11EB JUMP JUMPDEST PUSH2 0xD77 PUSH0 PUSH2 0x12D3 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD81 PUSH2 0x11EB JUMP JUMPDEST PUSH2 0xD89 PUSH2 0x1398 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xDC3 SWAP1 PUSH2 0x2C69 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDEF SWAP1 PUSH2 0x2C69 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE3A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE11 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE3A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE1D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE56 PUSH2 0xE4F PUSH2 0x114C JUMP JUMPDEST DUP4 DUP4 PUSH2 0x13FA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xE65 DUP5 DUP5 DUP5 PUSH2 0x77A JUMP JUMPDEST PUSH2 0xE71 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1563 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEA7 DUP3 PUSH2 0x108D JUMP JUMPDEST POP PUSH0 PUSH2 0xEB1 PUSH2 0x1715 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0xECF JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xEFA JUMP JUMPDEST DUP1 PUSH2 0xED9 DUP5 PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xEEA SWAP3 SWAP2 SWAP1 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF98 PUSH2 0x11EB JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1008 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1011 DUP2 PUSH2 0x12D3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x780E9D6300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1086 JUMPI POP PUSH2 0x1085 DUP3 PUSH2 0x17FF JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1098 DUP4 PUSH2 0x18E0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x110A JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1101 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1160 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1919 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1171 DUP5 DUP5 DUP5 PUSH2 0x1AD8 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1185 PUSH2 0x76E JUMP JUMPDEST LT PUSH2 0x11C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BC SWAP1 PUSH2 0x2F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x11D8 SWAP1 PUSH2 0x2FB4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x11E8 CALLER DUP3 PUSH2 0x1AF5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x11F3 PUSH2 0x114C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1211 PUSH2 0xD8B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1270 JUMPI PUSH2 0x1234 PUSH2 0x114C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1267 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x127A PUSH2 0x1B12 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x12BC PUSH2 0x114C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C9 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0xA PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x13A0 PUSH2 0x1B52 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x13E3 PUSH2 0x114C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F0 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x146A JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1461 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1556 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x170F JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x15A6 PUSH2 0x114C JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x304D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1603 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1600 SWAP2 SWAP1 PUSH2 0x30AB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1684 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1631 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x167C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1673 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x170D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1704 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x67 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3164 PUSH1 0x67 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1743 DUP5 PUSH2 0x1B93 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1761 JUMPI PUSH2 0x1760 PUSH2 0x2A5A JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1793 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x17F4 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x17E9 JUMPI PUSH2 0x17E8 PUSH2 0x30D6 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x17A0 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x18C9 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x18D9 JUMPI POP PUSH2 0x18D8 DUP3 PUSH2 0x1CE4 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1951 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1A83 JUMPI PUSH0 PUSH2 0x1960 DUP5 PUSH2 0x108D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x19CA JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x19DD JUMPI POP PUSH2 0x19DB DUP2 DUP5 PUSH2 0xF02 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1A1F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A16 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1A81 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AE1 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0x1AEC DUP5 DUP5 DUP5 PUSH2 0x1D4D JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B0E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1E67 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1B1A PUSH2 0xBE7 JUMP JUMPDEST PUSH2 0x1B50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1B5A PUSH2 0xBE7 JUMP JUMPDEST ISZERO PUSH2 0x1B91 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1BEF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1BE5 JUMPI PUSH2 0x1BE4 PUSH2 0x30D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1C2C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1C22 JUMPI PUSH2 0x1C21 PUSH2 0x30D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1C5B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1C51 JUMPI PUSH2 0x1C50 PUSH2 0x30D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1C84 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1C7A JUMPI PUSH2 0x1C79 PUSH2 0x30D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1CA9 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1C9F JUMPI PUSH2 0x1C9E PUSH2 0x30D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1CCC JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1CC2 JUMPI PUSH2 0x1CC1 PUSH2 0x30D6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1CDB JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1D5A DUP6 DUP6 DUP6 PUSH2 0x1E82 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D9D JUMPI PUSH2 0x1D98 DUP5 PUSH2 0x208D JUMP JUMPDEST PUSH2 0x1DDC JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DDB JUMPI PUSH2 0x1DDA DUP2 DUP6 PUSH2 0x20D1 JUMP JUMPDEST JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E1D JUMPI PUSH2 0x1E18 DUP5 PUSH2 0x221B JUMP JUMPDEST PUSH2 0x1E5C JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E5B JUMPI PUSH2 0x1E5A DUP6 DUP6 PUSH2 0x22DB JUMP JUMPDEST JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1E71 DUP4 DUP4 PUSH2 0x235F JUMP JUMPDEST PUSH2 0x1E7D PUSH0 DUP5 DUP5 DUP5 PUSH2 0x1563 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1E8D DUP5 PUSH2 0x18E0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1ECE JUMPI PUSH2 0x1ECD DUP2 DUP5 DUP7 PUSH2 0x2452 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F59 JUMPI PUSH2 0x1F0D PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1919 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FD8 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20DB DUP4 PUSH2 0xCB0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x21B2 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH1 0x6 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x8 DUP1 SLOAD SWAP1 POP PUSH2 0x222E SWAP2 SWAP1 PUSH2 0x3103 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x225A JUMPI PUSH2 0x2259 PUSH2 0x2E95 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x227A JUMPI PUSH2 0x2279 PUSH2 0x2E95 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x9 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x22C2 JUMPI PUSH2 0x22C1 PUSH2 0x3136 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x22E7 DUP5 PUSH2 0xCB0 JUMP JUMPDEST PUSH2 0x22F1 SWAP2 SWAP1 PUSH2 0x3103 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x23CF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23C6 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x23DB DUP4 DUP4 PUSH0 PUSH2 0x1165 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x244D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2444 SWAP2 SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x245D DUP4 DUP4 DUP4 PUSH2 0x2515 JUMP JUMPDEST PUSH2 0x2510 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x24D1 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24C8 SWAP2 SWAP1 PUSH2 0x2870 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2507 SWAP3 SWAP2 SWAP1 PUSH2 0x2E6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x25CC JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x258D JUMPI POP PUSH2 0x258C DUP5 DUP5 PUSH2 0xF02 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x25CB JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x25B3 DUP4 PUSH2 0x1113 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x261A DUP2 PUSH2 0x25E6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2624 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2635 DUP2 PUSH2 0x2611 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2650 JUMPI PUSH2 0x264F PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x265D DUP5 DUP3 DUP6 ADD PUSH2 0x2627 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x267A DUP2 PUSH2 0x2666 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2693 PUSH0 DUP4 ADD DUP5 PUSH2 0x2671 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26D0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x26B5 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26F5 DUP3 PUSH2 0x2699 JUMP JUMPDEST PUSH2 0x26FF DUP2 DUP6 PUSH2 0x26A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x270F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26B3 JUMP JUMPDEST PUSH2 0x2718 DUP2 PUSH2 0x26DB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x273B DUP2 DUP5 PUSH2 0x26EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2755 DUP2 PUSH2 0x2743 JUMP JUMPDEST DUP2 EQ PUSH2 0x275F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2770 DUP2 PUSH2 0x274C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x278B JUMPI PUSH2 0x278A PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2798 DUP5 DUP3 DUP6 ADD PUSH2 0x2762 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27CA DUP3 PUSH2 0x27A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27DA DUP2 PUSH2 0x27C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27F3 PUSH0 DUP4 ADD DUP5 PUSH2 0x27D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2802 DUP2 PUSH2 0x27C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x280C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x281D DUP2 PUSH2 0x27F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2839 JUMPI PUSH2 0x2838 PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2846 DUP6 DUP3 DUP7 ADD PUSH2 0x280F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2857 DUP6 DUP3 DUP7 ADD PUSH2 0x2762 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x286A DUP2 PUSH2 0x2743 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2883 PUSH0 DUP4 ADD DUP5 PUSH2 0x2861 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x28A0 JUMPI PUSH2 0x289F PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28AD DUP7 DUP3 DUP8 ADD PUSH2 0x280F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x28BE DUP7 DUP3 DUP8 ADD PUSH2 0x280F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x28CF DUP7 DUP3 DUP8 ADD PUSH2 0x2762 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28EE JUMPI PUSH2 0x28ED PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28FB DUP5 DUP3 DUP6 ADD PUSH2 0x280F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x290D DUP2 PUSH2 0x2666 JUMP JUMPDEST DUP2 EQ PUSH2 0x2917 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2928 DUP2 PUSH2 0x2904 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2944 JUMPI PUSH2 0x2943 PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2951 DUP6 DUP3 DUP7 ADD PUSH2 0x291A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2962 DUP6 DUP3 DUP7 ADD PUSH2 0x291A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x298D JUMPI PUSH2 0x298C PUSH2 0x296C JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29AA JUMPI PUSH2 0x29A9 PUSH2 0x2970 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x29C6 JUMPI PUSH2 0x29C5 PUSH2 0x2974 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29E3 JUMPI PUSH2 0x29E2 PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A00 JUMPI PUSH2 0x29FF PUSH2 0x25E2 JUMP JUMPDEST JUMPDEST PUSH2 0x2A0C DUP6 DUP3 DUP7 ADD PUSH2 0x2978 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A2E JUMPI PUSH2 0x2A2D PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A3B DUP6 DUP3 DUP7 ADD PUSH2 0x280F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A4C DUP6 DUP3 DUP7 ADD PUSH2 0x291A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2A90 DUP3 PUSH2 0x26DB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2AAF JUMPI PUSH2 0x2AAE PUSH2 0x2A5A JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2AC1 PUSH2 0x25D5 JUMP JUMPDEST SWAP1 POP PUSH2 0x2ACD DUP3 DUP3 PUSH2 0x2A87 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2AEC JUMPI PUSH2 0x2AEB PUSH2 0x2A5A JUMP JUMPDEST JUMPDEST PUSH2 0x2AF5 DUP3 PUSH2 0x26DB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B22 PUSH2 0x2B1D DUP5 PUSH2 0x2AD2 JUMP JUMPDEST PUSH2 0x2AB8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2B3E JUMPI PUSH2 0x2B3D PUSH2 0x2A56 JUMP JUMPDEST JUMPDEST PUSH2 0x2B49 DUP5 DUP3 DUP6 PUSH2 0x2B02 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2B65 JUMPI PUSH2 0x2B64 PUSH2 0x296C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2B75 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2B10 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2B96 JUMPI PUSH2 0x2B95 PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BA3 DUP8 DUP3 DUP9 ADD PUSH2 0x280F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2BB4 DUP8 DUP3 DUP9 ADD PUSH2 0x280F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2BC5 DUP8 DUP3 DUP9 ADD PUSH2 0x2762 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BE6 JUMPI PUSH2 0x2BE5 PUSH2 0x25E2 JUMP JUMPDEST JUMPDEST PUSH2 0x2BF2 DUP8 DUP3 DUP9 ADD PUSH2 0x2B51 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C14 JUMPI PUSH2 0x2C13 PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C21 DUP6 DUP3 DUP7 ADD PUSH2 0x280F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2C32 DUP6 DUP3 DUP7 ADD PUSH2 0x280F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2C80 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2C93 JUMPI PUSH2 0x2C92 PUSH2 0x2C3C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2CAC PUSH0 DUP4 ADD DUP7 PUSH2 0x27D1 JUMP JUMPDEST PUSH2 0x2CB9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2861 JUMP JUMPDEST PUSH2 0x2CC6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x27D1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5075626C6963204D696E7420436C6F7365640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D02 PUSH1 0x12 DUP4 PUSH2 0x26A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D0D DUP3 PUSH2 0x2CCE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D2F DUP2 PUSH2 0x2CF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B686F6E67206475207469656E00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D6A PUSH1 0xD DUP4 PUSH2 0x26A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D75 DUP3 PUSH2 0x2D36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D97 DUP2 PUSH2 0x2D5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C6C6F77697374204D696E7420436C6F736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DD2 PUSH1 0x14 DUP4 PUSH2 0x26A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DDD DUP3 PUSH2 0x2D9E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DFF DUP2 PUSH2 0x2DC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42616E206B686F6E6720636F20717579656E2100000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E3A PUSH1 0x13 DUP4 PUSH2 0x26A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E45 DUP3 PUSH2 0x2E06 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E67 DUP2 PUSH2 0x2E2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E81 PUSH0 DUP4 ADD DUP6 PUSH2 0x27D1 JUMP JUMPDEST PUSH2 0x2E8E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2861 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2ED6 DUP3 PUSH2 0x2699 JUMP JUMPDEST PUSH2 0x2EE0 DUP2 DUP6 PUSH2 0x2EC2 JUMP JUMPDEST SWAP4 POP PUSH2 0x2EF0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26B3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2F07 DUP3 DUP6 PUSH2 0x2ECC JUMP JUMPDEST SWAP2 POP PUSH2 0x2F13 DUP3 DUP5 PUSH2 0x2ECC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4B686F6E6720636F6E204E465421000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F53 PUSH1 0xE DUP4 PUSH2 0x26A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F5E DUP3 PUSH2 0x2F1F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F80 DUP2 PUSH2 0x2F47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2FBE DUP3 PUSH2 0x2743 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2FF0 JUMPI PUSH2 0x2FEF PUSH2 0x2F87 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x301F DUP3 PUSH2 0x2FFB JUMP JUMPDEST PUSH2 0x3029 DUP2 DUP6 PUSH2 0x3005 JUMP JUMPDEST SWAP4 POP PUSH2 0x3039 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26B3 JUMP JUMPDEST PUSH2 0x3042 DUP2 PUSH2 0x26DB JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3060 PUSH0 DUP4 ADD DUP8 PUSH2 0x27D1 JUMP JUMPDEST PUSH2 0x306D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x27D1 JUMP JUMPDEST PUSH2 0x307A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2861 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x308C DUP2 DUP5 PUSH2 0x3015 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x30A5 DUP2 PUSH2 0x2611 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30C0 JUMPI PUSH2 0x30BF PUSH2 0x25DE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x30CD DUP5 DUP3 DUP6 ADD PUSH2 0x3097 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x310D DUP3 PUSH2 0x2743 JUMP JUMPDEST SWAP2 POP PUSH2 0x3118 DUP4 PUSH2 0x2743 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3130 JUMPI PUSH2 0x312F PUSH2 0x2F87 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID PUSH9 0x747470733A2F2F656D PUSH6 0x72616C642D77 PUSH16 0x6F64656E2D67616D65666F776C2D3437 ORIGIN 0x2E PUSH14 0x7970696E6174612E636C6F75642F PUSH10 0x7066732F516D63726E79 0x4C GAS PUSH19 0x3479357448637A31576D4B474C574359725554 GASLIMIT PUSH5 0x4332475566 PUSH5 0x6B62425768 NUMBER PUSH15 0x3531772FA26469706673582212203F SWAP4 0xCD 0xC2 DELEGATECALL 0x4D MULMOD CALLCODE PUSH8 0xF39423522A072D90 CREATE 0xEA ADDMOD PUSH26 0x3EA56194BCDB21E467E1CE64736F6C6343000816003300000000 ",
							"sourceMap": "68562:2593:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;70948:205;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;40830:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41962:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41788:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;59181:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;42608:578;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;69768:182;;;:::i;:::-;;68787:41;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;70018:253;;;:::i;:::-;;69505:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;58855:255;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;69213:63;;;;;;;;;;;;;:::i;:::-;;43252:132;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;59355:226;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;66238:84;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;40650:118;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;69310:189;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;40385:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3365:101;;;;;;;;;;;;;:::i;:::-;;69148:59;;;;;;;;;;;;;:::i;:::-;;2710:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;40983:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;42183:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;43450:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;68704:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;68744:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41142:255;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;42393:153;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3615:215;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;70948:205;71083:4;71110:36;71134:11;71110:23;:36::i;:::-;71103:43;;70948:205;;;:::o;40830:89::-;40875:13;40907:5;40900:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40830:89;:::o;41962:154::-;42029:7;42048:22;42062:7;42048:13;:22::i;:::-;;42088:21;42101:7;42088:12;:21::i;:::-;42081:28;;41962:154;;;:::o;41788:113::-;41859:35;41868:2;41872:7;41881:12;:10;:12::i;:::-;41859:8;:35::i;:::-;41788:113;;:::o;59181:102::-;59233:7;59259:10;:17;;;;59252:24;;59181:102;:::o;42608:578::-;42716:1;42702:16;;:2;:16;;;42698:87;;42771:1;42741:33;;;;;;;;;;;:::i;:::-;;;;;;;;42698:87;43003:21;43027:34;43035:2;43039:7;43048:12;:10;:12::i;:::-;43027:7;:34::i;:::-;43003:58;;43092:4;43075:21;;:13;:21;;;43071:109;;43140:4;43146:7;43155:13;43119:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;43071:109;42688:498;42608:578;;;:::o;69768:182::-;69823:14;;;;;;;;;;;69815:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;69891:10;69878:9;:23;69870:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;69929:14;:12;:14::i;:::-;69768:182::o;68787:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;70018:253::-;70075:16;;;;;;;;;;;70067:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;70134:9;:21;70144:10;70134:21;;;;;;;;;;;;;;;;;;;;;;;;;70126:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;70210:12;70197:9;:25;70189:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;70250:14;:12;:14::i;:::-;70018:253::o;69505:208::-;2603:13;:11;:13::i;:::-;69644:15:::1;69627:14;;:32;;;;;;;;;;;;;;;;;;69688:17;69669:16;;:36;;;;;;;;;;;;;;;;;;69505:208:::0;;:::o;58855:255::-;58943:7;58975:16;58985:5;58975:9;:16::i;:::-;58966:5;:25;58962:99;;59037:5;59044;59014:36;;;;;;;;;;;;:::i;:::-;;;;;;;;58962:99;59077:12;:19;59090:5;59077:19;;;;;;;;;;;;;;;:26;59097:5;59077:26;;;;;;;;;;;;59070:33;;58855:255;;;;:::o;69213:63::-;2603:13;:11;:13::i;:::-;69259:10:::1;:8;:10::i;:::-;69213:63::o:0;43252:132::-;43338:39;43355:4;43361:2;43365:7;43338:39;;;;;;;;;;;;:16;:39::i;:::-;43252:132;;;:::o;59355:226::-;59421:7;59453:13;:11;:13::i;:::-;59444:5;:22;59440:101;;59520:1;59524:5;59489:41;;;;;;;;;;;;:::i;:::-;;;;;;;;59440:101;59557:10;59568:5;59557:17;;;;;;;;:::i;:::-;;;;;;;;;;59550:24;;59355:226;;;:::o;66238:84::-;66285:4;66308:7;;;;;;;;;;;66301:14;;66238:84;:::o;40650:118::-;40713:7;40739:22;40753:7;40739:13;:22::i;:::-;40732:29;;40650:118;;;:::o;69310:189::-;2603:13;:11;:13::i;:::-;69396:9:::1;69391:102;69415:9;;:16;;69411:1;:20;69391:102;;;69478:4;69452:9;:23;69462:9;;69472:1;69462:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;69452:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;69433:3;;;;;;;69391:102;;;;69310:189:::0;;:::o;40385:208::-;40448:7;40488:1;40471:19;;:5;:19;;;40467:87;;40540:1;40513:30;;;;;;;;;;;:::i;:::-;;;;;;;;40467:87;40570:9;:16;40580:5;40570:16;;;;;;;;;;;;;;;;40563:23;;40385:208;;;:::o;3365:101::-;2603:13;:11;:13::i;:::-;3429:30:::1;3456:1;3429:18;:30::i;:::-;3365:101::o:0;69148:59::-;2603:13;:11;:13::i;:::-;69192:8:::1;:6;:8::i;:::-;69148:59::o:0;2710:85::-;2756:7;2782:6;;;;;;;;;;;2775:13;;2710:85;:::o;40983:93::-;41030:13;41062:7;41055:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40983:93;:::o;42183:144::-;42268:52;42287:12;:10;:12::i;:::-;42301:8;42311;42268:18;:52::i;:::-;42183:144;;:::o;43450:208::-;43563:31;43576:4;43582:2;43586:7;43563:12;:31::i;:::-;43604:47;43627:4;43633:2;43637:7;43646:4;43604:22;:47::i;:::-;43450:208;;;;:::o;68704:34::-;;;;;;;;;;;;;:::o;68744:36::-;;;;;;;;;;;;;:::o;41142:255::-;41206:13;41231:22;41245:7;41231:13;:22::i;:::-;;41264:21;41288:10;:8;:10::i;:::-;41264:34;;41339:1;41321:7;41315:21;:25;:75;;;;;;;;;;;;;;;;;41357:7;41366:18;:7;:16;:18::i;:::-;41343:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;41315:75;41308:82;;;41142:255;;;:::o;42393:153::-;42481:4;42504:18;:25;42523:5;42504:25;;;;;;;;;;;;;;;:35;42530:8;42504:35;;;;;;;;;;;;;;;;;;;;;;;;;42497:42;;42393:153;;;;:::o;3615:215::-;2603:13;:11;:13::i;:::-;3719:1:::1;3699:22;;:8;:22;;::::0;3695:91:::1;;3772:1;3744:31;;;;;;;;;;;:::i;:::-;;;;;;;;3695:91;3795:28;3814:8;3795:18;:28::i;:::-;3615:215:::0;:::o;58554:222::-;58656:4;58694:35;58679:50;;;:11;:50;;;;:90;;;;58733:36;58757:11;58733:23;:36::i;:::-;58679:90;58672:97;;58554:222;;;:::o;54603:241::-;54666:7;54685:13;54701:17;54710:7;54701:8;:17::i;:::-;54685:33;;54749:1;54732:19;;:5;:19;;;54728:88;;54797:7;54774:31;;;;;;;;;;;:::i;:::-;;;;;;;;54728:88;54832:5;54825:12;;;54603:241;;;:::o;44403:127::-;44473:7;44499:15;:24;44515:7;44499:24;;;;;;;;;;;;;;;;;;;;;44492:31;;44403:127;;;:::o;782:96::-;835:7;861:10;854:17;;782:96;:::o;52883:120::-;52963:33;52972:2;52976:7;52985:4;52991;52963:8;:33::i;:::-;52883:120;;;:::o;70537:222::-;70690:7;70720:32;70734:2;70738:7;70747:4;70720:13;:32::i;:::-;70713:39;;70537:222;;;;;:::o;70277:184::-;70344:9;;70328:13;:11;:13::i;:::-;:25;70320:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;70382:15;70400:12;;:14;;;;;;;;;:::i;:::-;;;;;70382:32;;70424:30;70434:10;70446:7;70424:9;:30::i;:::-;70310:151;70277:184::o;2868:162::-;2938:12;:10;:12::i;:::-;2927:23;;:7;:5;:7::i;:::-;:23;;;2923:101;;3000:12;:10;:12::i;:::-;2973:40;;;;;;;;;;;:::i;:::-;;;;;;;;2923:101;2868:162::o;67098:117::-;66109:16;:14;:16::i;:::-;67166:5:::1;67156:7;;:15;;;;;;;;;;;;;;;;;;67186:22;67195:12;:10;:12::i;:::-;67186:22;;;;;;:::i;:::-;;;;;;;;67098:117::o:0;3984:187::-;4057:16;4076:6;;;;;;;;;;;4057:25;;4101:8;4092:6;;:17;;;;;;;;;;;;;;;;;;4155:8;4124:40;;4145:8;4124:40;;;;;;;;;;;;4047:124;3984:187;:::o;66851:115::-;65862:19;:17;:19::i;:::-;66920:4:::1;66910:7;;:14;;;;;;;;;;;;;;;;;;66939:20;66946:12;:10;:12::i;:::-;66939:20;;;;;;:::i;:::-;;;;;;;;66851:115::o:0;54056:312::-;54183:1;54163:22;;:8;:22;;;54159:91;;54230:8;54208:31;;;;;;;;;;;:::i;:::-;;;;;;;;54159:91;54297:8;54259:18;:25;54278:5;54259:25;;;;;;;;;;;;;;;:35;54285:8;54259:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;54342:8;54320:41;;54335:5;54320:41;;;54352:8;54320:41;;;;;;:::i;:::-;;;;;;;;54056:312;;;:::o;55383:782::-;55516:1;55499:2;:14;;;:18;55495:664;;;55553:2;55537:36;;;55574:12;:10;:12::i;:::-;55588:4;55594:7;55603:4;55537:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;55533:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55863:1;55846:6;:13;:18;55842:293;;55917:2;55895:25;;;;;;;;;;;:::i;:::-;;;;;;;;55842:293;56087:6;56081:13;56072:6;56068:2;56064:15;56057:38;55533:616;55665:41;;;55655:51;;;:6;:51;;;;55651:130;;55759:2;55737:25;;;;;;;;;;;:::i;:::-;;;;;;;;55651:130;55609:186;55495:664;55383:782;;;;:::o;68946:196::-;68998:13;69023:112;;;;;;;;;;;;;;;;;;;68946:196;:::o;36358:698::-;36414:13;36463:14;36500:1;36480:17;36491:5;36480:10;:17::i;:::-;:21;36463:38;;36515:20;36549:6;36538:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36515:41;;36570:11;36696:6;36692:2;36688:15;36680:6;36676:28;36669:35;;36731:282;36738:4;36731:282;;;36762:5;;;;;;;;36901:10;36896:2;36889:5;36885:14;36880:32;36875:3;36867:46;36957:2;36948:11;;;;;;:::i;:::-;;;;;36990:1;36981:5;:10;36731:282;36977:21;36731:282;37033:6;37026:13;;;;;36358:698;;;:::o;40026:300::-;40128:4;40178:25;40163:40;;;:11;:40;;;;:104;;;;40234:33;40219:48;;;:11;:48;;;;40163:104;:156;;;;40283:36;40307:11;40283:23;:36::i;:::-;40163:156;40144:175;;40026:300;;;:::o;44172:115::-;44238:7;44264;:16;44272:7;44264:16;;;;;;;;;;;;;;;;;;;;;44257:23;;44172:115;;;:::o;53185:662::-;53345:9;:31;;;;53374:1;53358:18;;:4;:18;;;;53345:31;53341:460;;;53392:13;53408:22;53422:7;53408:13;:22::i;:::-;53392:38;;53574:1;53558:18;;:4;:18;;;;:35;;;;;53589:4;53580:13;;:5;:13;;;;53558:35;:69;;;;;53598:29;53615:5;53622:4;53598:16;:29::i;:::-;53597:30;53558:69;53554:142;;;53676:4;53654:27;;;;;;;;;;;:::i;:::-;;;;;;;;53554:142;53714:9;53710:81;;;53768:7;53764:2;53748:28;;53757:5;53748:28;;;;;;;;;;;;53710:81;53378:423;53341:460;53838:2;53811:15;:24;53827:7;53811:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;53185:662;;;;:::o;68300:204::-;68439:7;65862:19;:17;:19::i;:::-;68465:32:::1;68479:2;68483:7;68492:4;68465:13;:32::i;:::-;68458:39;;68300:204:::0;;;;;:::o;49098:100::-;49165:26;49175:2;49179:7;49165:26;;;;;;;;;;;;:9;:26::i;:::-;49098:100;;:::o;66590:126::-;66653:8;:6;:8::i;:::-;66648:62;;66684:15;;;;;;;;;;;;;;66648:62;66590:126::o;66390:128::-;66455:8;:6;:8::i;:::-;66451:61;;;66486:15;;;;;;;;;;;;;;66451:61;66390:128::o;31575:916::-;31628:7;31647:14;31664:1;31647:18;;31712:8;31703:5;:17;31699:103;;31749:8;31740:17;;;;;;:::i;:::-;;;;;31785:2;31775:12;;;;31699:103;31828:8;31819:5;:17;31815:103;;31865:8;31856:17;;;;;;:::i;:::-;;;;;31901:2;31891:12;;;;31815:103;31944:8;31935:5;:17;31931:103;;31981:8;31972:17;;;;;;:::i;:::-;;;;;32017:2;32007:12;;;;31931:103;32060:7;32051:5;:16;32047:100;;32096:7;32087:16;;;;;;:::i;:::-;;;;;32131:1;32121:11;;;;32047:100;32173:7;32164:5;:16;32160:100;;32209:7;32200:16;;;;;;:::i;:::-;;;;;32244:1;32234:11;;;;32160:100;32286:7;32277:5;:16;32273:100;;32322:7;32313:16;;;;;;:::i;:::-;;;;;32357:1;32347:11;;;;32273:100;32399:7;32390:5;:16;32386:66;;32436:1;32426:11;;;;32386:66;32478:6;32471:13;;;31575:916;;;:::o;19175:146::-;19251:4;19289:25;19274:40;;;:11;:40;;;;19267:47;;19175:146;;;:::o;59637:625::-;59732:7;59751:21;59775:32;59789:2;59793:7;59802:4;59775:13;:32::i;:::-;59751:56;;59847:1;59822:27;;:13;:27;;;59818:210;;59865:40;59897:7;59865:31;:40::i;:::-;59818:210;;;59943:2;59926:19;;:13;:19;;;59922:106;;59961:56;59994:13;60009:7;59961:32;:56::i;:::-;59922:106;59818:210;60055:1;60041:16;;:2;:16;;;60037:188;;60073:45;60110:7;60073:36;:45::i;:::-;60037:188;;;60156:2;60139:19;;:13;:19;;;60135:90;;60174:40;60202:2;60206:7;60174:27;:40::i;:::-;60135:90;60037:188;60242:13;60235:20;;;59637:625;;;;;:::o;49419:182::-;49513:18;49519:2;49523:7;49513:5;:18::i;:::-;49541:53;49572:1;49576:2;49580:7;49589:4;49541:22;:53::i;:::-;49419:182;;;:::o;47303:795::-;47389:7;47408:12;47423:17;47432:7;47423:8;:17::i;:::-;47408:32;;47516:1;47500:18;;:4;:18;;;47496:86;;47534:37;47551:4;47557;47563:7;47534:16;:37::i;:::-;47496:86;47642:1;47626:18;;:4;:18;;;47622:256;;47742:48;47759:1;47763:7;47780:1;47784:5;47742:8;:48::i;:::-;47852:1;47833:9;:15;47843:4;47833:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;47622:256;47906:1;47892:16;;:2;:16;;;47888:107;;47969:1;47952:9;:13;47962:2;47952:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;47888:107;48024:2;48005:7;:16;48013:7;48005:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;48061:7;48057:2;48042:27;;48051:4;48042:27;;;;;;;;;;;;48087:4;48080:11;;;47303:795;;;;;:::o;60965:161::-;61068:10;:17;;;;61041:15;:24;61057:7;61041:24;;;;;;;;;;;:44;;;;61095:10;61111:7;61095:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;60965:161;:::o;61743:959::-;62005:22;62030:15;62040:4;62030:9;:15::i;:::-;62005:40;;62055:18;62076:17;:26;62094:7;62076:26;;;;;;;;;;;;62055:47;;62220:14;62206:10;:28;62202:323;;62250:19;62272:12;:18;62285:4;62272:18;;;;;;;;;;;;;;;:34;62291:14;62272:34;;;;;;;;;;;;62250:56;;62354:11;62321:12;:18;62334:4;62321:18;;;;;;;;;;;;;;;:30;62340:10;62321:30;;;;;;;;;;;:44;;;;62470:10;62437:17;:30;62455:11;62437:30;;;;;;;;;;;:43;;;;62236:289;62202:323;62618:17;:26;62636:7;62618:26;;;;;;;;;;;62611:33;;;62661:12;:18;62674:4;62661:18;;;;;;;;;;;;;;;:34;62680:14;62661:34;;;;;;;;;;;62654:41;;;61824:878;;61743:959;;:::o;62990:1061::-;63239:22;63284:1;63264:10;:17;;;;:21;;;;:::i;:::-;63239:46;;63295:18;63316:15;:24;63332:7;63316:24;;;;;;;;;;;;63295:45;;63662:19;63684:10;63695:14;63684:26;;;;;;;;:::i;:::-;;;;;;;;;;63662:48;;63746:11;63721:10;63732;63721:22;;;;;;;;:::i;:::-;;;;;;;;;:36;;;;63856:10;63825:15;:28;63841:11;63825:28;;;;;;;;;;;:41;;;;63994:15;:24;64010:7;63994:24;;;;;;;;;;;63987:31;;;64028:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;63061:990;;;62990:1061;:::o;60556:214::-;60640:14;60673:1;60657:13;60667:2;60657:9;:13::i;:::-;:17;;;;:::i;:::-;60640:34;;60711:7;60684:12;:16;60697:2;60684:16;;;;;;;;;;;;;;;:24;60701:6;60684:24;;;;;;;;;;;:34;;;;60757:6;60728:17;:26;60746:7;60728:26;;;;;;;;;;;:35;;;;60630:140;60556:214;;:::o;48420:327::-;48501:1;48487:16;;:2;:16;;;48483:87;;48556:1;48526:33;;;;;;;;;;;:::i;:::-;;;;;;;;48483:87;48579:21;48603:32;48611:2;48615:7;48632:1;48603:7;:32::i;:::-;48579:56;;48674:1;48649:27;;:13;:27;;;48645:96;;48727:1;48699:31;;;;;;;;;;;:::i;:::-;;;;;;;;48645:96;48473:274;48420:327;;:::o;45547:368::-;45659:38;45673:5;45680:7;45689;45659:13;:38::i;:::-;45654:255;;45734:1;45717:19;;:5;:19;;;45713:186;;45786:7;45763:31;;;;;;;;;;;:::i;:::-;;;;;;;;45713:186;45867:7;45876;45840:44;;;;;;;;;;;;:::i;:::-;;;;;;;;45654:255;45547:368;;;:::o;44841:272::-;44944:4;44998:1;44979:21;;:7;:21;;;;:127;;;;;45026:7;45017:16;;:5;:16;;;:52;;;;45037:32;45054:5;45061:7;45037:16;:32::i;:::-;45017:52;:88;;;;45098:7;45073:32;;:21;45086:7;45073:12;:21::i;:::-;:32;;;45017:88;44979:127;44960:146;;44841:272;;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:118::-;4977:24;4995:5;4977:24;:::i;:::-;4972:3;4965:37;4890:118;;:::o;5014:222::-;5107:4;5145:2;5134:9;5130:18;5122:26;;5158:71;5226:1;5215:9;5211:17;5202:6;5158:71;:::i;:::-;5014:222;;;;:::o;5242:619::-;5319:6;5327;5335;5384:2;5372:9;5363:7;5359:23;5355:32;5352:119;;;5390:79;;:::i;:::-;5352:119;5510:1;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5481:117;5637:2;5663:53;5708:7;5699:6;5688:9;5684:22;5663:53;:::i;:::-;5653:63;;5608:118;5765:2;5791:53;5836:7;5827:6;5816:9;5812:22;5791:53;:::i;:::-;5781:63;;5736:118;5242:619;;;;;:::o;5867:329::-;5926:6;5975:2;5963:9;5954:7;5950:23;5946:32;5943:119;;;5981:79;;:::i;:::-;5943:119;6101:1;6126:53;6171:7;6162:6;6151:9;6147:22;6126:53;:::i;:::-;6116:63;;6072:117;5867:329;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:462::-;6525:6;6533;6582:2;6570:9;6561:7;6557:23;6553:32;6550:119;;;6588:79;;:::i;:::-;6550:119;6708:1;6733:50;6775:7;6766:6;6755:9;6751:22;6733:50;:::i;:::-;6723:60;;6679:114;6832:2;6858:50;6900:7;6891:6;6880:9;6876:22;6858:50;:::i;:::-;6848:60;;6803:115;6463:462;;;;;:::o;6931:117::-;7040:1;7037;7030:12;7054:117;7163:1;7160;7153:12;7177:117;7286:1;7283;7276:12;7317:568;7390:8;7400:6;7450:3;7443:4;7435:6;7431:17;7427:27;7417:122;;7458:79;;:::i;:::-;7417:122;7571:6;7558:20;7548:30;;7601:18;7593:6;7590:30;7587:117;;;7623:79;;:::i;:::-;7587:117;7737:4;7729:6;7725:17;7713:29;;7791:3;7783:4;7775:6;7771:17;7761:8;7757:32;7754:41;7751:128;;;7798:79;;:::i;:::-;7751:128;7317:568;;;;;:::o;7891:559::-;7977:6;7985;8034:2;8022:9;8013:7;8009:23;8005:32;8002:119;;;8040:79;;:::i;:::-;8002:119;8188:1;8177:9;8173:17;8160:31;8218:18;8210:6;8207:30;8204:117;;;8240:79;;:::i;:::-;8204:117;8353:80;8425:7;8416:6;8405:9;8401:22;8353:80;:::i;:::-;8335:98;;;;8131:312;7891:559;;;;;:::o;8456:468::-;8521:6;8529;8578:2;8566:9;8557:7;8553:23;8549:32;8546:119;;;8584:79;;:::i;:::-;8546:119;8704:1;8729:53;8774:7;8765:6;8754:9;8750:22;8729:53;:::i;:::-;8719:63;;8675:117;8831:2;8857:50;8899:7;8890:6;8879:9;8875:22;8857:50;:::i;:::-;8847:60;;8802:115;8456:468;;;;;:::o;8930:117::-;9039:1;9036;9029:12;9053:180;9101:77;9098:1;9091:88;9198:4;9195:1;9188:15;9222:4;9219:1;9212:15;9239:281;9322:27;9344:4;9322:27;:::i;:::-;9314:6;9310:40;9452:6;9440:10;9437:22;9416:18;9404:10;9401:34;9398:62;9395:88;;;9463:18;;:::i;:::-;9395:88;9503:10;9499:2;9492:22;9282:238;9239:281;;:::o;9526:129::-;9560:6;9587:20;;:::i;:::-;9577:30;;9616:33;9644:4;9636:6;9616:33;:::i;:::-;9526:129;;;:::o;9661:307::-;9722:4;9812:18;9804:6;9801:30;9798:56;;;9834:18;;:::i;:::-;9798:56;9872:29;9894:6;9872:29;:::i;:::-;9864:37;;9956:4;9950;9946:15;9938:23;;9661:307;;;:::o;9974:146::-;10071:6;10066:3;10061;10048:30;10112:1;10103:6;10098:3;10094:16;10087:27;9974:146;;;:::o;10126:423::-;10203:5;10228:65;10244:48;10285:6;10244:48;:::i;:::-;10228:65;:::i;:::-;10219:74;;10316:6;10309:5;10302:21;10354:4;10347:5;10343:16;10392:3;10383:6;10378:3;10374:16;10371:25;10368:112;;;10399:79;;:::i;:::-;10368:112;10489:54;10536:6;10531:3;10526;10489:54;:::i;:::-;10209:340;10126:423;;;;;:::o;10568:338::-;10623:5;10672:3;10665:4;10657:6;10653:17;10649:27;10639:122;;10680:79;;:::i;:::-;10639:122;10797:6;10784:20;10822:78;10896:3;10888:6;10881:4;10873:6;10869:17;10822:78;:::i;:::-;10813:87;;10629:277;10568:338;;;;:::o;10912:943::-;11007:6;11015;11023;11031;11080:3;11068:9;11059:7;11055:23;11051:33;11048:120;;;11087:79;;:::i;:::-;11048:120;11207:1;11232:53;11277:7;11268:6;11257:9;11253:22;11232:53;:::i;:::-;11222:63;;11178:117;11334:2;11360:53;11405:7;11396:6;11385:9;11381:22;11360:53;:::i;:::-;11350:63;;11305:118;11462:2;11488:53;11533:7;11524:6;11513:9;11509:22;11488:53;:::i;:::-;11478:63;;11433:118;11618:2;11607:9;11603:18;11590:32;11649:18;11641:6;11638:30;11635:117;;;11671:79;;:::i;:::-;11635:117;11776:62;11830:7;11821:6;11810:9;11806:22;11776:62;:::i;:::-;11766:72;;11561:287;10912:943;;;;;;;:::o;11861:474::-;11929:6;11937;11986:2;11974:9;11965:7;11961:23;11957:32;11954:119;;;11992:79;;:::i;:::-;11954:119;12112:1;12137:53;12182:7;12173:6;12162:9;12158:22;12137:53;:::i;:::-;12127:63;;12083:117;12239:2;12265:53;12310:7;12301:6;12290:9;12286:22;12265:53;:::i;:::-;12255:63;;12210:118;11861:474;;;;;:::o;12341:180::-;12389:77;12386:1;12379:88;12486:4;12483:1;12476:15;12510:4;12507:1;12500:15;12527:320;12571:6;12608:1;12602:4;12598:12;12588:22;;12655:1;12649:4;12645:12;12676:18;12666:81;;12732:4;12724:6;12720:17;12710:27;;12666:81;12794:2;12786:6;12783:14;12763:18;12760:38;12757:84;;12813:18;;:::i;:::-;12757:84;12578:269;12527:320;;;:::o;12853:442::-;13002:4;13040:2;13029:9;13025:18;13017:26;;13053:71;13121:1;13110:9;13106:17;13097:6;13053:71;:::i;:::-;13134:72;13202:2;13191:9;13187:18;13178:6;13134:72;:::i;:::-;13216;13284:2;13273:9;13269:18;13260:6;13216:72;:::i;:::-;12853:442;;;;;;:::o;13301:168::-;13441:20;13437:1;13429:6;13425:14;13418:44;13301:168;:::o;13475:366::-;13617:3;13638:67;13702:2;13697:3;13638:67;:::i;:::-;13631:74;;13714:93;13803:3;13714:93;:::i;:::-;13832:2;13827:3;13823:12;13816:19;;13475:366;;;:::o;13847:419::-;14013:4;14051:2;14040:9;14036:18;14028:26;;14100:9;14094:4;14090:20;14086:1;14075:9;14071:17;14064:47;14128:131;14254:4;14128:131;:::i;:::-;14120:139;;13847:419;;;:::o;14272:163::-;14412:15;14408:1;14400:6;14396:14;14389:39;14272:163;:::o;14441:366::-;14583:3;14604:67;14668:2;14663:3;14604:67;:::i;:::-;14597:74;;14680:93;14769:3;14680:93;:::i;:::-;14798:2;14793:3;14789:12;14782:19;;14441:366;;;:::o;14813:419::-;14979:4;15017:2;15006:9;15002:18;14994:26;;15066:9;15060:4;15056:20;15052:1;15041:9;15037:17;15030:47;15094:131;15220:4;15094:131;:::i;:::-;15086:139;;14813:419;;;:::o;15238:170::-;15378:22;15374:1;15366:6;15362:14;15355:46;15238:170;:::o;15414:366::-;15556:3;15577:67;15641:2;15636:3;15577:67;:::i;:::-;15570:74;;15653:93;15742:3;15653:93;:::i;:::-;15771:2;15766:3;15762:12;15755:19;;15414:366;;;:::o;15786:419::-;15952:4;15990:2;15979:9;15975:18;15967:26;;16039:9;16033:4;16029:20;16025:1;16014:9;16010:17;16003:47;16067:131;16193:4;16067:131;:::i;:::-;16059:139;;15786:419;;;:::o;16211:169::-;16351:21;16347:1;16339:6;16335:14;16328:45;16211:169;:::o;16386:366::-;16528:3;16549:67;16613:2;16608:3;16549:67;:::i;:::-;16542:74;;16625:93;16714:3;16625:93;:::i;:::-;16743:2;16738:3;16734:12;16727:19;;16386:366;;;:::o;16758:419::-;16924:4;16962:2;16951:9;16947:18;16939:26;;17011:9;17005:4;17001:20;16997:1;16986:9;16982:17;16975:47;17039:131;17165:4;17039:131;:::i;:::-;17031:139;;16758:419;;;:::o;17183:332::-;17304:4;17342:2;17331:9;17327:18;17319:26;;17355:71;17423:1;17412:9;17408:17;17399:6;17355:71;:::i;:::-;17436:72;17504:2;17493:9;17489:18;17480:6;17436:72;:::i;:::-;17183:332;;;;;:::o;17521:180::-;17569:77;17566:1;17559:88;17666:4;17663:1;17656:15;17690:4;17687:1;17680:15;17707:148;17809:11;17846:3;17831:18;;17707:148;;;;:::o;17861:390::-;17967:3;17995:39;18028:5;17995:39;:::i;:::-;18050:89;18132:6;18127:3;18050:89;:::i;:::-;18043:96;;18148:65;18206:6;18201:3;18194:4;18187:5;18183:16;18148:65;:::i;:::-;18238:6;18233:3;18229:16;18222:23;;17971:280;17861:390;;;;:::o;18257:435::-;18437:3;18459:95;18550:3;18541:6;18459:95;:::i;:::-;18452:102;;18571:95;18662:3;18653:6;18571:95;:::i;:::-;18564:102;;18683:3;18676:10;;18257:435;;;;;:::o;18698:164::-;18838:16;18834:1;18826:6;18822:14;18815:40;18698:164;:::o;18868:366::-;19010:3;19031:67;19095:2;19090:3;19031:67;:::i;:::-;19024:74;;19107:93;19196:3;19107:93;:::i;:::-;19225:2;19220:3;19216:12;19209:19;;18868:366;;;:::o;19240:419::-;19406:4;19444:2;19433:9;19429:18;19421:26;;19493:9;19487:4;19483:20;19479:1;19468:9;19464:17;19457:47;19521:131;19647:4;19521:131;:::i;:::-;19513:139;;19240:419;;;:::o;19665:180::-;19713:77;19710:1;19703:88;19810:4;19807:1;19800:15;19834:4;19831:1;19824:15;19851:233;19890:3;19913:24;19931:5;19913:24;:::i;:::-;19904:33;;19959:66;19952:5;19949:77;19946:103;;20029:18;;:::i;:::-;19946:103;20076:1;20069:5;20065:13;20058:20;;19851:233;;;:::o;20090:98::-;20141:6;20175:5;20169:12;20159:22;;20090:98;;;:::o;20194:168::-;20277:11;20311:6;20306:3;20299:19;20351:4;20346:3;20342:14;20327:29;;20194:168;;;;:::o;20368:373::-;20454:3;20482:38;20514:5;20482:38;:::i;:::-;20536:70;20599:6;20594:3;20536:70;:::i;:::-;20529:77;;20615:65;20673:6;20668:3;20661:4;20654:5;20650:16;20615:65;:::i;:::-;20705:29;20727:6;20705:29;:::i;:::-;20700:3;20696:39;20689:46;;20458:283;20368:373;;;;:::o;20747:640::-;20942:4;20980:3;20969:9;20965:19;20957:27;;20994:71;21062:1;21051:9;21047:17;21038:6;20994:71;:::i;:::-;21075:72;21143:2;21132:9;21128:18;21119:6;21075:72;:::i;:::-;21157;21225:2;21214:9;21210:18;21201:6;21157:72;:::i;:::-;21276:9;21270:4;21266:20;21261:2;21250:9;21246:18;21239:48;21304:76;21375:4;21366:6;21304:76;:::i;:::-;21296:84;;20747:640;;;;;;;:::o;21393:141::-;21449:5;21480:6;21474:13;21465:22;;21496:32;21522:5;21496:32;:::i;:::-;21393:141;;;;:::o;21540:349::-;21609:6;21658:2;21646:9;21637:7;21633:23;21629:32;21626:119;;;21664:79;;:::i;:::-;21626:119;21784:1;21809:63;21864:7;21855:6;21844:9;21840:22;21809:63;:::i;:::-;21799:73;;21755:127;21540:349;;;;:::o;21895:180::-;21943:77;21940:1;21933:88;22040:4;22037:1;22030:15;22064:4;22061:1;22054:15;22081:194;22121:4;22141:20;22159:1;22141:20;:::i;:::-;22136:25;;22175:20;22193:1;22175:20;:::i;:::-;22170:25;;22219:1;22216;22212:9;22204:17;;22243:1;22237:4;22234:11;22231:37;;;22248:18;;:::i;:::-;22231:37;22081:194;;;;:::o;22281:180::-;22329:77;22326:1;22319:88;22426:4;22423:1;22416:15;22450:4;22447:1;22440:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2560000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowList(address)": "2879",
								"allowistMint()": "infinite",
								"allowistMintOpen()": "2561",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"editMintWindows(bool,bool)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2677",
								"ownerOf(uint256)": "infinite",
								"pause()": "infinite",
								"paused()": "2519",
								"publicMint()": "infinite",
								"publicMintOpen()": "2577",
								"renounceOwnership()": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setAllowList(address[])": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "940",
								"symbol()": "infinite",
								"tokenByIndex(uint256)": "infinite",
								"tokenOfOwnerByIndex(address,uint256)": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "2508",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite",
								"_increaseBalance(address,uint128)": "infinite",
								"_update(address,uint256,address)": "infinite",
								"internalMint()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 68562,
									"end": 71155,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 68562,
									"end": 71155,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 68562,
									"end": 71155,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 68695,
									"end": 68698,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 68675,
									"end": 68698,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 68675,
									"end": 68698,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 68733,
									"end": 68738,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 68704,
									"end": 68738,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 68775,
									"end": 68780,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 68744,
									"end": 68780,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 68834,
									"end": 68940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 68920,
									"end": 68932,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "PUSH",
									"source": 0,
									"value": "4461744869657542696E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "PUSH",
									"source": 0,
									"value": "4448420000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39920,
									"end": 39925,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39912,
									"end": 39917,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39912,
									"end": 39925,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39912,
									"end": 39925,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39912,
									"end": 39925,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 39912,
									"end": 39925,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39912,
									"end": 39925,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39912,
									"end": 39925,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 39912,
									"end": 39925,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39912,
									"end": 39925,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 39912,
									"end": 39925,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39912,
									"end": 39925,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39945,
									"end": 39952,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39935,
									"end": 39942,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39935,
									"end": 39952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39935,
									"end": 39952,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39935,
									"end": 39952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 39935,
									"end": 39952,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39935,
									"end": 39952,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39935,
									"end": 39952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 39935,
									"end": 39952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39935,
									"end": 39952,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 39935,
									"end": 39952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39935,
									"end": 39952,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39846,
									"end": 39959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65629,
									"end": 65634,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65619,
									"end": 65626,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 65619,
									"end": 65626,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65619,
									"end": 65634,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 65619,
									"end": 65634,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 65619,
									"end": 65634,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 65619,
									"end": 65634,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 65619,
									"end": 65634,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 65619,
									"end": 65634,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 65619,
									"end": 65634,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 65619,
									"end": 65634,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 65619,
									"end": 65634,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 65619,
									"end": 65634,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 65619,
									"end": 65634,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 65619,
									"end": 65634,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 65619,
									"end": 65634,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 65619,
									"end": 65634,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 65619,
									"end": 65634,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 65619,
									"end": 65634,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 65619,
									"end": 65634,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 65619,
									"end": 65634,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2369,
									"end": 2370,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2371,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2345,
									"end": 2371,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2345,
									"end": 2357,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2345,
									"end": 2371,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2345,
									"end": 2371,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2345,
									"end": 2371,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2341,
									"end": 2436,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2341,
									"end": 2436,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2422,
									"end": 2423,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2394,
									"end": 2425,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2394,
									"end": 2425,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2341,
									"end": 2436,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2341,
									"end": 2436,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2445,
									"end": 2477,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2464,
									"end": 2476,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2445,
									"end": 2463,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 2445,
									"end": 2463,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2445,
									"end": 2463,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 2445,
									"end": 2477,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2445,
									"end": 2477,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2445,
									"end": 2477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2445,
									"end": 2477,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2445,
									"end": 2477,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2297,
									"end": 2484,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 68834,
									"end": 68940,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 68562,
									"end": 71155,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 68562,
									"end": 71155,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3984,
									"end": 4171,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 3984,
									"end": 4171,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4057,
									"end": 4073,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4076,
									"end": 4082,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 4076,
									"end": 4082,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4076,
									"end": 4082,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4076,
									"end": 4082,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 4076,
									"end": 4082,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4076,
									"end": 4082,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 4076,
									"end": 4082,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 4076,
									"end": 4082,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4076,
									"end": 4082,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 4076,
									"end": 4082,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4076,
									"end": 4082,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4057,
									"end": 4082,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4057,
									"end": 4082,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4101,
									"end": 4109,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4092,
									"end": 4098,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 4092,
									"end": 4098,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 4092,
									"end": 4109,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 4092,
									"end": 4109,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 4092,
									"end": 4109,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4092,
									"end": 4109,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 4092,
									"end": 4109,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4092,
									"end": 4109,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4092,
									"end": 4109,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 4092,
									"end": 4109,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 4092,
									"end": 4109,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4092,
									"end": 4109,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4092,
									"end": 4109,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 4092,
									"end": 4109,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4092,
									"end": 4109,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4092,
									"end": 4109,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 4092,
									"end": 4109,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 4092,
									"end": 4109,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4092,
									"end": 4109,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 4092,
									"end": 4109,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4155,
									"end": 4163,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4124,
									"end": 4164,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4124,
									"end": 4164,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4145,
									"end": 4153,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 4124,
									"end": 4164,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4124,
									"end": 4164,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4124,
									"end": 4164,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 4124,
									"end": 4164,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4124,
									"end": 4164,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4124,
									"end": 4164,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4124,
									"end": 4164,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4124,
									"end": 4164,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4124,
									"end": 4164,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 4124,
									"end": 4164,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 4124,
									"end": 4164,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4124,
									"end": 4164,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 4047,
									"end": 4171,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3984,
									"end": 4171,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3984,
									"end": 4171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 68562,
									"end": 71155,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 68562,
									"end": 71155,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 68562,
									"end": 71155,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 68562,
									"end": 71155,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 68562,
									"end": 71155,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 68562,
									"end": 71155,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68562,
									"end": 71155,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 68562,
									"end": 71155,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68562,
									"end": 71155,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203f93cdc2f44d09f267f39423522a072d90f0ea08793ea56194bcdb21e467e1ce64736f6c63430008160033",
									".code": [
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "C5B8BBB9"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "C5B8BBB9"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "BCC9CA5B"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "6447C35D"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "2848AEAF"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "2F745C59"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "2F745C59"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "4F6CCCE7"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "2848AEAF"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "2E9B82F2"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "2F48DE79"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "26092B83"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68562,
											"end": 71155,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 70948,
											"end": 71153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 70948,
											"end": 71153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 70948,
											"end": 71153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 40830,
											"end": 40919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 40830,
											"end": 40919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 41962,
											"end": 42116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 41962,
											"end": 42116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 41962,
											"end": 42116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41788,
											"end": 41901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 41788,
											"end": 41901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 59181,
											"end": 59283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 59181,
											"end": 59283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 42608,
											"end": 43186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 42608,
											"end": 43186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 69768,
											"end": 69950,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 69768,
											"end": 69950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69768,
											"end": 69950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 69768,
											"end": 69950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 69768,
											"end": 69950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69768,
											"end": 69950,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 69768,
											"end": 69950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69768,
											"end": 69950,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 68787,
											"end": 68828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 68787,
											"end": 68828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 68787,
											"end": 68828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 70018,
											"end": 70271,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 70018,
											"end": 70271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70018,
											"end": 70271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 70018,
											"end": 70271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 70018,
											"end": 70271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70018,
											"end": 70271,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 70018,
											"end": 70271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70018,
											"end": 70271,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 69505,
											"end": 69713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 69505,
											"end": 69713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 58855,
											"end": 59110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 58855,
											"end": 59110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 58855,
											"end": 59110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 69213,
											"end": 69276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 43252,
											"end": 43384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 43252,
											"end": 43384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 59355,
											"end": 59581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 59355,
											"end": 59581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 59355,
											"end": 59581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 66238,
											"end": 66322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 66238,
											"end": 66322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 40650,
											"end": 40768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 40650,
											"end": 40768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 40650,
											"end": 40768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 69310,
											"end": 69499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 69310,
											"end": 69499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 40385,
											"end": 40593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 40385,
											"end": 40593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 40385,
											"end": 40593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3365,
											"end": 3466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 69148,
											"end": 69207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2710,
											"end": 2795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2710,
											"end": 2795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 40983,
											"end": 41076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 40983,
											"end": 41076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 42183,
											"end": 42327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 42183,
											"end": 42327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 43450,
											"end": 43658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 43450,
											"end": 43658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 68704,
											"end": 68738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 68704,
											"end": 68738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 68744,
											"end": 68780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 68744,
											"end": 68780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 41142,
											"end": 41397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 41142,
											"end": 41397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 41142,
											"end": 41397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 42393,
											"end": 42546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 42393,
											"end": 42546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 42393,
											"end": 42546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3615,
											"end": 3830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3615,
											"end": 3830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71083,
											"end": 71087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71110,
											"end": 71146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 71134,
											"end": 71145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71110,
											"end": 71133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 71110,
											"end": 71146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71110,
											"end": 71146,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 71110,
											"end": 71146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71103,
											"end": 71146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71103,
											"end": 71146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70948,
											"end": 71153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40875,
											"end": 40888,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40907,
											"end": 40912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 40900,
											"end": 40912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 40900,
											"end": 40912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40900,
											"end": 40912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40830,
											"end": 40919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42029,
											"end": 42036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42048,
											"end": 42070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 42062,
											"end": 42069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42048,
											"end": 42061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 42048,
											"end": 42070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42048,
											"end": 42070,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 42048,
											"end": 42070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42048,
											"end": 42070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42088,
											"end": 42109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 42101,
											"end": 42108,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42088,
											"end": 42100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 42088,
											"end": 42109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42088,
											"end": 42109,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 42088,
											"end": 42109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42081,
											"end": 42109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42081,
											"end": 42109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 42116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41859,
											"end": 41894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 41868,
											"end": 41870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41872,
											"end": 41879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41881,
											"end": 41893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 41881,
											"end": 41891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 41881,
											"end": 41893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41881,
											"end": 41893,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 41881,
											"end": 41893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41859,
											"end": 41867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 41859,
											"end": 41894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41859,
											"end": 41894,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 41859,
											"end": 41894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41788,
											"end": 41901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59233,
											"end": 59240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59259,
											"end": 59269,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 59259,
											"end": 59276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59259,
											"end": 59276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59259,
											"end": 59276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59259,
											"end": 59276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59252,
											"end": 59276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59252,
											"end": 59276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59181,
											"end": 59283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42716,
											"end": 42717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42702,
											"end": 42718,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42702,
											"end": 42718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42702,
											"end": 42704,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42702,
											"end": 42718,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42702,
											"end": 42718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42702,
											"end": 42718,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42698,
											"end": 42785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 42698,
											"end": 42785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42771,
											"end": 42772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 42741,
											"end": 42774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42741,
											"end": 42774,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42698,
											"end": 42785,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 42698,
											"end": 42785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43027,
											"end": 43061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 43035,
											"end": 43037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43039,
											"end": 43046,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 43048,
											"end": 43058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 43048,
											"end": 43060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43060,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 43048,
											"end": 43060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43027,
											"end": 43034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 43027,
											"end": 43061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43027,
											"end": 43061,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 43027,
											"end": 43061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43003,
											"end": 43061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43092,
											"end": 43096,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43075,
											"end": 43096,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43075,
											"end": 43096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43075,
											"end": 43088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43075,
											"end": 43096,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43075,
											"end": 43096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43075,
											"end": 43096,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43071,
											"end": 43180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 43071,
											"end": 43180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43140,
											"end": 43144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43146,
											"end": 43153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43155,
											"end": 43168,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "PUSH",
											"source": 0,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 43119,
											"end": 43169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43119,
											"end": 43169,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43071,
											"end": 43180,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 43071,
											"end": 43180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42688,
											"end": 43186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42608,
											"end": 43186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69768,
											"end": 69950,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 69768,
											"end": 69950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69823,
											"end": 69837,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 69823,
											"end": 69837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69823,
											"end": 69837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69823,
											"end": 69837,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69823,
											"end": 69837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69823,
											"end": 69837,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 69823,
											"end": 69837,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 69823,
											"end": 69837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69823,
											"end": 69837,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 69823,
											"end": 69837,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 69823,
											"end": 69837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 69815,
											"end": 69860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 69815,
											"end": 69860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69891,
											"end": 69901,
											"name": "PUSH",
											"source": 0,
											"value": "470DE4DF820000"
										},
										{
											"begin": 69878,
											"end": 69887,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 69878,
											"end": 69901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 69870,
											"end": 69919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 69870,
											"end": 69919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69929,
											"end": 69943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 69929,
											"end": 69941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 69929,
											"end": 69943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69929,
											"end": 69943,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 69929,
											"end": 69943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69768,
											"end": 69950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68787,
											"end": 68828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70018,
											"end": 70271,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 70018,
											"end": 70271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70075,
											"end": 70091,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 70075,
											"end": 70091,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70075,
											"end": 70091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70075,
											"end": 70091,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 70075,
											"end": 70091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70075,
											"end": 70091,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 70075,
											"end": 70091,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 70075,
											"end": 70091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70075,
											"end": 70091,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 70075,
											"end": 70091,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 70075,
											"end": 70091,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 70067,
											"end": 70116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 70067,
											"end": 70116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70134,
											"end": 70143,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70144,
											"end": 70154,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 70134,
											"end": 70155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 70126,
											"end": 70179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 70126,
											"end": 70179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70210,
											"end": 70222,
											"name": "PUSH",
											"source": 0,
											"value": "B5E620F48000"
										},
										{
											"begin": 70197,
											"end": 70206,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 70197,
											"end": 70222,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 70189,
											"end": 70240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 70189,
											"end": 70240,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70250,
											"end": 70264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 70250,
											"end": 70262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 70250,
											"end": 70264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70250,
											"end": 70264,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 70250,
											"end": 70264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70018,
											"end": 70271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2603,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2603,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69644,
											"end": 69659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69627,
											"end": 69641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 69627,
											"end": 69641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69627,
											"end": 69659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 69627,
											"end": 69659,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 69627,
											"end": 69659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69627,
											"end": 69659,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69627,
											"end": 69659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69627,
											"end": 69659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 69627,
											"end": 69659,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 69627,
											"end": 69659,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 69627,
											"end": 69659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69627,
											"end": 69659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69627,
											"end": 69659,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 69627,
											"end": 69659,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69627,
											"end": 69659,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69627,
											"end": 69659,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 69627,
											"end": 69659,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 69627,
											"end": 69659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69627,
											"end": 69659,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 69627,
											"end": 69659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69688,
											"end": 69705,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69669,
											"end": 69685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 69669,
											"end": 69685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69669,
											"end": 69705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 69669,
											"end": 69705,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 69669,
											"end": 69705,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69669,
											"end": 69705,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69669,
											"end": 69705,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69669,
											"end": 69705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 69669,
											"end": 69705,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 69669,
											"end": 69705,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 69669,
											"end": 69705,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69669,
											"end": 69705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69669,
											"end": 69705,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 69669,
											"end": 69705,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69669,
											"end": 69705,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69669,
											"end": 69705,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 69669,
											"end": 69705,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 69669,
											"end": 69705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69669,
											"end": 69705,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 69669,
											"end": 69705,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69505,
											"end": 69713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58943,
											"end": 58950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58975,
											"end": 58991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 58985,
											"end": 58990,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58975,
											"end": 58984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 58975,
											"end": 58991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58975,
											"end": 58991,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 58975,
											"end": 58991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58966,
											"end": 58971,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58966,
											"end": 58991,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58962,
											"end": 59061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 58962,
											"end": 59061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59037,
											"end": 59042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59044,
											"end": 59049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "PUSH",
											"source": 0,
											"value": "A57D13DC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 59014,
											"end": 59050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59014,
											"end": 59050,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58962,
											"end": 59061,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 58962,
											"end": 59061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59089,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 59077,
											"end": 59096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59090,
											"end": 59095,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59096,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59077,
											"end": 59096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59096,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59077,
											"end": 59096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59096,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59077,
											"end": 59096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59096,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59077,
											"end": 59096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59077,
											"end": 59096,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59097,
											"end": 59102,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59077,
											"end": 59103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59077,
											"end": 59103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59077,
											"end": 59103,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59077,
											"end": 59103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59070,
											"end": 59103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59070,
											"end": 59103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58855,
											"end": 59110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 69213,
											"end": 69276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2603,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2603,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69259,
											"end": 69269,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 69259,
											"end": 69267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 69259,
											"end": 69269,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69259,
											"end": 69269,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 69259,
											"end": 69269,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69213,
											"end": 69276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 43355,
											"end": 43359,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43361,
											"end": 43363,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43365,
											"end": 43372,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43338,
											"end": 43377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43377,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43338,
											"end": 43377,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43338,
											"end": 43377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43338,
											"end": 43377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 43338,
											"end": 43377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43338,
											"end": 43377,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 43338,
											"end": 43377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59421,
											"end": 59428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59453,
											"end": 59466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 59453,
											"end": 59464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 59453,
											"end": 59466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59453,
											"end": 59466,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 59453,
											"end": 59466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59444,
											"end": 59449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59444,
											"end": 59466,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59440,
											"end": 59541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 59440,
											"end": 59541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59520,
											"end": 59521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59524,
											"end": 59529,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "PUSH",
											"source": 0,
											"value": "A57D13DC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 59489,
											"end": 59530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59489,
											"end": 59530,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59440,
											"end": 59541,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 59440,
											"end": 59541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59557,
											"end": 59567,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 59568,
											"end": 59573,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 59557,
											"end": 59574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59557,
											"end": 59574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59550,
											"end": 59574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59550,
											"end": 59574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59355,
											"end": 59581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66285,
											"end": 66289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66308,
											"end": 66315,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 66308,
											"end": 66315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66308,
											"end": 66315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66308,
											"end": 66315,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 66308,
											"end": 66315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66308,
											"end": 66315,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 66308,
											"end": 66315,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 66308,
											"end": 66315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66308,
											"end": 66315,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 66308,
											"end": 66315,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 66308,
											"end": 66315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 66301,
											"end": 66315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66301,
											"end": 66315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66238,
											"end": 66322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40713,
											"end": 40720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40739,
											"end": 40761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 40753,
											"end": 40760,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40739,
											"end": 40752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 40739,
											"end": 40761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40739,
											"end": 40761,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 40739,
											"end": 40761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40732,
											"end": 40761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40732,
											"end": 40761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40650,
											"end": 40768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 2603,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2603,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69396,
											"end": 69405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69391,
											"end": 69493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 69391,
											"end": 69493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69415,
											"end": 69424,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69415,
											"end": 69424,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69415,
											"end": 69431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69415,
											"end": 69431,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69411,
											"end": 69412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69411,
											"end": 69431,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 69391,
											"end": 69493,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69391,
											"end": 69493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 69391,
											"end": 69493,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69478,
											"end": 69482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69452,
											"end": 69461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 69452,
											"end": 69475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69462,
											"end": 69471,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69471,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 69472,
											"end": 69473,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 69462,
											"end": 69474,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 69462,
											"end": 69474,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 69462,
											"end": 69474,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 69452,
											"end": 69475,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 69452,
											"end": 69475,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69475,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69475,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69452,
											"end": 69475,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69475,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69475,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69452,
											"end": 69475,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69452,
											"end": 69475,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69452,
											"end": 69482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 69452,
											"end": 69482,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69482,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69482,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69482,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 69452,
											"end": 69482,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69482,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69482,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69482,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69482,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69482,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69482,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69482,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 69452,
											"end": 69482,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69433,
											"end": 69436,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69433,
											"end": 69436,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69433,
											"end": 69436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69433,
											"end": 69436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69433,
											"end": 69436,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69433,
											"end": 69436,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69433,
											"end": 69436,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69391,
											"end": 69493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 69391,
											"end": 69493,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69391,
											"end": 69493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 69391,
											"end": 69493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69391,
											"end": 69493,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69310,
											"end": 69499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40448,
											"end": 40455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40488,
											"end": 40489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40471,
											"end": 40490,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40471,
											"end": 40490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40471,
											"end": 40476,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40471,
											"end": 40490,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40471,
											"end": 40490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40471,
											"end": 40490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40467,
											"end": 40554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 40467,
											"end": 40554,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40540,
											"end": 40541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "PUSH",
											"source": 0,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 40513,
											"end": 40543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40513,
											"end": 40543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40467,
											"end": 40554,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 40467,
											"end": 40554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40570,
											"end": 40579,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 40570,
											"end": 40586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40580,
											"end": 40585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40570,
											"end": 40586,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40570,
											"end": 40586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40570,
											"end": 40586,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40570,
											"end": 40586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40570,
											"end": 40586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40570,
											"end": 40586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40570,
											"end": 40586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40570,
											"end": 40586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40570,
											"end": 40586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40570,
											"end": 40586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40570,
											"end": 40586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40570,
											"end": 40586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40570,
											"end": 40586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40570,
											"end": 40586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40570,
											"end": 40586,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40570,
											"end": 40586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40563,
											"end": 40586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40563,
											"end": 40586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40385,
											"end": 40593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3365,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2603,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2603,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3459,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 3456,
											"end": 3457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 3429,
											"end": 3459,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3459,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 3429,
											"end": 3459,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3365,
											"end": 3466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 69148,
											"end": 69207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2603,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2603,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69192,
											"end": 69200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 69192,
											"end": 69198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 69192,
											"end": 69200,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69192,
											"end": 69200,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 69192,
											"end": 69200,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69148,
											"end": 69207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2756,
											"end": 2763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2788,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2782,
											"end": 2788,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2782,
											"end": 2788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2782,
											"end": 2788,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2782,
											"end": 2788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2782,
											"end": 2788,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2782,
											"end": 2788,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2782,
											"end": 2788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2782,
											"end": 2788,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2782,
											"end": 2788,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2782,
											"end": 2788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2775,
											"end": 2788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41030,
											"end": 41043,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41062,
											"end": 41069,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 41055,
											"end": 41069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 41055,
											"end": 41069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41055,
											"end": 41069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40983,
											"end": 41076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42268,
											"end": 42320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 42287,
											"end": 42299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 42287,
											"end": 42297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 42287,
											"end": 42299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42287,
											"end": 42299,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 42287,
											"end": 42299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42301,
											"end": 42309,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42311,
											"end": 42319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42268,
											"end": 42286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 42268,
											"end": 42320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42268,
											"end": 42320,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 42268,
											"end": 42320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42183,
											"end": 42327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43563,
											"end": 43594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 43576,
											"end": 43580,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43582,
											"end": 43584,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43586,
											"end": 43593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43563,
											"end": 43575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 43563,
											"end": 43594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43563,
											"end": 43594,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 43563,
											"end": 43594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43604,
											"end": 43651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 43627,
											"end": 43631,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43633,
											"end": 43635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43637,
											"end": 43644,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43646,
											"end": 43650,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43604,
											"end": 43626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 43604,
											"end": 43651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43604,
											"end": 43651,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 43604,
											"end": 43651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43450,
											"end": 43658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68704,
											"end": 68738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68744,
											"end": 68780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41206,
											"end": 41219,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41231,
											"end": 41253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 41245,
											"end": 41252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41231,
											"end": 41244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 41231,
											"end": 41253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41231,
											"end": 41253,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 41231,
											"end": 41253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41231,
											"end": 41253,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41264,
											"end": 41285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41288,
											"end": 41298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 41288,
											"end": 41296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 41288,
											"end": 41298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41288,
											"end": 41298,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 41288,
											"end": 41298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41264,
											"end": 41298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41264,
											"end": 41298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41339,
											"end": 41340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41321,
											"end": 41328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41315,
											"end": 41336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41315,
											"end": 41340,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41357,
											"end": 41364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 41366,
											"end": 41373,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 41366,
											"end": 41384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41366,
											"end": 41384,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 41366,
											"end": 41384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 41343,
											"end": 41385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41343,
											"end": 41385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 41315,
											"end": 41390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41308,
											"end": 41390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41308,
											"end": 41390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41308,
											"end": 41390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41142,
											"end": 41397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42481,
											"end": 42485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42504,
											"end": 42522,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42504,
											"end": 42529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42523,
											"end": 42528,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42529,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42504,
											"end": 42529,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42529,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42504,
											"end": 42529,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42504,
											"end": 42529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42529,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42529,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42504,
											"end": 42529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42504,
											"end": 42529,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42530,
											"end": 42538,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 42504,
											"end": 42539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42497,
											"end": 42539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42497,
											"end": 42539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42393,
											"end": 42546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2603,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2603,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2603,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3699,
											"end": 3721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3699,
											"end": 3721,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3707,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3699,
											"end": 3721,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3721,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3786,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 3695,
											"end": 3786,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 3773,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3744,
											"end": 3775,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3744,
											"end": 3775,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3786,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 3695,
											"end": 3786,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3795,
											"end": 3823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 3814,
											"end": 3822,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3795,
											"end": 3813,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 3795,
											"end": 3823,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3795,
											"end": 3823,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 3795,
											"end": 3823,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3615,
											"end": 3830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58554,
											"end": 58776,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 58554,
											"end": 58776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58656,
											"end": 58660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58694,
											"end": 58729,
											"name": "PUSH",
											"source": 0,
											"value": "780E9D6300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58679,
											"end": 58729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58679,
											"end": 58729,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 58679,
											"end": 58729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58679,
											"end": 58690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58679,
											"end": 58729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58679,
											"end": 58729,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 58679,
											"end": 58729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58679,
											"end": 58729,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58679,
											"end": 58769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58679,
											"end": 58769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 58679,
											"end": 58769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58679,
											"end": 58769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58733,
											"end": 58769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 58757,
											"end": 58768,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58733,
											"end": 58756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 58733,
											"end": 58769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58733,
											"end": 58769,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 58733,
											"end": 58769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58679,
											"end": 58769,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 58679,
											"end": 58769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58672,
											"end": 58769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58672,
											"end": 58769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58554,
											"end": 58776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58554,
											"end": 58776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58554,
											"end": 58776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58554,
											"end": 58776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54603,
											"end": 54844,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 54603,
											"end": 54844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54666,
											"end": 54673,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54685,
											"end": 54698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54701,
											"end": 54718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 54710,
											"end": 54717,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54701,
											"end": 54709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 54701,
											"end": 54718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54701,
											"end": 54718,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 54701,
											"end": 54718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54685,
											"end": 54718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54685,
											"end": 54718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54749,
											"end": 54750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54732,
											"end": 54751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54732,
											"end": 54751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54732,
											"end": 54737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54732,
											"end": 54751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54732,
											"end": 54751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54732,
											"end": 54751,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 54728,
											"end": 54816,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 54774,
											"end": 54805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54805,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54816,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 54728,
											"end": 54816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54832,
											"end": 54837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54825,
											"end": 54837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54825,
											"end": 54837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54825,
											"end": 54837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54603,
											"end": 54844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54603,
											"end": 54844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54603,
											"end": 54844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54603,
											"end": 54844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44403,
											"end": 44530,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 44403,
											"end": 44530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44473,
											"end": 44480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44499,
											"end": 44514,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44515,
											"end": 44522,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44499,
											"end": 44523,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44492,
											"end": 44523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44492,
											"end": 44523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44403,
											"end": 44530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44403,
											"end": 44530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44403,
											"end": 44530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44403,
											"end": 44530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 782,
											"end": 878,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 782,
											"end": 878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 835,
											"end": 842,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 861,
											"end": 871,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 854,
											"end": 871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 854,
											"end": 871,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 782,
											"end": 878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 782,
											"end": 878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52883,
											"end": 53003,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 52883,
											"end": 53003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52963,
											"end": 52996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 52972,
											"end": 52974,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52976,
											"end": 52983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52985,
											"end": 52989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52991,
											"end": 52995,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52963,
											"end": 52971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 52963,
											"end": 52996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52963,
											"end": 52996,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 52963,
											"end": 52996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52883,
											"end": 53003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52883,
											"end": 53003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52883,
											"end": 53003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52883,
											"end": 53003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70537,
											"end": 70759,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 70537,
											"end": 70759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70690,
											"end": 70697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70720,
											"end": 70752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 70734,
											"end": 70736,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 70738,
											"end": 70745,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 70747,
											"end": 70751,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 70720,
											"end": 70733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 70720,
											"end": 70752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70720,
											"end": 70752,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 70720,
											"end": 70752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70713,
											"end": 70752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70713,
											"end": 70752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70537,
											"end": 70759,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 70537,
											"end": 70759,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70537,
											"end": 70759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70537,
											"end": 70759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70537,
											"end": 70759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70537,
											"end": 70759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70277,
											"end": 70461,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 70277,
											"end": 70461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70344,
											"end": 70353,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 70344,
											"end": 70353,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 70328,
											"end": 70341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 70328,
											"end": 70339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 70328,
											"end": 70341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70328,
											"end": 70341,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 70328,
											"end": 70341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70328,
											"end": 70353,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 70320,
											"end": 70372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 70320,
											"end": 70372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70382,
											"end": 70397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70400,
											"end": 70412,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 70400,
											"end": 70412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70400,
											"end": 70414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70400,
											"end": 70414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 70400,
											"end": 70414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70400,
											"end": 70414,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70400,
											"end": 70414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70400,
											"end": 70414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70400,
											"end": 70414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 70400,
											"end": 70414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70400,
											"end": 70414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 70400,
											"end": 70414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70400,
											"end": 70414,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 70400,
											"end": 70414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70400,
											"end": 70414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70400,
											"end": 70414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70400,
											"end": 70414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70400,
											"end": 70414,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 70382,
											"end": 70414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70382,
											"end": 70414,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70424,
											"end": 70454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 70434,
											"end": 70444,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 70446,
											"end": 70453,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 70424,
											"end": 70433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 70424,
											"end": 70454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70424,
											"end": 70454,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 70424,
											"end": 70454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70310,
											"end": 70461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70277,
											"end": 70461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 3030,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2868,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 2938,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2938,
											"end": 2950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2950,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2927,
											"end": 2950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2927,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 2927,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2950,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2927,
											"end": 2950,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2927,
											"end": 2950,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 2923,
											"end": 3024,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 3000,
											"end": 3010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3000,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 3000,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2973,
											"end": 3013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3013,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2923,
											"end": 3024,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 2923,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2868,
											"end": 3030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67098,
											"end": 67215,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 67098,
											"end": 67215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66109,
											"end": 66125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 66109,
											"end": 66123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 66109,
											"end": 66125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66109,
											"end": 66125,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 66109,
											"end": 66125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67166,
											"end": 67171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67156,
											"end": 67163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 67156,
											"end": 67163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67156,
											"end": 67171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 67156,
											"end": 67171,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 67156,
											"end": 67171,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67156,
											"end": 67171,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 67156,
											"end": 67171,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67156,
											"end": 67171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 67156,
											"end": 67171,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 67156,
											"end": 67171,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 67156,
											"end": 67171,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 67156,
											"end": 67171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67156,
											"end": 67171,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67156,
											"end": 67171,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67156,
											"end": 67171,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67156,
											"end": 67171,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 67156,
											"end": 67171,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 67156,
											"end": 67171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67156,
											"end": 67171,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 67156,
											"end": 67171,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67186,
											"end": 67208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 67195,
											"end": 67207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 67195,
											"end": 67205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 67195,
											"end": 67207,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67195,
											"end": 67207,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 67195,
											"end": 67207,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67186,
											"end": 67208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67186,
											"end": 67208,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67186,
											"end": 67208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 67186,
											"end": 67208,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67186,
											"end": 67208,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67186,
											"end": 67208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 67186,
											"end": 67208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67186,
											"end": 67208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 67186,
											"end": 67208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67186,
											"end": 67208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67186,
											"end": 67208,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67186,
											"end": 67208,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67186,
											"end": 67208,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67186,
											"end": 67208,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 67186,
											"end": 67208,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67186,
											"end": 67208,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 67098,
											"end": 67215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3984,
											"end": 4171,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 3984,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4076,
											"end": 4082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4082,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4101,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 4092,
											"end": 4098,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4092,
											"end": 4109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4155,
											"end": 4163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 4164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4124,
											"end": 4164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4145,
											"end": 4153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 4164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4124,
											"end": 4164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 4164,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 4124,
											"end": 4164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4124,
											"end": 4164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 4164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4124,
											"end": 4164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 4164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 4164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 4164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 4164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 4164,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3984,
											"end": 4171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3984,
											"end": 4171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66851,
											"end": 66966,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 66851,
											"end": 66966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65862,
											"end": 65881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 65862,
											"end": 65879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 65862,
											"end": 65881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 65862,
											"end": 65881,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 65862,
											"end": 65881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66920,
											"end": 66924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 66910,
											"end": 66917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 66910,
											"end": 66917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66910,
											"end": 66924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 66910,
											"end": 66924,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 66910,
											"end": 66924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66910,
											"end": 66924,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 66910,
											"end": 66924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66910,
											"end": 66924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 66910,
											"end": 66924,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 66910,
											"end": 66924,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 66910,
											"end": 66924,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 66910,
											"end": 66924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66910,
											"end": 66924,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 66910,
											"end": 66924,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66910,
											"end": 66924,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66910,
											"end": 66924,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 66910,
											"end": 66924,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 66910,
											"end": 66924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66910,
											"end": 66924,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 66910,
											"end": 66924,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66939,
											"end": 66959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 66946,
											"end": 66958,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 66946,
											"end": 66956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 66946,
											"end": 66958,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66946,
											"end": 66958,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 66946,
											"end": 66958,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66939,
											"end": 66959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66939,
											"end": 66959,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 66939,
											"end": 66959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 66939,
											"end": 66959,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 66939,
											"end": 66959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66939,
											"end": 66959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 66939,
											"end": 66959,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66939,
											"end": 66959,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 66939,
											"end": 66959,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66939,
											"end": 66959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66939,
											"end": 66959,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 66939,
											"end": 66959,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66939,
											"end": 66959,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 66939,
											"end": 66959,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 66939,
											"end": 66959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66939,
											"end": 66959,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 66851,
											"end": 66966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54056,
											"end": 54368,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 54056,
											"end": 54368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54183,
											"end": 54184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54163,
											"end": 54185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54163,
											"end": 54185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54163,
											"end": 54171,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54163,
											"end": 54185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54163,
											"end": 54185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54163,
											"end": 54185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54159,
											"end": 54250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 54159,
											"end": 54250,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54230,
											"end": 54238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "PUSH",
											"source": 0,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 54208,
											"end": 54239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54208,
											"end": 54239,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54159,
											"end": 54250,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 54159,
											"end": 54250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54297,
											"end": 54305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54277,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54259,
											"end": 54284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54278,
											"end": 54283,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54284,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54259,
											"end": 54284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54284,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54259,
											"end": 54284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54259,
											"end": 54284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54259,
											"end": 54284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54259,
											"end": 54284,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54285,
											"end": 54293,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54294,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54259,
											"end": 54294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54294,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54259,
											"end": 54294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54259,
											"end": 54294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54259,
											"end": 54294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54259,
											"end": 54294,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54259,
											"end": 54305,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 54259,
											"end": 54305,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54305,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54305,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 54259,
											"end": 54305,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54305,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54305,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54305,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54305,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54305,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54259,
											"end": 54305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54342,
											"end": 54350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54335,
											"end": 54340,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 54352,
											"end": 54360,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 54320,
											"end": 54361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54320,
											"end": 54361,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 54056,
											"end": 54368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54056,
											"end": 54368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54056,
											"end": 54368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54056,
											"end": 54368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55383,
											"end": 56165,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 55383,
											"end": 56165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55516,
											"end": 55517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55499,
											"end": 55501,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55499,
											"end": 55513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55499,
											"end": 55513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55499,
											"end": 55513,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 55499,
											"end": 55517,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 55495,
											"end": 56159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55495,
											"end": 56159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 55495,
											"end": 56159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55553,
											"end": 55555,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55573,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55537,
											"end": 55573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55573,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 55574,
											"end": 55586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 55574,
											"end": 55584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 55574,
											"end": 55586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55574,
											"end": 55586,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 55574,
											"end": 55586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55588,
											"end": 55592,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 55594,
											"end": 55601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55603,
											"end": 55607,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 55537,
											"end": 55608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 55537,
											"end": 55608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 55537,
											"end": 55608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55863,
											"end": 55864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55846,
											"end": 55852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55846,
											"end": 55859,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55846,
											"end": 55864,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55842,
											"end": 56135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 55842,
											"end": 56135,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55917,
											"end": 55919,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 55895,
											"end": 55920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55895,
											"end": 55920,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55842,
											"end": 56135,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 55842,
											"end": 56135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56087,
											"end": 56093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56081,
											"end": 56094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56072,
											"end": 56078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56068,
											"end": 56070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56064,
											"end": 56079,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56057,
											"end": 56095,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 55533,
											"end": 56149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55665,
											"end": 55706,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 55665,
											"end": 55706,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 55665,
											"end": 55706,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 55655,
											"end": 55706,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55655,
											"end": 55706,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55655,
											"end": 55706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55655,
											"end": 55661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55655,
											"end": 55706,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 55655,
											"end": 55706,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55655,
											"end": 55706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55655,
											"end": 55706,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55651,
											"end": 55781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 55651,
											"end": 55781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55759,
											"end": 55761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 55737,
											"end": 55762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55737,
											"end": 55762,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55651,
											"end": 55781,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 55651,
											"end": 55781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55609,
											"end": 55795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55495,
											"end": 56159,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 55495,
											"end": 56159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55383,
											"end": 56165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55383,
											"end": 56165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55383,
											"end": 56165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55383,
											"end": 56165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55383,
											"end": 56165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68946,
											"end": 69142,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 68946,
											"end": 69142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68998,
											"end": 69011,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "PUSH",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "PUSH data",
											"source": 0,
											"value": "78F91A9492FEA23A7CF472B247F10DFD8E130E7BA967CDCCA1EB528E0DA13077"
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "PUSH",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68946,
											"end": 69142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68946,
											"end": 69142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36358,
											"end": 37056,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 36358,
											"end": 37056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36414,
											"end": 36427,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 36463,
											"end": 36477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36500,
											"end": 36501,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36480,
											"end": 36497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 36491,
											"end": 36496,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36480,
											"end": 36490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 36480,
											"end": 36497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36480,
											"end": 36497,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 36480,
											"end": 36497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36480,
											"end": 36501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36463,
											"end": 36501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36463,
											"end": 36501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36515,
											"end": 36535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36549,
											"end": 36555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 36538,
											"end": 36556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36538,
											"end": 36556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36515,
											"end": 36556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36515,
											"end": 36556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36570,
											"end": 36581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36696,
											"end": 36702,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36692,
											"end": 36694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36688,
											"end": 36703,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36680,
											"end": 36686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36676,
											"end": 36704,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36669,
											"end": 36704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36669,
											"end": 36704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36731,
											"end": 37013,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 36731,
											"end": 37013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36738,
											"end": 36742,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36731,
											"end": 37013,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36731,
											"end": 37013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 36731,
											"end": 37013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36762,
											"end": 36767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36762,
											"end": 36767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36762,
											"end": 36767,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 36762,
											"end": 36767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36762,
											"end": 36767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36762,
											"end": 36767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36762,
											"end": 36767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36762,
											"end": 36767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36901,
											"end": 36911,
											"name": "PUSH",
											"source": 0,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 36896,
											"end": 36898,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 36889,
											"end": 36894,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36885,
											"end": 36899,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 36880,
											"end": 36912,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 36875,
											"end": 36878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36867,
											"end": 36913,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 36957,
											"end": 36959,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 36948,
											"end": 36959,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 36948,
											"end": 36959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 36948,
											"end": 36959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 36948,
											"end": 36959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36959,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 36948,
											"end": 36959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36959,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 36948,
											"end": 36959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36959,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36959,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 36948,
											"end": 36959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36990,
											"end": 36991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36981,
											"end": 36986,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36981,
											"end": 36991,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36731,
											"end": 37013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 36977,
											"end": 36998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36731,
											"end": 37013,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 36731,
											"end": 37013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37033,
											"end": 37039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37026,
											"end": 37039,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37026,
											"end": 37039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37026,
											"end": 37039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37026,
											"end": 37039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37026,
											"end": 37039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36358,
											"end": 37056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36358,
											"end": 37056,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36358,
											"end": 37056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36358,
											"end": 37056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40026,
											"end": 40326,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 40026,
											"end": 40326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40128,
											"end": 40132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40178,
											"end": 40203,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 40163,
											"end": 40203,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40163,
											"end": 40203,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 40163,
											"end": 40203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40163,
											"end": 40174,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40163,
											"end": 40203,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40163,
											"end": 40203,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 40163,
											"end": 40203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40163,
											"end": 40203,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40163,
											"end": 40267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40163,
											"end": 40267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 40163,
											"end": 40267,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40163,
											"end": 40267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40234,
											"end": 40267,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 40219,
											"end": 40267,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40219,
											"end": 40267,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 40219,
											"end": 40267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40219,
											"end": 40230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40219,
											"end": 40267,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 40219,
											"end": 40267,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 40219,
											"end": 40267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40219,
											"end": 40267,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40163,
											"end": 40267,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 40163,
											"end": 40267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40163,
											"end": 40319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40163,
											"end": 40319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 40163,
											"end": 40319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40163,
											"end": 40319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40283,
											"end": 40319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 40307,
											"end": 40318,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40283,
											"end": 40306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 40283,
											"end": 40319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40283,
											"end": 40319,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 40283,
											"end": 40319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40163,
											"end": 40319,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 40163,
											"end": 40319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40144,
											"end": 40319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40144,
											"end": 40319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40026,
											"end": 40326,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40026,
											"end": 40326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40026,
											"end": 40326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40026,
											"end": 40326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44172,
											"end": 44287,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 44172,
											"end": 44287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44238,
											"end": 44245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44264,
											"end": 44271,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44272,
											"end": 44279,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44264,
											"end": 44280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44257,
											"end": 44280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44257,
											"end": 44280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44172,
											"end": 44287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44172,
											"end": 44287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44172,
											"end": 44287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44172,
											"end": 44287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53185,
											"end": 53847,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 53185,
											"end": 53847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53345,
											"end": 53354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53345,
											"end": 53376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53345,
											"end": 53376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 53345,
											"end": 53376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53345,
											"end": 53376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53374,
											"end": 53375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53358,
											"end": 53376,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53358,
											"end": 53376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53358,
											"end": 53362,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53358,
											"end": 53376,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53358,
											"end": 53376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53358,
											"end": 53376,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53358,
											"end": 53376,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53345,
											"end": 53376,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 53345,
											"end": 53376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53341,
											"end": 53801,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53341,
											"end": 53801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 53341,
											"end": 53801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53392,
											"end": 53405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53408,
											"end": 53430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 53422,
											"end": 53429,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53408,
											"end": 53421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 53408,
											"end": 53430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53408,
											"end": 53430,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 53408,
											"end": 53430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53392,
											"end": 53430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53392,
											"end": 53430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53574,
											"end": 53575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53558,
											"end": 53576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53558,
											"end": 53576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53558,
											"end": 53576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 53558,
											"end": 53593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53589,
											"end": 53593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53580,
											"end": 53593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53580,
											"end": 53593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53593,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53593,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 53558,
											"end": 53593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 53558,
											"end": 53627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53598,
											"end": 53627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 53615,
											"end": 53620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53622,
											"end": 53626,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53598,
											"end": 53614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 53598,
											"end": 53627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53598,
											"end": 53627,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 53598,
											"end": 53627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53597,
											"end": 53627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53558,
											"end": 53627,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 53558,
											"end": 53627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53554,
											"end": 53696,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53554,
											"end": 53696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 53554,
											"end": 53696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53676,
											"end": 53680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "PUSH",
											"source": 0,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 53654,
											"end": 53681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53654,
											"end": 53681,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53554,
											"end": 53696,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 53554,
											"end": 53696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53714,
											"end": 53723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53710,
											"end": 53791,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53710,
											"end": 53791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 53710,
											"end": 53791,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53768,
											"end": 53775,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53764,
											"end": 53766,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53748,
											"end": 53776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53748,
											"end": 53776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53757,
											"end": 53762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53748,
											"end": 53776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53748,
											"end": 53776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53748,
											"end": 53776,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 53748,
											"end": 53776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53748,
											"end": 53776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53748,
											"end": 53776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53748,
											"end": 53776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53748,
											"end": 53776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53748,
											"end": 53776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53748,
											"end": 53776,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53748,
											"end": 53776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53748,
											"end": 53776,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 53710,
											"end": 53791,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 53710,
											"end": 53791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53341,
											"end": 53801,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 53341,
											"end": 53801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53838,
											"end": 53840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53811,
											"end": 53835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53827,
											"end": 53834,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53835,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53811,
											"end": 53835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53835,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53811,
											"end": 53835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53811,
											"end": 53835,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53811,
											"end": 53840,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 53811,
											"end": 53840,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53840,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53811,
											"end": 53840,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53840,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53840,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53811,
											"end": 53840,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53840,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53840,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53840,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53811,
											"end": 53840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53185,
											"end": 53847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53185,
											"end": 53847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53185,
											"end": 53847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53185,
											"end": 53847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53185,
											"end": 53847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68300,
											"end": 68504,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 68300,
											"end": 68504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68439,
											"end": 68446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65862,
											"end": 65881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 65862,
											"end": 65879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 65862,
											"end": 65881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 65862,
											"end": 65881,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 65862,
											"end": 65881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68465,
											"end": 68497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 68479,
											"end": 68481,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 68483,
											"end": 68490,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 68492,
											"end": 68496,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 68465,
											"end": 68478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 68465,
											"end": 68497,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68465,
											"end": 68497,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 68465,
											"end": 68497,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68458,
											"end": 68497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68458,
											"end": 68497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68300,
											"end": 68504,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 68300,
											"end": 68504,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 68300,
											"end": 68504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68300,
											"end": 68504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68300,
											"end": 68504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68300,
											"end": 68504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49098,
											"end": 49198,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 49098,
											"end": 49198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49165,
											"end": 49191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 49175,
											"end": 49177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49179,
											"end": 49186,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49165,
											"end": 49191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49165,
											"end": 49191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49165,
											"end": 49191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49165,
											"end": 49191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49165,
											"end": 49191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49165,
											"end": 49191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49165,
											"end": 49191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49165,
											"end": 49191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49165,
											"end": 49191,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49165,
											"end": 49191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49165,
											"end": 49191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49165,
											"end": 49191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49165,
											"end": 49174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 49165,
											"end": 49191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49165,
											"end": 49191,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 49165,
											"end": 49191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49098,
											"end": 49198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49098,
											"end": 49198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49098,
											"end": 49198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66590,
											"end": 66716,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 66590,
											"end": 66716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66653,
											"end": 66661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 66653,
											"end": 66659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 66653,
											"end": 66661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66653,
											"end": 66661,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 66653,
											"end": 66661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66648,
											"end": 66710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 66648,
											"end": 66710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66684,
											"end": 66699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66684,
											"end": 66699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 66684,
											"end": 66699,
											"name": "PUSH",
											"source": 0,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 66684,
											"end": 66699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66684,
											"end": 66699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66684,
											"end": 66699,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66684,
											"end": 66699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66684,
											"end": 66699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66684,
											"end": 66699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 66684,
											"end": 66699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66684,
											"end": 66699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 66684,
											"end": 66699,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 66684,
											"end": 66699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66684,
											"end": 66699,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 66648,
											"end": 66710,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 66648,
											"end": 66710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66590,
											"end": 66716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66390,
											"end": 66518,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 66390,
											"end": 66518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66455,
											"end": 66463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 66455,
											"end": 66461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 66455,
											"end": 66463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 66455,
											"end": 66463,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 66455,
											"end": 66463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66451,
											"end": 66512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66451,
											"end": 66512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 66451,
											"end": 66512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66486,
											"end": 66501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66486,
											"end": 66501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 66486,
											"end": 66501,
											"name": "PUSH",
											"source": 0,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 66486,
											"end": 66501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66486,
											"end": 66501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66486,
											"end": 66501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66486,
											"end": 66501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66486,
											"end": 66501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66486,
											"end": 66501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 66486,
											"end": 66501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66486,
											"end": 66501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 66486,
											"end": 66501,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 66486,
											"end": 66501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66486,
											"end": 66501,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 66451,
											"end": 66512,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 66451,
											"end": 66512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66390,
											"end": 66518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31575,
											"end": 32491,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 31575,
											"end": 32491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31628,
											"end": 31635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31647,
											"end": 31661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31664,
											"end": 31665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31647,
											"end": 31665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31647,
											"end": 31665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31712,
											"end": 31720,
											"name": "PUSH",
											"source": 0,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 31703,
											"end": 31708,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31703,
											"end": 31720,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 31699,
											"end": 31802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31749,
											"end": 31757,
											"name": "PUSH",
											"source": 0,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 31740,
											"end": 31757,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31740,
											"end": 31757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31740,
											"end": 31757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 31740,
											"end": 31757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31740,
											"end": 31757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 31740,
											"end": 31757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 31740,
											"end": 31757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31740,
											"end": 31757,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 31740,
											"end": 31757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31740,
											"end": 31757,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 31740,
											"end": 31757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31740,
											"end": 31757,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31740,
											"end": 31757,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31740,
											"end": 31757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31785,
											"end": 31787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31775,
											"end": 31787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31775,
											"end": 31787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31775,
											"end": 31787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31775,
											"end": 31787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31699,
											"end": 31802,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 31699,
											"end": 31802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31828,
											"end": 31836,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 31819,
											"end": 31824,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 31836,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31815,
											"end": 31918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 31815,
											"end": 31918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31865,
											"end": 31873,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 31856,
											"end": 31873,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31856,
											"end": 31873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31856,
											"end": 31873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 31856,
											"end": 31873,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31856,
											"end": 31873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 31856,
											"end": 31873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 31856,
											"end": 31873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31856,
											"end": 31873,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 31856,
											"end": 31873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31856,
											"end": 31873,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 31856,
											"end": 31873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31856,
											"end": 31873,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31856,
											"end": 31873,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31856,
											"end": 31873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31901,
											"end": 31903,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31891,
											"end": 31903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31903,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31815,
											"end": 31918,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 31815,
											"end": 31918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31944,
											"end": 31952,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 31935,
											"end": 31940,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31935,
											"end": 31952,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31931,
											"end": 32034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 31931,
											"end": 32034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31981,
											"end": 31989,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 31972,
											"end": 31989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 31989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 31989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 31972,
											"end": 31989,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 31989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 31972,
											"end": 31989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 31972,
											"end": 31989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 31989,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 31972,
											"end": 31989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 31989,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 31972,
											"end": 31989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 31989,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 31989,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31972,
											"end": 31989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32017,
											"end": 32019,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 32007,
											"end": 32019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32007,
											"end": 32019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32007,
											"end": 32019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32007,
											"end": 32019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31931,
											"end": 32034,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 31931,
											"end": 32034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32060,
											"end": 32067,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 32051,
											"end": 32056,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32051,
											"end": 32067,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32047,
											"end": 32147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 32047,
											"end": 32147,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32096,
											"end": 32103,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 32087,
											"end": 32103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32087,
											"end": 32103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32087,
											"end": 32103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 32087,
											"end": 32103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32087,
											"end": 32103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 32087,
											"end": 32103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 32087,
											"end": 32103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32087,
											"end": 32103,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 32087,
											"end": 32103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32087,
											"end": 32103,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 32087,
											"end": 32103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32087,
											"end": 32103,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32087,
											"end": 32103,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32087,
											"end": 32103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32131,
											"end": 32132,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 32121,
											"end": 32132,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32121,
											"end": 32132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32121,
											"end": 32132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32121,
											"end": 32132,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32047,
											"end": 32147,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 32047,
											"end": 32147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32173,
											"end": 32180,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 32164,
											"end": 32169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32164,
											"end": 32180,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32160,
											"end": 32260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 32160,
											"end": 32260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32209,
											"end": 32216,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 32200,
											"end": 32216,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 32200,
											"end": 32216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 32200,
											"end": 32216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 32200,
											"end": 32216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32216,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 32200,
											"end": 32216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32216,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 32200,
											"end": 32216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32216,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32216,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32200,
											"end": 32216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32244,
											"end": 32245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32234,
											"end": 32245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32234,
											"end": 32245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32234,
											"end": 32245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32234,
											"end": 32245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32160,
											"end": 32260,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 32160,
											"end": 32260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32293,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 32277,
											"end": 32282,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32277,
											"end": 32293,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32273,
											"end": 32373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 32273,
											"end": 32373,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32322,
											"end": 32329,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 32313,
											"end": 32329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32313,
											"end": 32329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32313,
											"end": 32329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 32313,
											"end": 32329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32313,
											"end": 32329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 32313,
											"end": 32329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 32313,
											"end": 32329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32313,
											"end": 32329,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 32313,
											"end": 32329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32313,
											"end": 32329,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 32313,
											"end": 32329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32313,
											"end": 32329,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32313,
											"end": 32329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32313,
											"end": 32329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32357,
											"end": 32358,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32347,
											"end": 32358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32347,
											"end": 32358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32347,
											"end": 32358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32347,
											"end": 32358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32273,
											"end": 32373,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 32273,
											"end": 32373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32399,
											"end": 32406,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 32390,
											"end": 32395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32390,
											"end": 32406,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32386,
											"end": 32452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 32386,
											"end": 32452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32436,
											"end": 32437,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32426,
											"end": 32437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32426,
											"end": 32437,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32426,
											"end": 32437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32426,
											"end": 32437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32386,
											"end": 32452,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 32386,
											"end": 32452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32478,
											"end": 32484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32471,
											"end": 32484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32471,
											"end": 32484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32471,
											"end": 32484,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31575,
											"end": 32491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31575,
											"end": 32491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31575,
											"end": 32491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31575,
											"end": 32491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19175,
											"end": 19321,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 19175,
											"end": 19321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19251,
											"end": 19255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19289,
											"end": 19314,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19274,
											"end": 19314,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19274,
											"end": 19314,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19274,
											"end": 19314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19274,
											"end": 19285,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19274,
											"end": 19314,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19274,
											"end": 19314,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19274,
											"end": 19314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19274,
											"end": 19314,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19267,
											"end": 19314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19267,
											"end": 19314,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19175,
											"end": 19321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19175,
											"end": 19321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19175,
											"end": 19321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19175,
											"end": 19321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59637,
											"end": 60262,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 59637,
											"end": 60262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59732,
											"end": 59739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59751,
											"end": 59772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59775,
											"end": 59807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 59789,
											"end": 59791,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 59793,
											"end": 59800,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 59802,
											"end": 59806,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 59775,
											"end": 59788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 59775,
											"end": 59807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59775,
											"end": 59807,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 59775,
											"end": 59807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59751,
											"end": 59807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59751,
											"end": 59807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59847,
											"end": 59848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59822,
											"end": 59849,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59822,
											"end": 59849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59822,
											"end": 59835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59822,
											"end": 59849,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59822,
											"end": 59849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59822,
											"end": 59849,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59818,
											"end": 60028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 59818,
											"end": 60028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59865,
											"end": 59905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 59897,
											"end": 59904,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59865,
											"end": 59896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 59865,
											"end": 59905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59865,
											"end": 59905,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 59865,
											"end": 59905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59818,
											"end": 60028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 59818,
											"end": 60028,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59818,
											"end": 60028,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 59818,
											"end": 60028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59943,
											"end": 59945,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59926,
											"end": 59945,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59926,
											"end": 59945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59926,
											"end": 59939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59926,
											"end": 59945,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59926,
											"end": 59945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59926,
											"end": 59945,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59922,
											"end": 60028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 59922,
											"end": 60028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59961,
											"end": 60017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 59994,
											"end": 60007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60009,
											"end": 60016,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 59961,
											"end": 59993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 59961,
											"end": 60017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59961,
											"end": 60017,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 59961,
											"end": 60017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59922,
											"end": 60028,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 59922,
											"end": 60028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59818,
											"end": 60028,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 59818,
											"end": 60028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60055,
											"end": 60056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60041,
											"end": 60057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60041,
											"end": 60057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60041,
											"end": 60043,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60041,
											"end": 60057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60041,
											"end": 60057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60041,
											"end": 60057,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 60037,
											"end": 60225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 60037,
											"end": 60225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60073,
											"end": 60118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 60110,
											"end": 60117,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60073,
											"end": 60109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 60073,
											"end": 60118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60073,
											"end": 60118,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 60073,
											"end": 60118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60037,
											"end": 60225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 60037,
											"end": 60225,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60037,
											"end": 60225,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 60037,
											"end": 60225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60156,
											"end": 60158,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60139,
											"end": 60158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60139,
											"end": 60158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60139,
											"end": 60152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60139,
											"end": 60158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60139,
											"end": 60158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60139,
											"end": 60158,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60135,
											"end": 60225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 60135,
											"end": 60225,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60174,
											"end": 60214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 60202,
											"end": 60204,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60206,
											"end": 60213,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60174,
											"end": 60201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 60174,
											"end": 60214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60174,
											"end": 60214,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 60174,
											"end": 60214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60135,
											"end": 60225,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 60135,
											"end": 60225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60037,
											"end": 60225,
											"name": "tag",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 60037,
											"end": 60225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60242,
											"end": 60255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60235,
											"end": 60255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60235,
											"end": 60255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60235,
											"end": 60255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59637,
											"end": 60262,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 59637,
											"end": 60262,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59637,
											"end": 60262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59637,
											"end": 60262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59637,
											"end": 60262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59637,
											"end": 60262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49419,
											"end": 49601,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 49419,
											"end": 49601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49513,
											"end": 49531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 49519,
											"end": 49521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49523,
											"end": 49530,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49513,
											"end": 49518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 49513,
											"end": 49531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49513,
											"end": 49531,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 49513,
											"end": 49531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49541,
											"end": 49594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 49572,
											"end": 49573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49576,
											"end": 49578,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49580,
											"end": 49587,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49589,
											"end": 49593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49541,
											"end": 49563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 49541,
											"end": 49594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49541,
											"end": 49594,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 49541,
											"end": 49594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49419,
											"end": 49601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49419,
											"end": 49601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49419,
											"end": 49601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49419,
											"end": 49601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47303,
											"end": 48098,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 47303,
											"end": 48098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47389,
											"end": 47396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47408,
											"end": 47420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47423,
											"end": 47440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 47432,
											"end": 47439,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47423,
											"end": 47431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 47423,
											"end": 47440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47423,
											"end": 47440,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 47423,
											"end": 47440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47408,
											"end": 47440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47408,
											"end": 47440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47516,
											"end": 47517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47500,
											"end": 47518,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47500,
											"end": 47518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47500,
											"end": 47504,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47500,
											"end": 47518,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47500,
											"end": 47518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47500,
											"end": 47518,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47496,
											"end": 47582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 47496,
											"end": 47582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47534,
											"end": 47571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 47551,
											"end": 47555,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47557,
											"end": 47561,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47563,
											"end": 47570,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47534,
											"end": 47550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 47534,
											"end": 47571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47534,
											"end": 47571,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 47534,
											"end": 47571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47496,
											"end": 47582,
											"name": "tag",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 47496,
											"end": 47582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47642,
											"end": 47643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47626,
											"end": 47644,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47626,
											"end": 47644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47626,
											"end": 47630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47626,
											"end": 47644,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47626,
											"end": 47644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47626,
											"end": 47644,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47622,
											"end": 47878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 47622,
											"end": 47878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47742,
											"end": 47790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 47759,
											"end": 47760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47763,
											"end": 47770,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47780,
											"end": 47781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47784,
											"end": 47789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47742,
											"end": 47750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 47742,
											"end": 47790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47742,
											"end": 47790,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 47742,
											"end": 47790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47852,
											"end": 47853,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47833,
											"end": 47842,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47833,
											"end": 47848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47843,
											"end": 47847,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47848,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47833,
											"end": 47848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47848,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47833,
											"end": 47848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47848,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47833,
											"end": 47848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47848,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47833,
											"end": 47848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47833,
											"end": 47848,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47833,
											"end": 47853,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47853,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47853,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47853,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47853,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47853,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47833,
											"end": 47853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47622,
											"end": 47878,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 47622,
											"end": 47878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47906,
											"end": 47907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47892,
											"end": 47908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47892,
											"end": 47908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47892,
											"end": 47894,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47892,
											"end": 47908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47892,
											"end": 47908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47892,
											"end": 47908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47888,
											"end": 47995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 47888,
											"end": 47995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47969,
											"end": 47970,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47952,
											"end": 47961,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47952,
											"end": 47965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47962,
											"end": 47964,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47965,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47952,
											"end": 47965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47965,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47952,
											"end": 47965,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47952,
											"end": 47965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47952,
											"end": 47965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47952,
											"end": 47965,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47952,
											"end": 47970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47970,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47970,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47970,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47970,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47970,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47952,
											"end": 47970,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47888,
											"end": 47995,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 47888,
											"end": 47995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48024,
											"end": 48026,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48012,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 48005,
											"end": 48021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48013,
											"end": 48020,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48005,
											"end": 48021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48005,
											"end": 48021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48005,
											"end": 48021,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48005,
											"end": 48026,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 48005,
											"end": 48026,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48005,
											"end": 48026,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48026,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48026,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48026,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48005,
											"end": 48026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48026,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48026,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48026,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 48005,
											"end": 48026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48061,
											"end": 48068,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48057,
											"end": 48059,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 48042,
											"end": 48069,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48042,
											"end": 48069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48051,
											"end": 48055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48042,
											"end": 48069,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48042,
											"end": 48069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48042,
											"end": 48069,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 48042,
											"end": 48069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48042,
											"end": 48069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48042,
											"end": 48069,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48042,
											"end": 48069,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48042,
											"end": 48069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48042,
											"end": 48069,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48042,
											"end": 48069,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48042,
											"end": 48069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48042,
											"end": 48069,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 48087,
											"end": 48091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48080,
											"end": 48091,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48080,
											"end": 48091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48080,
											"end": 48091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47303,
											"end": 48098,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 47303,
											"end": 48098,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47303,
											"end": 48098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47303,
											"end": 48098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47303,
											"end": 48098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47303,
											"end": 48098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60965,
											"end": 61126,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 60965,
											"end": 61126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61068,
											"end": 61078,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 61068,
											"end": 61085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61068,
											"end": 61085,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61068,
											"end": 61085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61068,
											"end": 61085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61041,
											"end": 61056,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 61041,
											"end": 61065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61057,
											"end": 61064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61041,
											"end": 61065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61041,
											"end": 61065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61041,
											"end": 61065,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61041,
											"end": 61065,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61041,
											"end": 61065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61041,
											"end": 61065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61041,
											"end": 61065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61041,
											"end": 61065,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61041,
											"end": 61065,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61041,
											"end": 61065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61041,
											"end": 61065,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61041,
											"end": 61085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61041,
											"end": 61085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61041,
											"end": 61085,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61041,
											"end": 61085,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61105,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 61111,
											"end": 61118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61095,
											"end": 61119,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60965,
											"end": 61126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60965,
											"end": 61126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61743,
											"end": 62702,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 61743,
											"end": 62702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62005,
											"end": 62027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62030,
											"end": 62045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 62040,
											"end": 62044,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62030,
											"end": 62039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 62030,
											"end": 62045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62030,
											"end": 62045,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 62030,
											"end": 62045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62005,
											"end": 62045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62005,
											"end": 62045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62055,
											"end": 62073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62076,
											"end": 62093,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 62076,
											"end": 62102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62094,
											"end": 62101,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62076,
											"end": 62102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62076,
											"end": 62102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62076,
											"end": 62102,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62076,
											"end": 62102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62076,
											"end": 62102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62076,
											"end": 62102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62076,
											"end": 62102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62076,
											"end": 62102,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62076,
											"end": 62102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62076,
											"end": 62102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62076,
											"end": 62102,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62076,
											"end": 62102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 62055,
											"end": 62102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62055,
											"end": 62102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62220,
											"end": 62234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62206,
											"end": 62216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62206,
											"end": 62234,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62202,
											"end": 62525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 62202,
											"end": 62525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62250,
											"end": 62269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62272,
											"end": 62284,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 62272,
											"end": 62290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62285,
											"end": 62289,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62290,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62272,
											"end": 62290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62290,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62272,
											"end": 62290,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62272,
											"end": 62290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62290,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62290,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62272,
											"end": 62290,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62272,
											"end": 62290,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62291,
											"end": 62305,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62272,
											"end": 62306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62272,
											"end": 62306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62272,
											"end": 62306,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62272,
											"end": 62306,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 62250,
											"end": 62306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62250,
											"end": 62306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62354,
											"end": 62365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62333,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 62321,
											"end": 62339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62334,
											"end": 62338,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62321,
											"end": 62339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62321,
											"end": 62339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62339,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62321,
											"end": 62339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62339,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62339,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62321,
											"end": 62339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62321,
											"end": 62339,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62340,
											"end": 62350,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62321,
											"end": 62351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62321,
											"end": 62351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62321,
											"end": 62351,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62365,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 62321,
											"end": 62365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62470,
											"end": 62480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62437,
											"end": 62454,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 62437,
											"end": 62467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62455,
											"end": 62466,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62437,
											"end": 62467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62437,
											"end": 62467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62437,
											"end": 62467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62437,
											"end": 62467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62437,
											"end": 62467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62437,
											"end": 62467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62437,
											"end": 62467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62437,
											"end": 62467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62437,
											"end": 62467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62437,
											"end": 62467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62437,
											"end": 62467,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62437,
											"end": 62480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62437,
											"end": 62480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62437,
											"end": 62480,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 62437,
											"end": 62480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62236,
											"end": 62525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62202,
											"end": 62525,
											"name": "tag",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 62202,
											"end": 62525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62618,
											"end": 62635,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 62618,
											"end": 62644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62636,
											"end": 62643,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 62618,
											"end": 62644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62618,
											"end": 62644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62618,
											"end": 62644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62618,
											"end": 62644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62618,
											"end": 62644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62618,
											"end": 62644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62618,
											"end": 62644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62618,
											"end": 62644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62618,
											"end": 62644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62618,
											"end": 62644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62618,
											"end": 62644,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62611,
											"end": 62644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62611,
											"end": 62644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62611,
											"end": 62644,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62673,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 62661,
											"end": 62679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62674,
											"end": 62678,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62679,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62661,
											"end": 62679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62679,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62661,
											"end": 62679,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62679,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62679,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62661,
											"end": 62679,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62679,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62679,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62661,
											"end": 62679,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62661,
											"end": 62679,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62680,
											"end": 62694,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62661,
											"end": 62695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62695,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 62661,
											"end": 62695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62661,
											"end": 62695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62661,
											"end": 62695,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 62654,
											"end": 62695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62654,
											"end": 62695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62654,
											"end": 62695,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 61824,
											"end": 62702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61824,
											"end": 62702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61743,
											"end": 62702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61743,
											"end": 62702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61743,
											"end": 62702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62990,
											"end": 64051,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 62990,
											"end": 64051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63239,
											"end": 63261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63284,
											"end": 63285,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63264,
											"end": 63274,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 63264,
											"end": 63281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63264,
											"end": 63281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 63264,
											"end": 63281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63264,
											"end": 63281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63264,
											"end": 63285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 63264,
											"end": 63285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 63264,
											"end": 63285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63264,
											"end": 63285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 63264,
											"end": 63285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63264,
											"end": 63285,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 63264,
											"end": 63285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63239,
											"end": 63285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63239,
											"end": 63285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63295,
											"end": 63313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63316,
											"end": 63331,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 63316,
											"end": 63340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63332,
											"end": 63339,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 63316,
											"end": 63340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63316,
											"end": 63340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63316,
											"end": 63340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 63316,
											"end": 63340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63316,
											"end": 63340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63316,
											"end": 63340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63316,
											"end": 63340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63316,
											"end": 63340,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 63316,
											"end": 63340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63316,
											"end": 63340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63316,
											"end": 63340,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 63316,
											"end": 63340,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 63295,
											"end": 63340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63295,
											"end": 63340,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63662,
											"end": 63681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63684,
											"end": 63694,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 63695,
											"end": 63709,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 63684,
											"end": 63710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63684,
											"end": 63710,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 63662,
											"end": 63710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63662,
											"end": 63710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63746,
											"end": 63757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63721,
											"end": 63731,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 63732,
											"end": 63742,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 63721,
											"end": 63743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 63721,
											"end": 63743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63721,
											"end": 63757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63721,
											"end": 63757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63721,
											"end": 63757,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 63721,
											"end": 63757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63856,
											"end": 63866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63825,
											"end": 63840,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 63825,
											"end": 63853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63841,
											"end": 63852,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 63825,
											"end": 63853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63825,
											"end": 63853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63825,
											"end": 63853,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 63825,
											"end": 63853,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63825,
											"end": 63853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63825,
											"end": 63853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63825,
											"end": 63853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63825,
											"end": 63853,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 63825,
											"end": 63853,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63825,
											"end": 63853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63825,
											"end": 63853,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 63825,
											"end": 63866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63825,
											"end": 63866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63825,
											"end": 63866,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 63825,
											"end": 63866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63994,
											"end": 64009,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 63994,
											"end": 64018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64010,
											"end": 64017,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 63994,
											"end": 64018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63994,
											"end": 64018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63994,
											"end": 64018,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 63994,
											"end": 64018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63994,
											"end": 64018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63994,
											"end": 64018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 63994,
											"end": 64018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63994,
											"end": 64018,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 63994,
											"end": 64018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 63994,
											"end": 64018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63994,
											"end": 64018,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 63987,
											"end": 64018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63987,
											"end": 64018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63987,
											"end": 64018,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64038,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 64028,
											"end": 64044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "tag",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 64028,
											"end": 64044,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 63061,
											"end": 64051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63061,
											"end": 64051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63061,
											"end": 64051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62990,
											"end": 64051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62990,
											"end": 64051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60556,
											"end": 60770,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 60556,
											"end": 60770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60640,
											"end": 60654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60673,
											"end": 60674,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60657,
											"end": 60670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 60667,
											"end": 60669,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60657,
											"end": 60666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 60657,
											"end": 60670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60657,
											"end": 60670,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 60657,
											"end": 60670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60657,
											"end": 60674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 60657,
											"end": 60674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60657,
											"end": 60674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60657,
											"end": 60674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 60657,
											"end": 60674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60657,
											"end": 60674,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 60657,
											"end": 60674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60640,
											"end": 60674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60640,
											"end": 60674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60711,
											"end": 60718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60696,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60684,
											"end": 60700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60697,
											"end": 60699,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60700,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60684,
											"end": 60700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60700,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60684,
											"end": 60700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60684,
											"end": 60700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60684,
											"end": 60700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60684,
											"end": 60700,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60701,
											"end": 60707,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60684,
											"end": 60708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60684,
											"end": 60708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60684,
											"end": 60708,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60718,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60684,
											"end": 60718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60757,
											"end": 60763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60728,
											"end": 60745,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60728,
											"end": 60754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60746,
											"end": 60753,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 60728,
											"end": 60754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60728,
											"end": 60754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60728,
											"end": 60754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60728,
											"end": 60754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60728,
											"end": 60754,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60728,
											"end": 60754,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60728,
											"end": 60754,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60728,
											"end": 60754,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60728,
											"end": 60754,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60728,
											"end": 60754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60728,
											"end": 60754,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 60728,
											"end": 60763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60728,
											"end": 60763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60728,
											"end": 60763,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 60728,
											"end": 60763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60630,
											"end": 60770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60556,
											"end": 60770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60556,
											"end": 60770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60556,
											"end": 60770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48420,
											"end": 48747,
											"name": "tag",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 48420,
											"end": 48747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48501,
											"end": 48502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48487,
											"end": 48503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48487,
											"end": 48503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48487,
											"end": 48489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48487,
											"end": 48503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48487,
											"end": 48503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48487,
											"end": 48503,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48483,
											"end": 48570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 48483,
											"end": 48570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48556,
											"end": 48557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 48526,
											"end": 48559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48526,
											"end": 48559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48483,
											"end": 48570,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 48483,
											"end": 48570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48579,
											"end": 48600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48603,
											"end": 48635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 48611,
											"end": 48613,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48615,
											"end": 48622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 48632,
											"end": 48633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48603,
											"end": 48610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 48603,
											"end": 48635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48603,
											"end": 48635,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 48603,
											"end": 48635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48579,
											"end": 48635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48579,
											"end": 48635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48674,
											"end": 48675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48649,
											"end": 48676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48649,
											"end": 48676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48649,
											"end": 48662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48649,
											"end": 48676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48649,
											"end": 48676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48649,
											"end": 48676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48645,
											"end": 48741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 48645,
											"end": 48741,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48727,
											"end": 48728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "PUSH",
											"source": 0,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 48699,
											"end": 48730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "tag",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48699,
											"end": 48730,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48645,
											"end": 48741,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 48645,
											"end": 48741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48473,
											"end": 48747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48420,
											"end": 48747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48420,
											"end": 48747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48420,
											"end": 48747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45547,
											"end": 45915,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 45547,
											"end": 45915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45659,
											"end": 45697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 45673,
											"end": 45678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45680,
											"end": 45687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45689,
											"end": 45696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45659,
											"end": 45672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 45659,
											"end": 45697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45659,
											"end": 45697,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 45659,
											"end": 45697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45654,
											"end": 45909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 45654,
											"end": 45909,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45734,
											"end": 45735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45717,
											"end": 45736,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45717,
											"end": 45736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45717,
											"end": 45722,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45717,
											"end": 45736,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45717,
											"end": 45736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45717,
											"end": 45736,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45713,
											"end": 45899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 45713,
											"end": 45899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45786,
											"end": 45793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 45763,
											"end": 45794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "tag",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45763,
											"end": 45794,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45713,
											"end": 45899,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 45713,
											"end": 45899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45867,
											"end": 45874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45876,
											"end": 45883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "PUSH",
											"source": 0,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 45840,
											"end": 45884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "tag",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45840,
											"end": 45884,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45654,
											"end": 45909,
											"name": "tag",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 45654,
											"end": 45909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45547,
											"end": 45915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45547,
											"end": 45915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45547,
											"end": 45915,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45547,
											"end": 45915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44841,
											"end": 45113,
											"name": "tag",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 44841,
											"end": 45113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44944,
											"end": 44948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44998,
											"end": 44999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44979,
											"end": 45000,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44979,
											"end": 45000,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44979,
											"end": 44986,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44979,
											"end": 45000,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44979,
											"end": 45000,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44979,
											"end": 45000,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44979,
											"end": 45000,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44979,
											"end": 45106,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44979,
											"end": 45106,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44979,
											"end": 45106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 44979,
											"end": 45106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44979,
											"end": 45106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45026,
											"end": 45033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45017,
											"end": 45033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45017,
											"end": 45033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45017,
											"end": 45022,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45017,
											"end": 45033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45017,
											"end": 45033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45017,
											"end": 45033,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45017,
											"end": 45069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45017,
											"end": 45069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 45017,
											"end": 45069,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45017,
											"end": 45069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45037,
											"end": 45069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 45054,
											"end": 45059,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45061,
											"end": 45068,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45037,
											"end": 45053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 45037,
											"end": 45069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45037,
											"end": 45069,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 45037,
											"end": 45069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45017,
											"end": 45069,
											"name": "tag",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 45017,
											"end": 45069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45017,
											"end": 45105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45017,
											"end": 45105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 45017,
											"end": 45105,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45017,
											"end": 45105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45098,
											"end": 45105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45073,
											"end": 45105,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45073,
											"end": 45105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45073,
											"end": 45094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 45086,
											"end": 45093,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45073,
											"end": 45085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 45073,
											"end": 45094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45073,
											"end": 45094,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 45073,
											"end": 45094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45073,
											"end": 45105,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45073,
											"end": 45105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45073,
											"end": 45105,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45017,
											"end": 45105,
											"name": "tag",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 45017,
											"end": 45105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44979,
											"end": 45106,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 44979,
											"end": 45106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44960,
											"end": 45106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44960,
											"end": 45106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44841,
											"end": 45113,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 44841,
											"end": 45113,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44841,
											"end": 45113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44841,
											"end": 45113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44841,
											"end": 45113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44841,
											"end": 45113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "tag",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 4995,
											"end": 5000,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 4977,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 4977,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 4975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5107,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5145,
											"end": 5147,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5130,
											"end": 5148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5224,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5211,
											"end": 5228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 5158,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "tag",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 5158,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5386,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5372,
											"end": 5381,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5370,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5359,
											"end": 5382,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5355,
											"end": 5387,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 5390,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "tag",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 5390,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "tag",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 5352,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5510,
											"end": 5511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 5580,
											"end": 5587,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 5535,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "tag",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5481,
											"end": 5598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 5708,
											"end": 5715,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5697,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5684,
											"end": 5706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 5663,
											"end": 5716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "tag",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 5663,
											"end": 5716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5653,
											"end": 5716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5608,
											"end": 5726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 5836,
											"end": 5843,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5812,
											"end": 5834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 5791,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 5791,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5781,
											"end": 5844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5926,
											"end": 5932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5977,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5961,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5978,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 5981,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "tag",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 6171,
											"end": 6178,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6160,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6147,
											"end": 6169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 6126,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6072,
											"end": 6189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6925,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6463,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6525,
											"end": 6531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6539,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6582,
											"end": 6584,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6557,
											"end": 6580,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6585,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6550,
											"end": 6669,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6550,
											"end": 6669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 6550,
											"end": 6669,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 6588,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 6588,
											"end": 6667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6667,
											"name": "tag",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 6588,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6550,
											"end": 6669,
											"name": "tag",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 6550,
											"end": 6669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 6709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6733,
											"end": 6783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 6775,
											"end": 6782,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6766,
											"end": 6772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6755,
											"end": 6764,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6751,
											"end": 6773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6733,
											"end": 6783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 6733,
											"end": 6783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6733,
											"end": 6783,
											"name": "tag",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 6733,
											"end": 6783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6723,
											"end": 6783,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6723,
											"end": 6783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6679,
											"end": 6793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6832,
											"end": 6834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6858,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 6900,
											"end": 6907,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6891,
											"end": 6897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6880,
											"end": 6889,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 6898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6858,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 6858,
											"end": 6908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6858,
											"end": 6908,
											"name": "tag",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 6858,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6848,
											"end": 6908,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6848,
											"end": 6908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6925,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6925,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 7048,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 6931,
											"end": 7048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7040,
											"end": 7041,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7037,
											"end": 7038,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7030,
											"end": 7042,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7054,
											"end": 7171,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 7054,
											"end": 7171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7163,
											"end": 7164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7160,
											"end": 7161,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7153,
											"end": 7165,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7177,
											"end": 7294,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 7177,
											"end": 7294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7286,
											"end": 7287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7283,
											"end": 7284,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7288,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7317,
											"end": 7885,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 7317,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7390,
											"end": 7398,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7400,
											"end": 7406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7450,
											"end": 7453,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7443,
											"end": 7447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7435,
											"end": 7441,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7431,
											"end": 7448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7427,
											"end": 7454,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 7417,
											"end": 7539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 7458,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 7458,
											"end": 7537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7537,
											"name": "tag",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 7458,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7539,
											"name": "tag",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 7417,
											"end": 7539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7571,
											"end": 7577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7558,
											"end": 7578,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7548,
											"end": 7578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7548,
											"end": 7578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7619,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7593,
											"end": 7599,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7590,
											"end": 7620,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7587,
											"end": 7704,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7587,
											"end": 7704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 7587,
											"end": 7704,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 7623,
											"end": 7702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 7623,
											"end": 7702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7702,
											"name": "tag",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 7623,
											"end": 7702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7587,
											"end": 7704,
											"name": "tag",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 7587,
											"end": 7704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7737,
											"end": 7741,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7729,
											"end": 7735,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7725,
											"end": 7742,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7713,
											"end": 7742,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7713,
											"end": 7742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7794,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7783,
											"end": 7787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7775,
											"end": 7781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7788,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7757,
											"end": 7789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7754,
											"end": 7795,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7751,
											"end": 7879,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7751,
											"end": 7879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 7751,
											"end": 7879,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7798,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 7798,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 7798,
											"end": 7877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7798,
											"end": 7877,
											"name": "tag",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 7798,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7751,
											"end": 7879,
											"name": "tag",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 7751,
											"end": 7879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7317,
											"end": 7885,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7317,
											"end": 7885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7317,
											"end": 7885,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7317,
											"end": 7885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7317,
											"end": 7885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7317,
											"end": 7885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 8450,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 7891,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7977,
											"end": 7983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7985,
											"end": 7991,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8034,
											"end": 8036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8022,
											"end": 8031,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8013,
											"end": 8020,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8009,
											"end": 8032,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8037,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 8002,
											"end": 8121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 8040,
											"end": 8119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 8040,
											"end": 8119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8040,
											"end": 8119,
											"name": "tag",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 8040,
											"end": 8119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8121,
											"name": "tag",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 8002,
											"end": 8121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8186,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8190,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8160,
											"end": 8191,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8218,
											"end": 8236,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8210,
											"end": 8216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8207,
											"end": 8237,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8204,
											"end": 8321,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8204,
											"end": 8321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 8204,
											"end": 8321,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 8240,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 8240,
											"end": 8319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8319,
											"name": "tag",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 8240,
											"end": 8319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8204,
											"end": 8321,
											"name": "tag",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 8204,
											"end": 8321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8353,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 8425,
											"end": 8432,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8416,
											"end": 8422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8405,
											"end": 8414,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8401,
											"end": 8423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8353,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 8353,
											"end": 8433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8353,
											"end": 8433,
											"name": "tag",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 8353,
											"end": 8433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8335,
											"end": 8433,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8335,
											"end": 8433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8335,
											"end": 8433,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8335,
											"end": 8433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8131,
											"end": 8443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 8450,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 8450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 8450,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 8450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 8450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7891,
											"end": 8450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 8924,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 8456,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8521,
											"end": 8527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8529,
											"end": 8535,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8580,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8566,
											"end": 8575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8557,
											"end": 8564,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8576,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8549,
											"end": 8581,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8546,
											"end": 8665,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8546,
											"end": 8665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 8546,
											"end": 8665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8584,
											"end": 8663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 8584,
											"end": 8663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 8584,
											"end": 8663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8584,
											"end": 8663,
											"name": "tag",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 8584,
											"end": 8663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8546,
											"end": 8665,
											"name": "tag",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 8546,
											"end": 8665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8704,
											"end": 8705,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8729,
											"end": 8782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 8774,
											"end": 8781,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8765,
											"end": 8771,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8754,
											"end": 8763,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8750,
											"end": 8772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8729,
											"end": 8782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 8729,
											"end": 8782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8729,
											"end": 8782,
											"name": "tag",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 8729,
											"end": 8782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8719,
											"end": 8782,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8719,
											"end": 8782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8675,
											"end": 8792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8831,
											"end": 8833,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8857,
											"end": 8907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 8899,
											"end": 8906,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8890,
											"end": 8896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8879,
											"end": 8888,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8875,
											"end": 8897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8857,
											"end": 8907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 8857,
											"end": 8907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8857,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 8857,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8847,
											"end": 8907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8847,
											"end": 8907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 8917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 8924,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 8924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 8924,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 8924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 8924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8456,
											"end": 8924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8930,
											"end": 9047,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 8930,
											"end": 9047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9039,
											"end": 9040,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9036,
											"end": 9037,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9029,
											"end": 9041,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9053,
											"end": 9233,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 9053,
											"end": 9233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9101,
											"end": 9178,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9098,
											"end": 9099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9091,
											"end": 9179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9198,
											"end": 9202,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 9195,
											"end": 9196,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9188,
											"end": 9203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9222,
											"end": 9226,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9219,
											"end": 9220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9212,
											"end": 9227,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9520,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 9239,
											"end": 9520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9322,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 9344,
											"end": 9348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9322,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 9322,
											"end": 9349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9322,
											"end": 9349,
											"name": "tag",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 9322,
											"end": 9349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9314,
											"end": 9320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9310,
											"end": 9350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9452,
											"end": 9458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9440,
											"end": 9450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9437,
											"end": 9459,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9416,
											"end": 9434,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9404,
											"end": 9414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9401,
											"end": 9435,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9460,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9483,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 9395,
											"end": 9483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 9463,
											"end": 9481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "tag",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9395,
											"end": 9483,
											"name": "tag",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 9395,
											"end": 9483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9503,
											"end": 9513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9501,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9492,
											"end": 9514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9282,
											"end": 9520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9239,
											"end": 9520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9655,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 9526,
											"end": 9655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9560,
											"end": 9566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9587,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 9587,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 9587,
											"end": 9607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9587,
											"end": 9607,
											"name": "tag",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 9587,
											"end": 9607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9616,
											"end": 9649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 9644,
											"end": 9648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9636,
											"end": 9642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9616,
											"end": 9649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 9616,
											"end": 9649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9616,
											"end": 9649,
											"name": "tag",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 9616,
											"end": 9649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9661,
											"end": 9968,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 9661,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9722,
											"end": 9726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9812,
											"end": 9830,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9804,
											"end": 9810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9831,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9798,
											"end": 9854,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9798,
											"end": 9854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 9798,
											"end": 9854,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9834,
											"end": 9852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 9834,
											"end": 9852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 9834,
											"end": 9852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9834,
											"end": 9852,
											"name": "tag",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 9834,
											"end": 9852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9798,
											"end": 9854,
											"name": "tag",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 9798,
											"end": 9854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 9894,
											"end": 9900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 9872,
											"end": 9901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9901,
											"name": "tag",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 9872,
											"end": 9901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9864,
											"end": 9901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9956,
											"end": 9960,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9950,
											"end": 9954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9946,
											"end": 9961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9938,
											"end": 9961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9938,
											"end": 9961,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9661,
											"end": 9968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9661,
											"end": 9968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9661,
											"end": 9968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9661,
											"end": 9968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 10120,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 9974,
											"end": 10120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10071,
											"end": 10077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10069,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10064,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10048,
											"end": 10078,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 10112,
											"end": 10113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10109,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10098,
											"end": 10101,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10087,
											"end": 10114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 10120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 10120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 10120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9974,
											"end": 10120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10126,
											"end": 10549,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 10126,
											"end": 10549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 10244,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 10285,
											"end": 10291,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 10244,
											"end": 10292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10244,
											"end": 10292,
											"name": "tag",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 10244,
											"end": 10292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10228,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 10228,
											"end": 10293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10228,
											"end": 10293,
											"name": "tag",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 10228,
											"end": 10293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10219,
											"end": 10293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10219,
											"end": 10293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10316,
											"end": 10322,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10309,
											"end": 10314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10302,
											"end": 10323,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10354,
											"end": 10358,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10347,
											"end": 10352,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10343,
											"end": 10359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10392,
											"end": 10395,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10383,
											"end": 10389,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10381,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10374,
											"end": 10390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10371,
											"end": 10396,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10368,
											"end": 10480,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10368,
											"end": 10480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 10368,
											"end": 10480,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 10399,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 10399,
											"end": 10478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10478,
											"name": "tag",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 10399,
											"end": 10478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10368,
											"end": 10480,
											"name": "tag",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 10368,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 10536,
											"end": 10542,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10531,
											"end": 10534,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10526,
											"end": 10529,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 10489,
											"end": 10543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10543,
											"name": "tag",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 10489,
											"end": 10543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10209,
											"end": 10549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10126,
											"end": 10549,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10126,
											"end": 10549,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10126,
											"end": 10549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10126,
											"end": 10549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10126,
											"end": 10549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10126,
											"end": 10549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10568,
											"end": 10906,
											"name": "tag",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 10568,
											"end": 10906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10623,
											"end": 10628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10672,
											"end": 10675,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10665,
											"end": 10669,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 10657,
											"end": 10663,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10653,
											"end": 10670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10649,
											"end": 10676,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10639,
											"end": 10761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 10639,
											"end": 10761,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10680,
											"end": 10759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 10680,
											"end": 10759,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 10680,
											"end": 10759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10680,
											"end": 10759,
											"name": "tag",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 10680,
											"end": 10759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10639,
											"end": 10761,
											"name": "tag",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 10639,
											"end": 10761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10804,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 10896,
											"end": 10899,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10888,
											"end": 10894,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10885,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10873,
											"end": 10879,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10869,
											"end": 10886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 10822,
											"end": 10900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10900,
											"name": "tag",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 10822,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10813,
											"end": 10900,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10813,
											"end": 10900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10629,
											"end": 10906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10568,
											"end": 10906,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10568,
											"end": 10906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10568,
											"end": 10906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10568,
											"end": 10906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10568,
											"end": 10906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 11855,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 10912,
											"end": 11855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11007,
											"end": 11013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11015,
											"end": 11021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11023,
											"end": 11029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11031,
											"end": 11037,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11083,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11068,
											"end": 11077,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11059,
											"end": 11066,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11055,
											"end": 11078,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11051,
											"end": 11084,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11168,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "687"
										},
										{
											"begin": 11048,
											"end": 11168,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 11087,
											"end": 11166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 11087,
											"end": 11166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11166,
											"name": "tag",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 11087,
											"end": 11166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11048,
											"end": 11168,
											"name": "tag",
											"source": 1,
											"value": "687"
										},
										{
											"begin": 11048,
											"end": 11168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11207,
											"end": 11208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11232,
											"end": 11285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 11277,
											"end": 11284,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11268,
											"end": 11274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11257,
											"end": 11266,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 11253,
											"end": 11275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11232,
											"end": 11285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 11232,
											"end": 11285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11232,
											"end": 11285,
											"name": "tag",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 11232,
											"end": 11285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11222,
											"end": 11285,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11222,
											"end": 11285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11334,
											"end": 11336,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11360,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 11405,
											"end": 11412,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11396,
											"end": 11402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11385,
											"end": 11394,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 11381,
											"end": 11403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11360,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 11360,
											"end": 11413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11360,
											"end": 11413,
											"name": "tag",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 11360,
											"end": 11413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11350,
											"end": 11413,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11350,
											"end": 11413,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11462,
											"end": 11464,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11488,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 11533,
											"end": 11540,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11524,
											"end": 11530,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11513,
											"end": 11522,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 11509,
											"end": 11531,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11488,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 11488,
											"end": 11541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11488,
											"end": 11541,
											"name": "tag",
											"source": 1,
											"value": "691"
										},
										{
											"begin": 11488,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11478,
											"end": 11541,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11478,
											"end": 11541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11433,
											"end": 11551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11618,
											"end": 11620,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11607,
											"end": 11616,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11603,
											"end": 11621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11590,
											"end": 11622,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 11649,
											"end": 11667,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11641,
											"end": 11647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11638,
											"end": 11668,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11635,
											"end": 11752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11635,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "692"
										},
										{
											"begin": 11635,
											"end": 11752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11671,
											"end": 11750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 11671,
											"end": 11750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 11671,
											"end": 11750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11671,
											"end": 11750,
											"name": "tag",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 11671,
											"end": 11750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11635,
											"end": 11752,
											"name": "tag",
											"source": 1,
											"value": "692"
										},
										{
											"begin": 11635,
											"end": 11752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11776,
											"end": 11838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 11830,
											"end": 11837,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11821,
											"end": 11827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11810,
											"end": 11819,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 11806,
											"end": 11828,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11776,
											"end": 11838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 11776,
											"end": 11838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11776,
											"end": 11838,
											"name": "tag",
											"source": 1,
											"value": "694"
										},
										{
											"begin": 11776,
											"end": 11838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11766,
											"end": 11838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11766,
											"end": 11838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11561,
											"end": 11848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 11855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 11855,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 11855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 11855,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 11855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 11855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 11855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 11855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11861,
											"end": 12335,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 11861,
											"end": 12335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11929,
											"end": 11935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11937,
											"end": 11943,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 11988,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11974,
											"end": 11983,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11965,
											"end": 11972,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11961,
											"end": 11984,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11957,
											"end": 11989,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 11954,
											"end": 12073,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11954,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "696"
										},
										{
											"begin": 11954,
											"end": 12073,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11992,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 11992,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 11992,
											"end": 12071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11992,
											"end": 12071,
											"name": "tag",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 11992,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11954,
											"end": 12073,
											"name": "tag",
											"source": 1,
											"value": "696"
										},
										{
											"begin": 11954,
											"end": 12073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12112,
											"end": 12113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12137,
											"end": 12190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 12182,
											"end": 12189,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12173,
											"end": 12179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12162,
											"end": 12171,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12158,
											"end": 12180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12137,
											"end": 12190,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 12137,
											"end": 12190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12137,
											"end": 12190,
											"name": "tag",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 12137,
											"end": 12190,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12127,
											"end": 12190,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12127,
											"end": 12190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12083,
											"end": 12200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12239,
											"end": 12241,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12265,
											"end": 12318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 12310,
											"end": 12317,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12301,
											"end": 12307,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12290,
											"end": 12299,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12286,
											"end": 12308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 12265,
											"end": 12318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12318,
											"name": "tag",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 12265,
											"end": 12318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12255,
											"end": 12318,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12255,
											"end": 12318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12210,
											"end": 12328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11861,
											"end": 12335,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11861,
											"end": 12335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11861,
											"end": 12335,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11861,
											"end": 12335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11861,
											"end": 12335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11861,
											"end": 12335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12341,
											"end": 12521,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 12341,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12389,
											"end": 12466,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12386,
											"end": 12387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12379,
											"end": 12467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12486,
											"end": 12490,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 12483,
											"end": 12484,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12476,
											"end": 12491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12510,
											"end": 12514,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12507,
											"end": 12508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12500,
											"end": 12515,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12527,
											"end": 12847,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 12527,
											"end": 12847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12571,
											"end": 12577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12608,
											"end": 12609,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12602,
											"end": 12606,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12598,
											"end": 12610,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12655,
											"end": 12656,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12649,
											"end": 12653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12645,
											"end": 12657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12676,
											"end": 12694,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12666,
											"end": 12747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 12666,
											"end": 12747,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12732,
											"end": 12736,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 12724,
											"end": 12730,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12720,
											"end": 12737,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12710,
											"end": 12737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12710,
											"end": 12737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12666,
											"end": 12747,
											"name": "tag",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 12666,
											"end": 12747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12794,
											"end": 12796,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12786,
											"end": 12792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12783,
											"end": 12797,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12763,
											"end": 12781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12760,
											"end": 12798,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12757,
											"end": 12841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 12757,
											"end": 12841,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 12813,
											"end": 12831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "tag",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12757,
											"end": 12841,
											"name": "tag",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 12757,
											"end": 12841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12578,
											"end": 12847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12527,
											"end": 12847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12527,
											"end": 12847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12527,
											"end": 12847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12527,
											"end": 12847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12853,
											"end": 13295,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 12853,
											"end": 13295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13002,
											"end": 13006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13040,
											"end": 13042,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13029,
											"end": 13038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13025,
											"end": 13043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13017,
											"end": 13043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13017,
											"end": 13043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13053,
											"end": 13124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 13121,
											"end": 13122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13110,
											"end": 13119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13106,
											"end": 13123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13097,
											"end": 13103,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13053,
											"end": 13124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 13053,
											"end": 13124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13053,
											"end": 13124,
											"name": "tag",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 13053,
											"end": 13124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13134,
											"end": 13206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "707"
										},
										{
											"begin": 13202,
											"end": 13204,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13191,
											"end": 13200,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13187,
											"end": 13205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13178,
											"end": 13184,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13134,
											"end": 13206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 13134,
											"end": 13206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13134,
											"end": 13206,
											"name": "tag",
											"source": 1,
											"value": "707"
										},
										{
											"begin": 13134,
											"end": 13206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13216,
											"end": 13288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "708"
										},
										{
											"begin": 13284,
											"end": 13286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13273,
											"end": 13282,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13269,
											"end": 13287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13260,
											"end": 13266,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13216,
											"end": 13288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 13216,
											"end": 13288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13216,
											"end": 13288,
											"name": "tag",
											"source": 1,
											"value": "708"
										},
										{
											"begin": 13216,
											"end": 13288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12853,
											"end": 13295,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12853,
											"end": 13295,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12853,
											"end": 13295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12853,
											"end": 13295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12853,
											"end": 13295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12853,
											"end": 13295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12853,
											"end": 13295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13301,
											"end": 13469,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 13301,
											"end": 13469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13441,
											"end": 13461,
											"name": "PUSH",
											"source": 1,
											"value": "5075626C6963204D696E7420436C6F7365640000000000000000000000000000"
										},
										{
											"begin": 13437,
											"end": 13438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13429,
											"end": 13435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13425,
											"end": 13439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13418,
											"end": 13462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13301,
											"end": 13469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13301,
											"end": 13469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13475,
											"end": 13841,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 13475,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13617,
											"end": 13620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13638,
											"end": 13705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "711"
										},
										{
											"begin": 13702,
											"end": 13704,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 13697,
											"end": 13700,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13638,
											"end": 13705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 13638,
											"end": 13705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13638,
											"end": 13705,
											"name": "tag",
											"source": 1,
											"value": "711"
										},
										{
											"begin": 13638,
											"end": 13705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13631,
											"end": 13705,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13631,
											"end": 13705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13714,
											"end": 13807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 13803,
											"end": 13806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13714,
											"end": 13807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 13714,
											"end": 13807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13714,
											"end": 13807,
											"name": "tag",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 13714,
											"end": 13807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13832,
											"end": 13834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13827,
											"end": 13830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13823,
											"end": 13835,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13816,
											"end": 13835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13816,
											"end": 13835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13475,
											"end": 13841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13475,
											"end": 13841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13475,
											"end": 13841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13475,
											"end": 13841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 14266,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 13847,
											"end": 14266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14013,
											"end": 14017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14051,
											"end": 14053,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14040,
											"end": 14049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14036,
											"end": 14054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14028,
											"end": 14054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14028,
											"end": 14054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14100,
											"end": 14109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14094,
											"end": 14098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14090,
											"end": 14110,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14086,
											"end": 14087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14075,
											"end": 14084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14071,
											"end": 14088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14064,
											"end": 14111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14128,
											"end": 14259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 14254,
											"end": 14258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14128,
											"end": 14259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 14128,
											"end": 14259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14128,
											"end": 14259,
											"name": "tag",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 14128,
											"end": 14259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14120,
											"end": 14259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14120,
											"end": 14259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 14266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 14266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 14266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 14266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14272,
											"end": 14435,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 14272,
											"end": 14435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14412,
											"end": 14427,
											"name": "PUSH",
											"source": 1,
											"value": "4B686F6E67206475207469656E00000000000000000000000000000000000000"
										},
										{
											"begin": 14408,
											"end": 14409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14400,
											"end": 14406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14396,
											"end": 14410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14389,
											"end": 14428,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14272,
											"end": 14435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14272,
											"end": 14435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14441,
											"end": 14807,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 14441,
											"end": 14807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14583,
											"end": 14586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14604,
											"end": 14671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 14668,
											"end": 14670,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 14663,
											"end": 14666,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14604,
											"end": 14671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 14604,
											"end": 14671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14604,
											"end": 14671,
											"name": "tag",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 14604,
											"end": 14671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14597,
											"end": 14671,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14597,
											"end": 14671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 14769,
											"end": 14772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 14680,
											"end": 14773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14680,
											"end": 14773,
											"name": "tag",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 14680,
											"end": 14773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14798,
											"end": 14800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14793,
											"end": 14796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14789,
											"end": 14801,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14782,
											"end": 14801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14782,
											"end": 14801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14441,
											"end": 14807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14441,
											"end": 14807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14441,
											"end": 14807,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14441,
											"end": 14807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14813,
											"end": 15232,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 14813,
											"end": 15232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14979,
											"end": 14983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15017,
											"end": 15019,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15006,
											"end": 15015,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15002,
											"end": 15020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14994,
											"end": 15020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14994,
											"end": 15020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15066,
											"end": 15075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15060,
											"end": 15064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15056,
											"end": 15076,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15052,
											"end": 15053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15041,
											"end": 15050,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15037,
											"end": 15054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15030,
											"end": 15077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15094,
											"end": 15225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 15220,
											"end": 15224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15094,
											"end": 15225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 15094,
											"end": 15225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15094,
											"end": 15225,
											"name": "tag",
											"source": 1,
											"value": "720"
										},
										{
											"begin": 15094,
											"end": 15225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15086,
											"end": 15225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14813,
											"end": 15232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14813,
											"end": 15232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14813,
											"end": 15232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14813,
											"end": 15232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15238,
											"end": 15408,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 15238,
											"end": 15408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15378,
											"end": 15400,
											"name": "PUSH",
											"source": 1,
											"value": "416C6C6F77697374204D696E7420436C6F736564000000000000000000000000"
										},
										{
											"begin": 15374,
											"end": 15375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15366,
											"end": 15372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15362,
											"end": 15376,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15355,
											"end": 15401,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15238,
											"end": 15408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15238,
											"end": 15408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15414,
											"end": 15780,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 15414,
											"end": 15780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15556,
											"end": 15559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15577,
											"end": 15644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 15641,
											"end": 15643,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 15636,
											"end": 15639,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15577,
											"end": 15644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 15577,
											"end": 15644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15577,
											"end": 15644,
											"name": "tag",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 15577,
											"end": 15644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15570,
											"end": 15644,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15570,
											"end": 15644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15653,
											"end": 15746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 15742,
											"end": 15745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15653,
											"end": 15746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 15653,
											"end": 15746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15653,
											"end": 15746,
											"name": "tag",
											"source": 1,
											"value": "724"
										},
										{
											"begin": 15653,
											"end": 15746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15771,
											"end": 15773,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15766,
											"end": 15769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15762,
											"end": 15774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15755,
											"end": 15774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15755,
											"end": 15774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15414,
											"end": 15780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15414,
											"end": 15780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15414,
											"end": 15780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15414,
											"end": 15780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15786,
											"end": 16205,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 15786,
											"end": 16205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15952,
											"end": 15956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15990,
											"end": 15992,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15979,
											"end": 15988,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15975,
											"end": 15993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15967,
											"end": 15993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16039,
											"end": 16048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16033,
											"end": 16037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16029,
											"end": 16049,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16025,
											"end": 16026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16014,
											"end": 16023,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16010,
											"end": 16027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16003,
											"end": 16050,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16067,
											"end": 16198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 16193,
											"end": 16197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16067,
											"end": 16198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 16067,
											"end": 16198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16067,
											"end": 16198,
											"name": "tag",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 16067,
											"end": 16198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16059,
											"end": 16198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16059,
											"end": 16198,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15786,
											"end": 16205,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15786,
											"end": 16205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15786,
											"end": 16205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15786,
											"end": 16205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16211,
											"end": 16380,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 16211,
											"end": 16380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16351,
											"end": 16372,
											"name": "PUSH",
											"source": 1,
											"value": "42616E206B686F6E6720636F20717579656E2100000000000000000000000000"
										},
										{
											"begin": 16347,
											"end": 16348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16339,
											"end": 16345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16335,
											"end": 16349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16328,
											"end": 16373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16211,
											"end": 16380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16211,
											"end": 16380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16386,
											"end": 16752,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 16386,
											"end": 16752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16528,
											"end": 16531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16549,
											"end": 16616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 16613,
											"end": 16615,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 16608,
											"end": 16611,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16549,
											"end": 16616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 16549,
											"end": 16616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16549,
											"end": 16616,
											"name": "tag",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 16549,
											"end": 16616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16542,
											"end": 16616,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16542,
											"end": 16616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16625,
											"end": 16718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "730"
										},
										{
											"begin": 16714,
											"end": 16717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16625,
											"end": 16718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 16625,
											"end": 16718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16625,
											"end": 16718,
											"name": "tag",
											"source": 1,
											"value": "730"
										},
										{
											"begin": 16625,
											"end": 16718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16743,
											"end": 16745,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16738,
											"end": 16741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16734,
											"end": 16746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16727,
											"end": 16746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16727,
											"end": 16746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16386,
											"end": 16752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16386,
											"end": 16752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16386,
											"end": 16752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16386,
											"end": 16752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16758,
											"end": 17177,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 16758,
											"end": 17177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16924,
											"end": 16928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16962,
											"end": 16964,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16951,
											"end": 16960,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16947,
											"end": 16965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16939,
											"end": 16965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16939,
											"end": 16965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17011,
											"end": 17020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17005,
											"end": 17009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17001,
											"end": 17021,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16997,
											"end": 16998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16986,
											"end": 16995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16982,
											"end": 16999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16975,
											"end": 17022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17039,
											"end": 17170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 17165,
											"end": 17169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17039,
											"end": 17170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 17039,
											"end": 17170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17039,
											"end": 17170,
											"name": "tag",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 17039,
											"end": 17170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17031,
											"end": 17170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17031,
											"end": 17170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16758,
											"end": 17177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16758,
											"end": 17177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16758,
											"end": 17177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16758,
											"end": 17177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17183,
											"end": 17515,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 17183,
											"end": 17515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17304,
											"end": 17308,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17342,
											"end": 17344,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17331,
											"end": 17340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17327,
											"end": 17345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17319,
											"end": 17345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17319,
											"end": 17345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17355,
											"end": 17426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 17423,
											"end": 17424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17412,
											"end": 17421,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17408,
											"end": 17425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17399,
											"end": 17405,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17355,
											"end": 17426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 17355,
											"end": 17426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17355,
											"end": 17426,
											"name": "tag",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 17355,
											"end": 17426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17436,
											"end": 17508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 17504,
											"end": 17506,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17493,
											"end": 17502,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17489,
											"end": 17507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17480,
											"end": 17486,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17436,
											"end": 17508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 17436,
											"end": 17508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17436,
											"end": 17508,
											"name": "tag",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 17436,
											"end": 17508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17183,
											"end": 17515,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17183,
											"end": 17515,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17183,
											"end": 17515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17183,
											"end": 17515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17183,
											"end": 17515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17183,
											"end": 17515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17521,
											"end": 17701,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 17521,
											"end": 17701,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17569,
											"end": 17646,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17566,
											"end": 17567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17559,
											"end": 17647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17666,
											"end": 17670,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 17663,
											"end": 17664,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17656,
											"end": 17671,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17690,
											"end": 17694,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17687,
											"end": 17688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17680,
											"end": 17695,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17707,
											"end": 17855,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 17707,
											"end": 17855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17809,
											"end": 17820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17846,
											"end": 17849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17831,
											"end": 17849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17831,
											"end": 17849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17707,
											"end": 17855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17707,
											"end": 17855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17707,
											"end": 17855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17707,
											"end": 17855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17707,
											"end": 17855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17861,
											"end": 18251,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 17861,
											"end": 18251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17967,
											"end": 17970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17995,
											"end": 18034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 18028,
											"end": 18033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17995,
											"end": 18034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 17995,
											"end": 18034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17995,
											"end": 18034,
											"name": "tag",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 17995,
											"end": 18034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18050,
											"end": 18139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 18132,
											"end": 18138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18127,
											"end": 18130,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18050,
											"end": 18139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 18050,
											"end": 18139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18050,
											"end": 18139,
											"name": "tag",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 18050,
											"end": 18139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18139,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 18043,
											"end": 18139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18148,
											"end": 18213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "741"
										},
										{
											"begin": 18206,
											"end": 18212,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18201,
											"end": 18204,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18194,
											"end": 18198,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18187,
											"end": 18192,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 18183,
											"end": 18199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18148,
											"end": 18213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 18148,
											"end": 18213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18148,
											"end": 18213,
											"name": "tag",
											"source": 1,
											"value": "741"
										},
										{
											"begin": 18148,
											"end": 18213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18238,
											"end": 18244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18233,
											"end": 18236,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18229,
											"end": 18245,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18222,
											"end": 18245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18222,
											"end": 18245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17971,
											"end": 18251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17861,
											"end": 18251,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17861,
											"end": 18251,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17861,
											"end": 18251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17861,
											"end": 18251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17861,
											"end": 18251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18257,
											"end": 18692,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 18257,
											"end": 18692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18437,
											"end": 18440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18459,
											"end": 18554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 18550,
											"end": 18553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18541,
											"end": 18547,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 18459,
											"end": 18554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18554,
											"name": "tag",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 18459,
											"end": 18554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18452,
											"end": 18554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18452,
											"end": 18554,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18571,
											"end": 18666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "744"
										},
										{
											"begin": 18662,
											"end": 18665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18653,
											"end": 18659,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18571,
											"end": 18666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 18571,
											"end": 18666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18571,
											"end": 18666,
											"name": "tag",
											"source": 1,
											"value": "744"
										},
										{
											"begin": 18571,
											"end": 18666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18564,
											"end": 18666,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18564,
											"end": 18666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18683,
											"end": 18686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18676,
											"end": 18686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18676,
											"end": 18686,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18257,
											"end": 18692,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 18257,
											"end": 18692,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18257,
											"end": 18692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18257,
											"end": 18692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18257,
											"end": 18692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18257,
											"end": 18692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18698,
											"end": 18862,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 18698,
											"end": 18862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18838,
											"end": 18854,
											"name": "PUSH",
											"source": 1,
											"value": "4B686F6E6720636F6E204E465421000000000000000000000000000000000000"
										},
										{
											"begin": 18834,
											"end": 18835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18826,
											"end": 18832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18822,
											"end": 18836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18815,
											"end": 18855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18698,
											"end": 18862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18698,
											"end": 18862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18868,
											"end": 19234,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 18868,
											"end": 19234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19010,
											"end": 19013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19031,
											"end": 19098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 19095,
											"end": 19097,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 19090,
											"end": 19093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19031,
											"end": 19098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 19031,
											"end": 19098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19031,
											"end": 19098,
											"name": "tag",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 19031,
											"end": 19098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19024,
											"end": 19098,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19024,
											"end": 19098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19107,
											"end": 19200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "748"
										},
										{
											"begin": 19196,
											"end": 19199,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19107,
											"end": 19200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 19107,
											"end": 19200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19107,
											"end": 19200,
											"name": "tag",
											"source": 1,
											"value": "748"
										},
										{
											"begin": 19107,
											"end": 19200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19225,
											"end": 19227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19220,
											"end": 19223,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19216,
											"end": 19228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19209,
											"end": 19228,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19209,
											"end": 19228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18868,
											"end": 19234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18868,
											"end": 19234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18868,
											"end": 19234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18868,
											"end": 19234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19240,
											"end": 19659,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 19240,
											"end": 19659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19406,
											"end": 19410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19444,
											"end": 19446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19433,
											"end": 19442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19429,
											"end": 19447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19421,
											"end": 19447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19421,
											"end": 19447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19493,
											"end": 19502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19487,
											"end": 19491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19483,
											"end": 19503,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19479,
											"end": 19480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19468,
											"end": 19477,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19464,
											"end": 19481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19457,
											"end": 19504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19521,
											"end": 19652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 19647,
											"end": 19651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19521,
											"end": 19652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 19521,
											"end": 19652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19521,
											"end": 19652,
											"name": "tag",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 19521,
											"end": 19652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19513,
											"end": 19652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19513,
											"end": 19652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19240,
											"end": 19659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19240,
											"end": 19659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19240,
											"end": 19659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19240,
											"end": 19659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19665,
											"end": 19845,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 19665,
											"end": 19845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19713,
											"end": 19790,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19710,
											"end": 19711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19703,
											"end": 19791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19810,
											"end": 19814,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 19807,
											"end": 19808,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19800,
											"end": 19815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19834,
											"end": 19838,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 19831,
											"end": 19832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19824,
											"end": 19839,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 19851,
											"end": 20084,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 19851,
											"end": 20084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19890,
											"end": 19893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19913,
											"end": 19937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 19931,
											"end": 19936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19913,
											"end": 19937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 19913,
											"end": 19937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19913,
											"end": 19937,
											"name": "tag",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 19913,
											"end": 19937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19904,
											"end": 19937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19904,
											"end": 19937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19959,
											"end": 20025,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19952,
											"end": 19957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19949,
											"end": 20026,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19946,
											"end": 20049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "754"
										},
										{
											"begin": 19946,
											"end": 20049,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20029,
											"end": 20047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 20029,
											"end": 20047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 20029,
											"end": 20047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20029,
											"end": 20047,
											"name": "tag",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 20029,
											"end": 20047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19946,
											"end": 20049,
											"name": "tag",
											"source": 1,
											"value": "754"
										},
										{
											"begin": 19946,
											"end": 20049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20076,
											"end": 20077,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 20069,
											"end": 20074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20065,
											"end": 20078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20058,
											"end": 20078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20058,
											"end": 20078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19851,
											"end": 20084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19851,
											"end": 20084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19851,
											"end": 20084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19851,
											"end": 20084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20090,
											"end": 20188,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 20090,
											"end": 20188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20141,
											"end": 20147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20175,
											"end": 20180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20169,
											"end": 20181,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 20159,
											"end": 20181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20159,
											"end": 20181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20090,
											"end": 20188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20090,
											"end": 20188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20090,
											"end": 20188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20090,
											"end": 20188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20194,
											"end": 20362,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 20194,
											"end": 20362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20277,
											"end": 20288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20311,
											"end": 20317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20306,
											"end": 20309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20299,
											"end": 20318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20351,
											"end": 20355,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20346,
											"end": 20349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20342,
											"end": 20356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20327,
											"end": 20356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20327,
											"end": 20356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20194,
											"end": 20362,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20194,
											"end": 20362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20194,
											"end": 20362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20194,
											"end": 20362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20194,
											"end": 20362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20368,
											"end": 20741,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 20368,
											"end": 20741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20454,
											"end": 20457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20482,
											"end": 20520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 20514,
											"end": 20519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20482,
											"end": 20520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 20482,
											"end": 20520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20482,
											"end": 20520,
											"name": "tag",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 20482,
											"end": 20520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20536,
											"end": 20606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 20599,
											"end": 20605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20594,
											"end": 20597,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20536,
											"end": 20606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 20536,
											"end": 20606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20536,
											"end": 20606,
											"name": "tag",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 20536,
											"end": 20606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20529,
											"end": 20606,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 20529,
											"end": 20606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20615,
											"end": 20680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 20673,
											"end": 20679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20668,
											"end": 20671,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 20661,
											"end": 20665,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20654,
											"end": 20659,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20650,
											"end": 20666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20615,
											"end": 20680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 20615,
											"end": 20680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20615,
											"end": 20680,
											"name": "tag",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 20615,
											"end": 20680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20705,
											"end": 20734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "762"
										},
										{
											"begin": 20727,
											"end": 20733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20705,
											"end": 20734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 20705,
											"end": 20734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20705,
											"end": 20734,
											"name": "tag",
											"source": 1,
											"value": "762"
										},
										{
											"begin": 20705,
											"end": 20734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20700,
											"end": 20703,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20696,
											"end": 20735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20689,
											"end": 20735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20689,
											"end": 20735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20458,
											"end": 20741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20368,
											"end": 20741,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20368,
											"end": 20741,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20368,
											"end": 20741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20368,
											"end": 20741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20368,
											"end": 20741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 21387,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 20747,
											"end": 21387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20942,
											"end": 20946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20980,
											"end": 20983,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 20969,
											"end": 20978,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20965,
											"end": 20984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20957,
											"end": 20984,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20957,
											"end": 20984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20994,
											"end": 21065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 21062,
											"end": 21063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21051,
											"end": 21060,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21047,
											"end": 21064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21038,
											"end": 21044,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 20994,
											"end": 21065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 20994,
											"end": 21065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20994,
											"end": 21065,
											"name": "tag",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 20994,
											"end": 21065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21075,
											"end": 21147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 21143,
											"end": 21145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21132,
											"end": 21141,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21128,
											"end": 21146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21119,
											"end": 21125,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 21075,
											"end": 21147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 21075,
											"end": 21147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21075,
											"end": 21147,
											"name": "tag",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 21075,
											"end": 21147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21157,
											"end": 21229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "766"
										},
										{
											"begin": 21225,
											"end": 21227,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21214,
											"end": 21223,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21210,
											"end": 21228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21201,
											"end": 21207,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21157,
											"end": 21229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 21157,
											"end": 21229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21157,
											"end": 21229,
											"name": "tag",
											"source": 1,
											"value": "766"
										},
										{
											"begin": 21157,
											"end": 21229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21276,
											"end": 21285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21270,
											"end": 21274,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21266,
											"end": 21286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21261,
											"end": 21263,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 21250,
											"end": 21259,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21246,
											"end": 21264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21239,
											"end": 21287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21304,
											"end": 21380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 21375,
											"end": 21379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21366,
											"end": 21372,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21304,
											"end": 21380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 21304,
											"end": 21380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21304,
											"end": 21380,
											"name": "tag",
											"source": 1,
											"value": "767"
										},
										{
											"begin": 21304,
											"end": 21380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21296,
											"end": 21380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21296,
											"end": 21380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 21387,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 21387,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 21387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 21387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 21387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 21387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 21387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20747,
											"end": 21387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21393,
											"end": 21534,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 21393,
											"end": 21534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21449,
											"end": 21454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21480,
											"end": 21486,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21474,
											"end": 21487,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21465,
											"end": 21487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21496,
											"end": 21528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 21522,
											"end": 21527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21496,
											"end": 21528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 21496,
											"end": 21528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21496,
											"end": 21528,
											"name": "tag",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 21496,
											"end": 21528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21393,
											"end": 21534,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21393,
											"end": 21534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21393,
											"end": 21534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21393,
											"end": 21534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21393,
											"end": 21534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21540,
											"end": 21889,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 21540,
											"end": 21889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21609,
											"end": 21615,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21658,
											"end": 21660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21646,
											"end": 21655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21637,
											"end": 21644,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21633,
											"end": 21656,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21629,
											"end": 21661,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 21626,
											"end": 21745,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21626,
											"end": 21745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "771"
										},
										{
											"begin": 21626,
											"end": 21745,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21664,
											"end": 21743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 21664,
											"end": 21743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 21664,
											"end": 21743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21664,
											"end": 21743,
											"name": "tag",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 21664,
											"end": 21743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21626,
											"end": 21745,
											"name": "tag",
											"source": 1,
											"value": "771"
										},
										{
											"begin": 21626,
											"end": 21745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21784,
											"end": 21785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21809,
											"end": 21872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "773"
										},
										{
											"begin": 21864,
											"end": 21871,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21855,
											"end": 21861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21844,
											"end": 21853,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21840,
											"end": 21862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21809,
											"end": 21872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 21809,
											"end": 21872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21809,
											"end": 21872,
											"name": "tag",
											"source": 1,
											"value": "773"
										},
										{
											"begin": 21809,
											"end": 21872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21799,
											"end": 21872,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21799,
											"end": 21872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21755,
											"end": 21882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21540,
											"end": 21889,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21540,
											"end": 21889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21540,
											"end": 21889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21540,
											"end": 21889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21540,
											"end": 21889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21895,
											"end": 22075,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 21895,
											"end": 22075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21943,
											"end": 22020,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21940,
											"end": 21941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21933,
											"end": 22021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22040,
											"end": 22044,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 22037,
											"end": 22038,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22030,
											"end": 22045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22064,
											"end": 22068,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 22061,
											"end": 22062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22054,
											"end": 22069,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22081,
											"end": 22275,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 22081,
											"end": 22275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22121,
											"end": 22125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22141,
											"end": 22161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 22159,
											"end": 22160,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22141,
											"end": 22161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 22141,
											"end": 22161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22141,
											"end": 22161,
											"name": "tag",
											"source": 1,
											"value": "776"
										},
										{
											"begin": 22141,
											"end": 22161,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22136,
											"end": 22161,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22136,
											"end": 22161,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22175,
											"end": 22195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "777"
										},
										{
											"begin": 22193,
											"end": 22194,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22175,
											"end": 22195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 22175,
											"end": 22195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22175,
											"end": 22195,
											"name": "tag",
											"source": 1,
											"value": "777"
										},
										{
											"begin": 22175,
											"end": 22195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22170,
											"end": 22195,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22170,
											"end": 22195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22219,
											"end": 22220,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22216,
											"end": 22217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22212,
											"end": 22221,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 22204,
											"end": 22221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22204,
											"end": 22221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22243,
											"end": 22244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22237,
											"end": 22241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22234,
											"end": 22245,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 22231,
											"end": 22268,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 22231,
											"end": 22268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 22231,
											"end": 22268,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "779"
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 22248,
											"end": 22266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "tag",
											"source": 1,
											"value": "779"
										},
										{
											"begin": 22248,
											"end": 22266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22231,
											"end": 22268,
											"name": "tag",
											"source": 1,
											"value": "778"
										},
										{
											"begin": 22231,
											"end": 22268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22081,
											"end": 22275,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22081,
											"end": 22275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22081,
											"end": 22275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22081,
											"end": 22275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22081,
											"end": 22275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22281,
											"end": 22461,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 22281,
											"end": 22461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22329,
											"end": 22406,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22326,
											"end": 22327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22319,
											"end": 22407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22426,
											"end": 22430,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 22423,
											"end": 22424,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 22416,
											"end": 22431,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22450,
											"end": 22454,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 22447,
											"end": 22448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22440,
											"end": 22455,
											"name": "REVERT",
											"source": 1
										}
									],
									".data": {
										"78F91A9492FEA23A7CF472B247F10DFD8E130E7BA967CDCCA1EB528E0DA13077": "68747470733a2f2f656d6572616c642d776f6f64656e2d67616d65666f776c2d3437322e6d7970696e6174612e636c6f75642f697066732f516d63726e794c5a723479357448637a31576d4b474c57435972555445644332475566646b62425768436e3531772f"
									}
								}
							},
							"sourceList": [
								"NFTFlatten.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowList(address)": "2848aeaf",
							"allowistMint()": "2e9b82f2",
							"allowistMintOpen()": "c5b8bbb9",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"editMintWindows(bool,bool)": "2f48de79",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"publicMint()": "26092b83",
							"publicMintOpen()": "bcc9ca5b",
							"renounceOwnership()": "715018a6",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setAllowList(address[])": "6447c35d",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowistMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowistMintOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_publicMintOpen\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_allowistMintOpen\",\"type\":\"bool\"}],\"name\":\"editMintWindows\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicMintOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"setAllowList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u0393\\u00c7\\u00d6s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"DatHieuBin\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1922,
								"contract": "NFTFlatten.sol:DatHieuBin",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1924,
								"contract": "NFTFlatten.sol:DatHieuBin",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1928,
								"contract": "NFTFlatten.sol:DatHieuBin",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1932,
								"contract": "NFTFlatten.sol:DatHieuBin",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1936,
								"contract": "NFTFlatten.sol:DatHieuBin",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1942,
								"contract": "NFTFlatten.sol:DatHieuBin",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2939,
								"contract": "NFTFlatten.sol:DatHieuBin",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 2943,
								"contract": "NFTFlatten.sol:DatHieuBin",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2946,
								"contract": "NFTFlatten.sol:DatHieuBin",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2950,
								"contract": "NFTFlatten.sol:DatHieuBin",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 3310,
								"contract": "NFTFlatten.sol:DatHieuBin",
								"label": "_paused",
								"offset": 0,
								"slot": "10",
								"type": "t_bool"
							},
							{
								"astId": 35,
								"contract": "NFTFlatten.sol:DatHieuBin",
								"label": "_owner",
								"offset": 1,
								"slot": "10",
								"type": "t_address"
							},
							{
								"astId": 3459,
								"contract": "NFTFlatten.sol:DatHieuBin",
								"label": "_nextTokenId",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 3462,
								"contract": "NFTFlatten.sol:DatHieuBin",
								"label": "maxSupply",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 3465,
								"contract": "NFTFlatten.sol:DatHieuBin",
								"label": "publicMintOpen",
								"offset": 0,
								"slot": "13",
								"type": "t_bool"
							},
							{
								"astId": 3468,
								"contract": "NFTFlatten.sol:DatHieuBin",
								"label": "allowistMintOpen",
								"offset": 1,
								"slot": "13",
								"type": "t_bool"
							},
							{
								"astId": 3472,
								"contract": "NFTFlatten.sol:DatHieuBin",
								"label": "allowList",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`ΓÇÖs approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u0393\\u00c7\\u00d6s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1922,
								"contract": "NFTFlatten.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1924,
								"contract": "NFTFlatten.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1928,
								"contract": "NFTFlatten.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1932,
								"contract": "NFTFlatten.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1936,
								"contract": "NFTFlatten.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1942,
								"contract": "NFTFlatten.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721Enumerable": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.",
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`ΓÇÖs approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account. CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`, interfere with enumerability and should not be used together with `ERC721Enumerable`.\",\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u0393\\u00c7\\u00d6s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1922,
								"contract": "NFTFlatten.sol:ERC721Enumerable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1924,
								"contract": "NFTFlatten.sol:ERC721Enumerable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1928,
								"contract": "NFTFlatten.sol:ERC721Enumerable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1932,
								"contract": "NFTFlatten.sol:ERC721Enumerable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1936,
								"contract": "NFTFlatten.sol:ERC721Enumerable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1942,
								"contract": "NFTFlatten.sol:ERC721Enumerable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2939,
								"contract": "NFTFlatten.sol:ERC721Enumerable",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 2943,
								"contract": "NFTFlatten.sol:ERC721Enumerable",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2946,
								"contract": "NFTFlatten.sol:ERC721Enumerable",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 2950,
								"contract": "NFTFlatten.sol:ERC721Enumerable",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`ΓÇÖs approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"paused()": "5c975abb",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u0393\\u00c7\\u00d6s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"ERC721Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1922,
								"contract": "NFTFlatten.sol:ERC721Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1924,
								"contract": "NFTFlatten.sol:ERC721Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1928,
								"contract": "NFTFlatten.sol:ERC721Pausable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1932,
								"contract": "NFTFlatten.sol:ERC721Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1936,
								"contract": "NFTFlatten.sol:ERC721Pausable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1942,
								"contract": "NFTFlatten.sol:ERC721Pausable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 3310,
								"contract": "NFTFlatten.sol:ERC721Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`ΓÇÖs approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u0393\\u00c7\\u00d6s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`ΓÇÖs `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u0393\\u00c7\\u00d6s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`ΓÇÖs approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u0393\\u00c7\\u00d6s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NFTFlatten.sol\":19558:34478  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"NFTFlatten.sol\":19558:34478  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201dbf86877c19647e6c2ef5a70e44af9d20de97591f1b01c54834bb5bd4aba22564736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201dbf86877c19647e6c2ef5a70e44af9d20de97591f1b01c54834bb5bd4aba22564736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0xBF DUP7 DUP8 PUSH29 0x19647E6C2EF5A70E44AF9D20DE97591F1B01C54834BB5BD4ABA2256473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "19558:14920:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201dbf86877c19647e6c2ef5a70e44af9d20de97591f1b01c54834bb5bd4aba22564736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR 0xBF DUP7 DUP8 PUSH29 0x19647E6C2EF5A70E44AF9D20DE97591F1B01C54834BB5BD4ABA2256473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "19558:14920:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 19558,
									"end": 34478,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19558,
									"end": 34478,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201dbf86877c19647e6c2ef5a70e44af9d20de97591f1b01c54834bb5bd4aba22564736f6c63430008160033",
									".code": [
										{
											"begin": 19558,
											"end": 34478,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 19558,
											"end": 34478,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 19558,
											"end": 34478,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19558,
											"end": 34478,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19558,
											"end": 34478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19558,
											"end": 34478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19558,
											"end": 34478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19558,
											"end": 34478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19558,
											"end": 34478,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"NFTFlatten.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 35,
								"contract": "NFTFlatten.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3310,
								"contract": "NFTFlatten.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NFTFlatten.sol\":34732:35779  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"NFTFlatten.sol\":34732:35779  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203302a2c4a27ff961c2835caab03bffea55ea864ecd2ed86ba2e18341431926a264736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203302a2c4a27ff961c2835caab03bffea55ea864ecd2ed86ba2e18341431926a264736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER MUL LOG2 0xC4 LOG2 PUSH32 0xF961C2835CAAB03BFFEA55EA864ECD2ED86BA2E18341431926A264736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "34732:1047:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203302a2c4a27ff961c2835caab03bffea55ea864ecd2ed86ba2e18341431926a264736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER MUL LOG2 0xC4 LOG2 PUSH32 0xF961C2835CAAB03BFFEA55EA864ECD2ED86BA2E18341431926A264736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "34732:1047:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 34732,
									"end": 35779,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 34732,
									"end": 35779,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203302a2c4a27ff961c2835caab03bffea55ea864ecd2ed86ba2e18341431926a264736f6c63430008160033",
									".code": [
										{
											"begin": 34732,
											"end": 35779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 34732,
											"end": 35779,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 34732,
											"end": 35779,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34732,
											"end": 35779,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 34732,
											"end": 35779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34732,
											"end": 35779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34732,
											"end": 35779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34732,
											"end": 35779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34732,
											"end": 35779,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"NFTFlatten.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NFTFlatten.sol\":35972:38819  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"NFTFlatten.sol\":35972:38819  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dbec071ad88a03abc2bb66d66d1f06e1c02d3f3a5382f457ccbd1e648b78999764736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dbec071ad88a03abc2bb66d66d1f06e1c02d3f3a5382f457ccbd1e648b78999764736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xEC SMOD BYTE 0xD8 DUP11 SUB 0xAB 0xC2 0xBB PUSH7 0xD66D1F06E1C02D EXTCODEHASH GASPRICE MSTORE8 DUP3 DELEGATECALL JUMPI 0xCC 0xBD 0x1E PUSH5 0x8B78999764 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "35972:2847:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dbec071ad88a03abc2bb66d66d1f06e1c02d3f3a5382f457ccbd1e648b78999764736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xEC SMOD BYTE 0xD8 DUP11 SUB 0xAB 0xC2 0xBB PUSH7 0xD66D1F06E1C02D EXTCODEHASH GASPRICE MSTORE8 DUP3 DELEGATECALL JUMPI 0xCC 0xBD 0x1E PUSH5 0x8B78999764 PUSH20 0x6F6C634300081600330000000000000000000000 ",
							"sourceMap": "35972:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35972,
									"end": 38819,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 35972,
									"end": 38819,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dbec071ad88a03abc2bb66d66d1f06e1c02d3f3a5382f457ccbd1e648b78999764736f6c63430008160033",
									".code": [
										{
											"begin": 35972,
											"end": 38819,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 35972,
											"end": 38819,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 35972,
											"end": 38819,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35972,
											"end": 38819,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35972,
											"end": 38819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35972,
											"end": 38819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35972,
											"end": 38819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35972,
											"end": 38819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35972,
											"end": 38819,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"NFTFlatten.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFTFlatten.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"NFTFlatten.sol\":{\"keccak256\":\"0x241924f9f7102425d0a0b97454cfa6049de93de56178e3faa62c02cdc5a95f44\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9d4058f3c5138251dfbe854753ff3133473ca06dc486a792988e9f3b0a6c82a3\",\"dweb:/ipfs/QmNRQeS4hoQdwbo5BWr8D1d1SiG4KeSEfhZGBKZ3sw7QhF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"NFTFlatten.sol": {
				"ast": {
					"absolutePath": "NFTFlatten.sol",
					"exportedSymbols": {
						"Context": [
							29
						],
						"DatHieuBin": [
							3689
						],
						"ERC165": [
							498
						],
						"ERC721": [
							2898
						],
						"ERC721Enumerable": [
							3304
						],
						"ERC721Pausable": [
							3448
						],
						"IERC1155Errors": [
							310
						],
						"IERC165": [
							321
						],
						"IERC20Errors": [
							215
						],
						"IERC721": [
							435
						],
						"IERC721Enumerable": [
							2927
						],
						"IERC721Errors": [
							263
						],
						"IERC721Metadata": [
							460
						],
						"IERC721Receiver": [
							477
						],
						"Math": [
							1551
						],
						"Ownable": [
							174
						],
						"Pausable": [
							3418
						],
						"SignedMath": [
							1655
						],
						"Strings": [
							1905
						]
					},
					"id": 3690,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "227:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "253:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "Context",
							"nameLocation": "768:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "844:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "861:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "865:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "861:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "854:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "791:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "801:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "835:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:9:0"
									},
									"scope": 29,
									"src": "782:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "951:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "968:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "972:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "968:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "961:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "893:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "901:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "935:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "935:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:16:0"
									},
									"scope": 29,
									"src": "884:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "1061:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1078:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 24,
												"id": 26,
												"nodeType": "Return",
												"src": "1071:8:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "998:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1018:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "1052:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:9:0"
									},
									"scope": 29,
									"src": "989:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "750:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 30,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1221:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 32,
										"name": "Context",
										"nameLocations": [
											"1764:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "1764:7:0"
									},
									"id": 33,
									"nodeType": "InheritanceSpecifier",
									"src": "1764:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 31,
								"nodeType": "StructuredDocumentation",
								"src": "1247:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 174,
							"linearizedBaseContracts": [
								174,
								29
							],
							"name": "Ownable",
							"nameLocation": "1753:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1794:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 174,
									"src": "1778:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 34,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1778:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1807:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 40,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1903:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1929:17:0"
									},
									"src": "1897:50:0"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1953:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 45,
									"name": "OwnableInvalidOwner",
									"nameLocation": "2046:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2074:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "2066:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:15:0"
									},
									"src": "2040:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 51,
									"name": "OwnershipTransferred",
									"nameLocation": "2093:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "2130:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2114:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2145:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:57:0"
									},
									"src": "2087:84:0"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "2331:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 57,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2345:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2369:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2361:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 58,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2361:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2361:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2345:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 71,
												"nodeType": "IfStatement",
												"src": "2341:95:0",
												"trueBody": {
													"id": 70,
													"nodeType": "Block",
													"src": "2373:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 66,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2422:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 65,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2414:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 64,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2414:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 67,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2414:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 63,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "2394:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2394:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 69,
															"nodeType": "RevertStatement",
															"src": "2387:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 73,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "2464:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 72,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "2445:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2445:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "2445:32:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2177:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 77,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2317:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "2309:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2308:22:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2331:0:0"
									},
									"scope": 174,
									"src": "2297:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "2593:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 80,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2603:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2603:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "2603:13:0"
											},
											{
												"id": 83,
												"nodeType": "PlaceholderStatement",
												"src": "2626:1:0"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "2490:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 85,
									"name": "onlyOwner",
									"nameLocation": "2581:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2590:2:0"
									},
									"src": "2572:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "2765:30:0",
										"statements": [
											{
												"expression": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 35,
													"src": "2782:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 90,
												"id": 92,
												"nodeType": "Return",
												"src": "2775:13:0"
											}
										]
									},
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "2640:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2719:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "2756:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:9:0"
									},
									"scope": 174,
									"src": "2710:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2913:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 98,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2927:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2927:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 100,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "2938:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2938:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2927:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 109,
												"nodeType": "IfStatement",
												"src": "2923:101:0",
												"trueBody": {
													"id": 108,
													"nodeType": "Block",
													"src": "2952:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 104,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "3000:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3000:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 103,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "2973:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2973:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 107,
															"nodeType": "RevertStatement",
															"src": "2966:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "2801:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2877:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2888:2:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:0:0"
									},
									"scope": 174,
									"src": "2868:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "3419:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3456:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3448:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 118,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3448:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3448:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 117,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "3429:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3429:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "3429:30:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "3036:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 114,
												"name": "onlyOwner",
												"nameLocations": [
													"3409:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "3409:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3409:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3374:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3391:2:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3419:0:0"
									},
									"scope": 174,
									"src": "3365:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3685:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 133,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "3699:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3711:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 134,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3711:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3711:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3699:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "IfStatement",
												"src": "3695:91:0",
												"trueBody": {
													"id": 146,
													"nodeType": "Block",
													"src": "3723:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3772:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3764:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 140,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3764:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3764:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 139,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "3744:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3744:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 145,
															"nodeType": "RevertStatement",
															"src": "3737:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 149,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "3814:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 148,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "3795:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3795:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "3795:28:0"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "3472:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 131,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 130,
												"name": "onlyOwner",
												"nameLocations": [
													"3675:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "3675:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3675:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3624:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3650:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3642:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3642:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3641:18:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3685:0:0"
									},
									"scope": 174,
									"src": "3615:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "4047:124:0",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "4065:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 172,
														"src": "4057:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 159,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4057:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 162,
												"initialValue": {
													"id": 161,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 35,
													"src": "4076:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4057:25:0"
											},
											{
												"expression": {
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 163,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "4092:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 164,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "4101:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4092:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "4092:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 168,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "4145:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 169,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4155:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 167,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "4124:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4124:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "EmitStatement",
												"src": "4119:45:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "3836:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3993:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "4020:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "4012:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4012:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4011:18:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4047:0:0"
									},
									"scope": 174,
									"src": "3984:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "1735:2438:0",
							"usedErrors": [
								40,
								45
							],
							"usedEvents": [
								51
							]
						},
						{
							"id": 175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4327:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 176,
								"nodeType": "StructuredDocumentation",
								"src": "4353:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 215,
							"linearizedBaseContracts": [
								215
							],
							"name": "IERC20Errors",
							"nameLocation": "4503:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "4522:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 185,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "4842:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4875:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "4867:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4867:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4891:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "4883:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4883:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4908:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "4900:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:49:0"
									},
									"src": "4836:80:0"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "4922:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 190,
									"name": "ERC20InvalidSender",
									"nameLocation": "5085:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5112:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5104:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5103:16:0"
									},
									"src": "5079:41:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5126:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 195,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5296:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5325:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "5317:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5317:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5316:18:0"
									},
									"src": "5290:45:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "5341:348:0",
										"text": " @dev Indicates a failure with the `spender`ΓÇÖs `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 204,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "5700:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5735:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "5727:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "5752:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "5744:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5771:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "5763:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5763:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5726:52:0"
									},
									"src": "5694:85:0"
								},
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "5785:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 209,
									"name": "ERC20InvalidApprover",
									"nameLocation": "5970:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5999:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5991:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5990:18:0"
									},
									"src": "5964:45:0"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6015:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 214,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6221:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6249:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "6241:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6240:17:0"
									},
									"src": "6215:43:0"
								}
							],
							"scope": 3690,
							"src": "4493:1767:0",
							"usedErrors": [
								185,
								190,
								195,
								204,
								209,
								214
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 216,
								"nodeType": "StructuredDocumentation",
								"src": "6262:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 263,
							"linearizedBaseContracts": [
								263
							],
							"name": "IERC721Errors",
							"nameLocation": "6414:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "6434:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 221,
									"name": "ERC721InvalidOwner",
									"nameLocation": "6664:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "6683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6682:15:0"
									},
									"src": "6658:40:0"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "6704:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 226,
									"name": "ERC721NonexistentToken",
									"nameLocation": "6847:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "6870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6869:17:0"
									},
									"src": "6841:46:0"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "6893:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 235,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7193:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7222:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "7214:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7214:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7238:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "7230:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7255:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "7247:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7213:48:0"
									},
									"src": "7187:75:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "7268:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 240,
									"name": "ERC721InvalidSender",
									"nameLocation": "7431:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7459:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "7451:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7450:16:0"
									},
									"src": "7425:42:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "7473:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 245,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7643:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "7673:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "7665:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7664:18:0"
									},
									"src": "7637:46:0"
								},
								{
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "7689:250:0",
										"text": " @dev Indicates a failure with the `operator`ΓÇÖs approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 252,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "7950:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7985:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "7977:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7977:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8003:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "7995:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7976:35:0"
									},
									"src": "7944:68:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "8018:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 257,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8203:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8233:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "8225:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8225:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8224:18:0"
									},
									"src": "8197:46:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "8249:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 262,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8457:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8487:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "8479:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8478:18:0"
									},
									"src": "8451:46:0"
								}
							],
							"scope": 3690,
							"src": "6404:2095:0",
							"usedErrors": [
								221,
								226,
								235,
								240,
								245,
								252,
								257,
								262
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 264,
								"nodeType": "StructuredDocumentation",
								"src": "8501:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 310,
							"linearizedBaseContracts": [
								310
							],
							"name": "IERC1155Errors",
							"nameLocation": "8655:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "8676:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 275,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9048:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9083:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "9075:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9075:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9099:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "9091:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9116:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "9108:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9108:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9132:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "9124:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9074:66:0"
									},
									"src": "9042:99:0"
								},
								{
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "9147:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 280,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9310:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9339:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "9331:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9330:16:0"
									},
									"src": "9304:43:0"
								},
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "9353:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 285,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9523:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9554:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "9546:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9546:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9545:18:0"
									},
									"src": "9517:47:0"
								},
								{
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "9570:259:0",
										"text": " @dev Indicates a failure with the `operator`ΓÇÖs approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 292,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "9840:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9877:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "9869:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9869:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9895:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "9887:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9887:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9868:33:0"
									},
									"src": "9834:68:0"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "9908:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 297,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10093:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10124:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "10116:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10115:18:0"
									},
									"src": "10087:47:0"
								},
								{
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "10140:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 302,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10348:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10379:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "10371:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10371:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10370:18:0"
									},
									"src": "10342:47:0"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "10395:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 309,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "10686:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "10720:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "10712:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "10739:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "10731:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10711:41:0"
									},
									"src": "10680:73:0"
								}
							],
							"scope": 3690,
							"src": "8645:2110:0",
							"usedErrors": [
								275,
								280,
								285,
								292,
								297,
								302,
								309
							],
							"usedEvents": []
						},
						{
							"id": 311,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "10914:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 312,
								"nodeType": "StructuredDocumentation",
								"src": "10940:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 321,
							"linearizedBaseContracts": [
								321
							],
							"name": "IERC165",
							"nameLocation": "11230:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "11244:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "11598:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "11623:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "11616:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 314,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "11616:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11615:20:0"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "11659:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 317,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11659:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11658:6:0"
									},
									"scope": 321,
									"src": "11589:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3690,
							"src": "11220:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11812:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 324,
										"name": "IERC165",
										"nameLocations": [
											"11927:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 321,
										"src": "11927:7:0"
									},
									"id": 325,
									"nodeType": "InheritanceSpecifier",
									"src": "11927:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 323,
								"nodeType": "StructuredDocumentation",
								"src": "11838:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 435,
							"linearizedBaseContracts": [
								435,
								321
							],
							"name": "IERC721",
							"nameLocation": "11916:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "11941:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 334,
									"name": "Transfer",
									"nameLocation": "12040:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12065:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "12049:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12049:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12087:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "12071:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12071:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12107:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "12091:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12048:67:0"
									},
									"src": "12034:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "12122:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 343,
									"name": "Approval",
									"nameLocation": "12227:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12252:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "12236:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12275:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "12259:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12301:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "12285:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12285:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12235:74:0"
									},
									"src": "12221:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "12316:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 352,
									"name": "ApprovalForAll",
									"nameLocation": "12444:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12475:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "12459:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12459:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "12498:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "12482:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12482:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "12513:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "12508:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12508:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12458:64:0"
									},
									"src": "12438:85:0"
								},
								{
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "12529:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "12619:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12637:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "12629:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12629:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12628:15:0"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "12675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "12667:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12666:17:0"
									},
									"scope": 435,
									"src": "12610:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "12690:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 368,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "12835:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12851:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "12843:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12842:17:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12891:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "12883:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12883:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12882:15:0"
									},
									"scope": 435,
									"src": "12826:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "12904:565:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "13483:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13508:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "13500:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13500:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13522:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "13514:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13534:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "13526:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13558:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "13543:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 376,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13543:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13499:64:0"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13572:0:0"
									},
									"scope": 435,
									"src": "13474:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "13579:705:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "14298:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14323:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "14315:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14315:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14337:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "14329:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14329:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14349:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "14341:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14314:43:0"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14366:0:0"
									},
									"scope": 435,
									"src": "14289:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "14373:732:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15119:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15140:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "15132:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15132:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15154:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "15146:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15146:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15166:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "15158:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15131:43:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15183:0:0"
									},
									"scope": 435,
									"src": "15110:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "15190:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15656:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15672:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "15664:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "15676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15663:29:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15701:0:0"
									},
									"scope": 435,
									"src": "15647:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "15708:315:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "16037:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16063:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "16055:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16055:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "16078:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "16073:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 412,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16073:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16054:33:0"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16096:0:0"
									},
									"scope": 435,
									"src": "16028:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "16103:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "16256:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16276:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "16268:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16267:17:0"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16316:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "16308:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16307:18:0"
									},
									"scope": 435,
									"src": "16247:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "16332:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "16484:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16509:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "16501:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16501:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "16524:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "16516:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16500:33:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "16557:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16557:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16556:6:0"
									},
									"scope": 435,
									"src": "16475:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3690,
							"src": "11906:4659:0",
							"usedErrors": [],
							"usedEvents": [
								334,
								343,
								352
							]
						},
						{
							"id": 436,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "16748:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 438,
										"name": "IERC721",
										"nameLocations": [
											"16937:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 435,
										"src": "16937:7:0"
									},
									"id": 439,
									"nodeType": "InheritanceSpecifier",
									"src": "16937:7:0"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 437,
								"nodeType": "StructuredDocumentation",
								"src": "16774:133:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 460,
							"linearizedBaseContracts": [
								460,
								435,
								321
							],
							"name": "IERC721Metadata",
							"nameLocation": "16918:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "16951:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "17023:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17027:2:0"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "17053:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 442,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17053:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17052:15:0"
									},
									"scope": 460,
									"src": "17014:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "17074:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "17148:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17154:2:0"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "17180:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 448,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17180:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17179:15:0"
									},
									"scope": 460,
									"src": "17139:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "17201:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "17305:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17322:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "17314:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17314:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17313:17:0"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "17354:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 456,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17354:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17353:15:0"
									},
									"scope": 460,
									"src": "17296:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3690,
							"src": "16908:463:0",
							"usedErrors": [],
							"usedEvents": [
								334,
								343,
								352
							]
						},
						{
							"id": 461,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "17532:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 462,
								"nodeType": "StructuredDocumentation",
								"src": "17558:152:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 477,
							"linearizedBaseContracts": [
								477
							],
							"name": "IERC721Receiver",
							"nameLocation": "17721:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "17743:500:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 476,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "18257:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "18291:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "18283:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18283:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18317:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "18309:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18339:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "18331:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18331:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18371:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "18356:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18356:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18273:108:0"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "18400:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 473,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "18400:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18399:8:0"
									},
									"scope": 477,
									"src": "18248:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3690,
							"src": "17711:699:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 478,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "18567:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 480,
										"name": "IERC165",
										"nameLocations": [
											"19100:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 321,
										"src": "19100:7:0"
									},
									"id": 481,
									"nodeType": "InheritanceSpecifier",
									"src": "19100:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 479,
								"nodeType": "StructuredDocumentation",
								"src": "18593:478:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 498,
							"linearizedBaseContracts": [
								498,
								321
							],
							"name": "ERC165",
							"nameLocation": "19090:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										320
									],
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "19257:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 489,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "19274:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 491,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "19294:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$321_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$321_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 490,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "19289:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19289:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$321",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "19303:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "19289:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "19274:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 488,
												"id": 495,
												"nodeType": "Return",
												"src": "19267:47:0"
											}
										]
									},
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "19114:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "19184:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "19209:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "19202:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 483,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "19202:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19201:20:0"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "19251:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 486,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19251:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19250:6:0"
									},
									"scope": 498,
									"src": "19175:146:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3690,
							"src": "19072:251:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 499,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "19458:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 500,
								"nodeType": "StructuredDocumentation",
								"src": "19484:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1551,
							"linearizedBaseContracts": [
								1551
							],
							"name": "Math",
							"nameLocation": "19566:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "19577:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 503,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "19638:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19658:2:0"
									},
									"src": "19632:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 508,
									"members": [
										{
											"id": 504,
											"name": "Floor",
											"nameLocation": "19691:5:0",
											"nodeType": "EnumValue",
											"src": "19691:5:0"
										},
										{
											"id": 505,
											"name": "Ceil",
											"nameLocation": "19734:4:0",
											"nodeType": "EnumValue",
											"src": "19734:4:0"
										},
										{
											"id": 506,
											"name": "Trunc",
											"nameLocation": "19776:5:0",
											"nodeType": "EnumValue",
											"src": "19776:5:0"
										},
										{
											"id": 507,
											"name": "Expand",
											"nameLocation": "19806:6:0",
											"nodeType": "EnumValue",
											"src": "19806:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "19672:8:0",
									"nodeType": "EnumDefinition",
									"src": "19667:169:0"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "20016:140:0",
										"statements": [
											{
												"id": 538,
												"nodeType": "UncheckedBlock",
												"src": "20026:124:0",
												"statements": [
													{
														"assignments": [
															521
														],
														"declarations": [
															{
																"constant": false,
																"id": 521,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "20058:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 538,
																"src": "20050:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 520,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "20050:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 525,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 522,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "20062:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 523,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 513,
																"src": "20066:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20062:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "20050:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 526,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "20085:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 527,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "20089:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20085:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 533,
														"nodeType": "IfStatement",
														"src": "20081:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20100:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20107:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 531,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20099:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 519,
															"id": 532,
															"nodeType": "Return",
															"src": "20092:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20131:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 535,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "20137:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 536,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "20130:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 519,
														"id": 537,
														"nodeType": "Return",
														"src": "20123:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "19842:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "19949:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "19964:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "19956:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "19975:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "19967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19955:22:0"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "20001:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 515,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20001:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "20007:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20000:15:0"
									},
									"scope": 1551,
									"src": "19940:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "20339:113:0",
										"statements": [
											{
												"id": 566,
												"nodeType": "UncheckedBlock",
												"src": "20349:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 552,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "20377:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 553,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "20381:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20377:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 559,
														"nodeType": "IfStatement",
														"src": "20373:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20392:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20399:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 557,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20391:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 551,
															"id": 558,
															"nodeType": "Return",
															"src": "20384:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20423:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 561,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 543,
																		"src": "20429:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 562,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "20433:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "20429:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 564,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "20422:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 551,
														"id": 565,
														"nodeType": "Return",
														"src": "20415:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "20162:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "20272:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20287:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "20279:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "20298:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "20290:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20278:22:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "20324:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 547,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20324:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "20330:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20323:15:0"
									},
									"scope": 1551,
									"src": "20263:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "20638:417:0",
										"statements": [
											{
												"id": 608,
												"nodeType": "UncheckedBlock",
												"src": "20648:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 580,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "20906:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20911:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20906:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 587,
														"nodeType": "IfStatement",
														"src": "20902:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20922:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20928:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 585,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20921:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 579,
															"id": 586,
															"nodeType": "Return",
															"src": "20914:16:0"
														}
													},
													{
														"assignments": [
															589
														],
														"declarations": [
															{
																"constant": false,
																"id": 589,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "20952:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 608,
																"src": "20944:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 588,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "20944:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 593,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 590,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "20956:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 591,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "20960:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20956:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "20944:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 594,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "20979:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 595,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "20983:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20979:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 597,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "20988:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20979:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 603,
														"nodeType": "IfStatement",
														"src": "20975:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20999:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21006:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 601,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20998:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 579,
															"id": 602,
															"nodeType": "Return",
															"src": "20991:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21030:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 605,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "21036:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 606,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "21029:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 579,
														"id": 607,
														"nodeType": "Return",
														"src": "21022:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "20458:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "20571:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20586:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "20578:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "20597:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "20589:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20589:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20577:22:0"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "20623:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20623:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "20629:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20622:15:0"
									},
									"scope": 1551,
									"src": "20562:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "21242:114:0",
										"statements": [
											{
												"id": 636,
												"nodeType": "UncheckedBlock",
												"src": "21252:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 622,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "21280:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21285:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21280:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 629,
														"nodeType": "IfStatement",
														"src": "21276:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21296:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21303:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 627,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21295:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 621,
															"id": 628,
															"nodeType": "Return",
															"src": "21288:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21327:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 631,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "21333:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 632,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 615,
																		"src": "21337:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "21333:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 634,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "21326:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 621,
														"id": 635,
														"nodeType": "Return",
														"src": "21319:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "21061:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "21175:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "21190:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "21182:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21182:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "21201:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "21193:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21181:22:0"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "21227:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21227:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "21233:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21226:15:0"
									},
									"scope": 1551,
									"src": "21166:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "21553:114:0",
										"statements": [
											{
												"id": 664,
												"nodeType": "UncheckedBlock",
												"src": "21563:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 650,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 643,
																"src": "21591:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21596:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21591:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 657,
														"nodeType": "IfStatement",
														"src": "21587:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21607:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21614:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 655,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21606:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 649,
															"id": 656,
															"nodeType": "Return",
															"src": "21599:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21638:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 659,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "21644:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 660,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 643,
																		"src": "21648:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "21644:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 662,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "21637:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 649,
														"id": 663,
														"nodeType": "Return",
														"src": "21630:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "21362:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "21486:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "21501:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "21493:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "21512:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "21504:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21492:22:0"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "21538:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 645,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21538:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "21544:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21544:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21537:15:0"
									},
									"scope": 1551,
									"src": "21477:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "21804:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 676,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "21821:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 677,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "21825:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "21821:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 680,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "21833:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "21821:13:0",
													"trueExpression": {
														"id": 679,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "21829:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 675,
												"id": 682,
												"nodeType": "Return",
												"src": "21814:20:0"
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "21673:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "21746:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "21758:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "21750:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "21769:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "21761:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21761:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21749:22:0"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "21795:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21794:9:0"
									},
									"scope": 1551,
									"src": "21737:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "21979:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 694,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "21996:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 695,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "22000:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "21996:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 698,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "22008:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "21996:13:0",
													"trueExpression": {
														"id": 697,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "22004:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 693,
												"id": 700,
												"nodeType": "Return",
												"src": "21989:20:0"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "21847:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "21921:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "21933:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "21925:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "21944:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "21936:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21924:22:0"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "21970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21969:9:0"
									},
									"scope": 1551,
									"src": "21912:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "22200:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 712,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "22255:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 713,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "22259:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22255:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 715,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "22254:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 716,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 705,
																		"src": "22265:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 717,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "22269:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22265:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 719,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "22264:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22274:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "22264:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22254:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 711,
												"id": 723,
												"nodeType": "Return",
												"src": "22247:28:0"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "22022:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "22138:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "22154:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "22146:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22146:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "22165:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "22157:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22145:22:0"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "22191:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22190:9:0"
									},
									"scope": 1551,
									"src": "22129:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "22574:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 735,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "22588:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22593:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22588:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 743,
												"nodeType": "IfStatement",
												"src": "22584:127:0",
												"trueBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "22596:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 738,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "22695:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 739,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "22699:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22695:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 734,
															"id": 741,
															"nodeType": "Return",
															"src": "22688:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 744,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "22799:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22804:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "22799:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 748,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 728,
																			"src": "22813:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22817:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22813:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 751,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22812:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 752,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "22822:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22812:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22826:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "22812:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "22799:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22808:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 734,
												"id": 757,
												"nodeType": "Return",
												"src": "22792:35:0"
											}
										]
									},
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "22288:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "22512:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "22528:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "22520:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "22539:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "22531:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22519:22:0"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "22565:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22564:9:0"
									},
									"scope": 1551,
									"src": "22503:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "23256:4018:0",
										"statements": [
											{
												"id": 883,
												"nodeType": "UncheckedBlock",
												"src": "23266:4002:0",
												"statements": [
													{
														"assignments": [
															772
														],
														"declarations": [
															{
																"constant": false,
																"id": 772,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "23595:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 883,
																"src": "23587:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 771,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23587:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 776,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 773,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "23603:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 774,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "23607:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23603:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23587:21:0"
													},
													{
														"assignments": [
															778
														],
														"declarations": [
															{
																"constant": false,
																"id": 778,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "23675:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 883,
																"src": "23667:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 777,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23667:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 779,
														"nodeType": "VariableDeclarationStatement",
														"src": "23667:13:0"
													},
													{
														"AST": {
															"nativeSrc": "23747:122:0",
															"nodeType": "YulBlock",
															"src": "23747:122:0",
															"statements": [
																{
																	"nativeSrc": "23765:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "23765:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "23782:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "23782:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "23785:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "23785:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "23792:1:0",
																						"nodeType": "YulLiteral",
																						"src": "23792:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "23788:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "23788:3:0"
																				},
																				"nativeSrc": "23788:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "23788:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "23775:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "23775:6:0"
																		},
																		"nativeSrc": "23775:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "23775:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "23769:2:0",
																			"nodeType": "YulTypedName",
																			"src": "23769:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "23812:43:0",
																	"nodeType": "YulAssignment",
																	"src": "23812:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "23829:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "23829:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "23833:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "23833:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "23825:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "23825:3:0"
																				},
																				"nativeSrc": "23825:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "23825:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "23844:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "23844:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "23848:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "23848:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "23841:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "23841:2:0"
																				},
																				"nativeSrc": "23841:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "23841:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23821:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "23821:3:0"
																		},
																		"nativeSrc": "23821:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "23821:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "23812:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "23812:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 772,
																"isOffset": false,
																"isSlot": false,
																"src": "23833:5:0",
																"valueSize": 1
															},
															{
																"declaration": 772,
																"isOffset": false,
																"isSlot": false,
																"src": "23848:5:0",
																"valueSize": 1
															},
															{
																"declaration": 778,
																"isOffset": false,
																"isSlot": false,
																"src": "23812:5:0",
																"valueSize": 1
															},
															{
																"declaration": 762,
																"isOffset": false,
																"isSlot": false,
																"src": "23782:1:0",
																"valueSize": 1
															},
															{
																"declaration": 764,
																"isOffset": false,
																"isSlot": false,
																"src": "23785:1:0",
																"valueSize": 1
															}
														],
														"id": 780,
														"nodeType": "InlineAssembly",
														"src": "23738:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 781,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "23950:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23959:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23950:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 789,
														"nodeType": "IfStatement",
														"src": "23946:368:0",
														"trueBody": {
															"id": 788,
															"nodeType": "Block",
															"src": "23962:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 784,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 772,
																			"src": "24280:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 785,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "24288:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "24280:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 770,
																	"id": 787,
																	"nodeType": "Return",
																	"src": "24273:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 790,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "24420:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 791,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "24435:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24420:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 797,
														"nodeType": "IfStatement",
														"src": "24416:88:0",
														"trueBody": {
															"id": 796,
															"nodeType": "Block",
															"src": "24442:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 793,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 503,
																			"src": "24467:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24467:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 795,
																	"nodeType": "RevertStatement",
																	"src": "24460:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															799
														],
														"declarations": [
															{
																"constant": false,
																"id": 799,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "24767:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 883,
																"src": "24759:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 798,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "24759:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 800,
														"nodeType": "VariableDeclarationStatement",
														"src": "24759:17:0"
													},
													{
														"AST": {
															"nativeSrc": "24799:291:0",
															"nodeType": "YulBlock",
															"src": "24799:291:0",
															"statements": [
																{
																	"nativeSrc": "24868:38:0",
																	"nodeType": "YulAssignment",
																	"src": "24868:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "24888:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "24888:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "24891:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "24891:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "24894:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "24894:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "24881:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "24881:6:0"
																		},
																		"nativeSrc": "24881:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "24881:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "24868:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "24868:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "24988:41:0",
																	"nodeType": "YulAssignment",
																	"src": "24988:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "25001:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "25001:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "25011:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "25011:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "25022:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "25022:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "25008:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "25008:2:0"
																				},
																				"nativeSrc": "25008:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "25008:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24997:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "24997:3:0"
																		},
																		"nativeSrc": "24997:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "24997:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "24988:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "24988:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "25046:30:0",
																	"nodeType": "YulAssignment",
																	"src": "25046:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "25059:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "25059:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "25066:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "25066:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25055:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "25055:3:0"
																		},
																		"nativeSrc": "25055:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "25055:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "25046:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "25046:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 766,
																"isOffset": false,
																"isSlot": false,
																"src": "24894:11:0",
																"valueSize": 1
															},
															{
																"declaration": 772,
																"isOffset": false,
																"isSlot": false,
																"src": "25022:5:0",
																"valueSize": 1
															},
															{
																"declaration": 772,
																"isOffset": false,
																"isSlot": false,
																"src": "25046:5:0",
																"valueSize": 1
															},
															{
																"declaration": 772,
																"isOffset": false,
																"isSlot": false,
																"src": "25059:5:0",
																"valueSize": 1
															},
															{
																"declaration": 778,
																"isOffset": false,
																"isSlot": false,
																"src": "24988:5:0",
																"valueSize": 1
															},
															{
																"declaration": 778,
																"isOffset": false,
																"isSlot": false,
																"src": "25001:5:0",
																"valueSize": 1
															},
															{
																"declaration": 799,
																"isOffset": false,
																"isSlot": false,
																"src": "24868:9:0",
																"valueSize": 1
															},
															{
																"declaration": 799,
																"isOffset": false,
																"isSlot": false,
																"src": "25011:9:0",
																"valueSize": 1
															},
															{
																"declaration": 799,
																"isOffset": false,
																"isSlot": false,
																"src": "25066:9:0",
																"valueSize": 1
															},
															{
																"declaration": 762,
																"isOffset": false,
																"isSlot": false,
																"src": "24888:1:0",
																"valueSize": 1
															},
															{
																"declaration": 764,
																"isOffset": false,
																"isSlot": false,
																"src": "24891:1:0",
																"valueSize": 1
															}
														],
														"id": 801,
														"nodeType": "InlineAssembly",
														"src": "24790:300:0"
													},
													{
														"assignments": [
															803
														],
														"declarations": [
															{
																"constant": false,
																"id": 803,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "25302:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 883,
																"src": "25294:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 802,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25294:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 810,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "25309:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25324:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 806,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "25328:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "25324:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 808,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "25323:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25309:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25294:46:0"
													},
													{
														"AST": {
															"nativeSrc": "25363:362:0",
															"nodeType": "YulBlock",
															"src": "25363:362:0",
															"statements": [
																{
																	"nativeSrc": "25428:37:0",
																	"nodeType": "YulAssignment",
																	"src": "25428:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "25447:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "25447:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "25460:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "25460:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "25443:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "25443:3:0"
																		},
																		"nativeSrc": "25443:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "25443:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "25428:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "25428:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "25532:25:0",
																	"nodeType": "YulAssignment",
																	"src": "25532:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "25545:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "25545:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "25552:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "25552:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "25541:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "25541:3:0"
																		},
																		"nativeSrc": "25541:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "25541:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "25532:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "25532:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "25672:39:0",
																	"nodeType": "YulAssignment",
																	"src": "25672:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "25692:1:0",
																								"nodeType": "YulLiteral",
																								"src": "25692:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "25695:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "25695:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "25688:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "25688:3:0"
																						},
																						"nativeSrc": "25688:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "25688:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "25702:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "25702:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "25684:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "25684:3:0"
																				},
																				"nativeSrc": "25684:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "25684:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25709:1:0",
																				"nodeType": "YulLiteral",
																				"src": "25709:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25680:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "25680:3:0"
																		},
																		"nativeSrc": "25680:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "25680:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "25672:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "25672:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 766,
																"isOffset": false,
																"isSlot": false,
																"src": "25428:11:0",
																"valueSize": 1
															},
															{
																"declaration": 766,
																"isOffset": false,
																"isSlot": false,
																"src": "25447:11:0",
																"valueSize": 1
															},
															{
																"declaration": 772,
																"isOffset": false,
																"isSlot": false,
																"src": "25532:5:0",
																"valueSize": 1
															},
															{
																"declaration": 772,
																"isOffset": false,
																"isSlot": false,
																"src": "25545:5:0",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "25460:4:0",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "25552:4:0",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "25672:4:0",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "25695:4:0",
																"valueSize": 1
															},
															{
																"declaration": 803,
																"isOffset": false,
																"isSlot": false,
																"src": "25702:4:0",
																"valueSize": 1
															}
														],
														"id": 811,
														"nodeType": "InlineAssembly",
														"src": "25354:371:0"
													},
													{
														"expression": {
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 812,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "25791:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 813,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "25800:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 814,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "25808:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "25800:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25791:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 817,
														"nodeType": "ExpressionStatement",
														"src": "25791:21:0"
													},
													{
														"assignments": [
															819
														],
														"declarations": [
															{
																"constant": false,
																"id": 819,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "26138:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 883,
																"src": "26130:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 818,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26130:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 826,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26149:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 821,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "26153:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "26149:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 823,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "26148:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26168:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "26148:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26130:39:0"
													},
													{
														"expression": {
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 827,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "26386:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26397:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 829,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "26401:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 830,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 819,
																		"src": "26415:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "26401:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26397:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26386:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 834,
														"nodeType": "ExpressionStatement",
														"src": "26386:36:0"
													},
													{
														"expression": {
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 835,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "26455:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26466:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 837,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "26470:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 838,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 819,
																		"src": "26484:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "26470:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26466:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26455:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 842,
														"nodeType": "ExpressionStatement",
														"src": "26455:36:0"
													},
													{
														"expression": {
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 843,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "26525:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26536:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 845,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "26540:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 846,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 819,
																		"src": "26554:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "26540:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26536:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26525:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 850,
														"nodeType": "ExpressionStatement",
														"src": "26525:36:0"
													},
													{
														"expression": {
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 851,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "26595:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26606:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 853,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "26610:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 854,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 819,
																		"src": "26624:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "26610:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26606:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26595:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 858,
														"nodeType": "ExpressionStatement",
														"src": "26595:36:0"
													},
													{
														"expression": {
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 859,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "26665:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26676:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 861,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "26680:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 862,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 819,
																		"src": "26694:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "26680:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26676:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26665:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 866,
														"nodeType": "ExpressionStatement",
														"src": "26665:36:0"
													},
													{
														"expression": {
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 867,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "26736:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26747:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 869,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "26751:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 870,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 819,
																		"src": "26765:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "26751:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26747:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26736:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 874,
														"nodeType": "ExpressionStatement",
														"src": "26736:36:0"
													},
													{
														"expression": {
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 875,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "27206:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 876,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "27215:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 877,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "27223:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27215:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27206:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 880,
														"nodeType": "ExpressionStatement",
														"src": "27206:24:0"
													},
													{
														"expression": {
															"id": 881,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "27251:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 770,
														"id": 882,
														"nodeType": "Return",
														"src": "27244:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "22840:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "23167:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "23182:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "23174:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "23193:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "23185:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23185:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "23204:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "23196:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23173:43:0"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "23248:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "23240:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23240:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23239:16:0"
									},
									"scope": 1551,
									"src": "23158:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "27516:192:0",
										"statements": [
											{
												"assignments": [
													901
												],
												"declarations": [
													{
														"constant": false,
														"id": 901,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "27534:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 927,
														"src": "27526:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 900,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27526:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 907,
												"initialValue": {
													"arguments": [
														{
															"id": 903,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "27550:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 904,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "27553:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 905,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "27556:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 902,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															885,
															928
														],
														"referencedDeclaration": 885,
														"src": "27543:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27543:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27526:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 909,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 895,
																"src": "27599:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$508",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$508",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 908,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "27582:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$508_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27582:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 912,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "27619:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 913,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "27622:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 914,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 892,
																	"src": "27625:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 911,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "27612:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27612:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27640:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "27612:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "27582:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 924,
												"nodeType": "IfStatement",
												"src": "27578:101:0",
												"trueBody": {
													"id": 923,
													"nodeType": "Block",
													"src": "27643:36:0",
													"statements": [
														{
															"expression": {
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 919,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "27657:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27667:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "27657:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 922,
															"nodeType": "ExpressionStatement",
															"src": "27657:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 925,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 901,
													"src": "27695:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 899,
												"id": 926,
												"nodeType": "Return",
												"src": "27688:13:0"
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "27280:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "27415:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "27430:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "27422:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "27441:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "27433:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27433:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "27452:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "27444:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "27474:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "27465:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$508",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 894,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 893,
														"name": "Rounding",
														"nameLocations": [
															"27465:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 508,
														"src": "27465:8:0"
													},
													"referencedDeclaration": 508,
													"src": "27465:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$508",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27421:62:0"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "27507:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27506:9:0"
									},
									"scope": 1551,
									"src": "27406:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "27999:1591:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 936,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "28013:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28018:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "28013:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 942,
												"nodeType": "IfStatement",
												"src": "28009:45:0",
												"trueBody": {
													"id": 941,
													"nodeType": "Block",
													"src": "28021:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28042:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 935,
															"id": 940,
															"nodeType": "Return",
															"src": "28035:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													944
												],
												"declarations": [
													{
														"constant": false,
														"id": 944,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "28747:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1039,
														"src": "28739:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 943,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28739:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 953,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28756:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 947,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 931,
																			"src": "28767:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 946,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1207,
																			1242
																		],
																		"referencedDeclaration": 1207,
																		"src": "28762:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28762:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28773:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "28762:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 951,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "28761:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28756:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28739:36:0"
											},
											{
												"id": 1038,
												"nodeType": "UncheckedBlock",
												"src": "29176:408:0",
												"statements": [
													{
														"expression": {
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 954,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "29200:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 959,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 955,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "29210:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 958,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 956,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 931,
																					"src": "29219:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 957,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 944,
																					"src": "29223:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "29219:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29210:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 960,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "29209:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29234:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "29209:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29200:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 964,
														"nodeType": "ExpressionStatement",
														"src": "29200:35:0"
													},
													{
														"expression": {
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 965,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "29249:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 966,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "29259:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 969,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 967,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 931,
																					"src": "29268:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 968,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 944,
																					"src": "29272:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "29268:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29259:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 971,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "29258:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29283:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "29258:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29249:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 975,
														"nodeType": "ExpressionStatement",
														"src": "29249:35:0"
													},
													{
														"expression": {
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 976,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "29298:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 977,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "29308:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 980,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 978,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 931,
																					"src": "29317:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 979,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 944,
																					"src": "29321:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "29317:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29308:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 982,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "29307:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29332:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "29307:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29298:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 986,
														"nodeType": "ExpressionStatement",
														"src": "29298:35:0"
													},
													{
														"expression": {
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 987,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "29347:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 988,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "29357:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 991,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 989,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 931,
																					"src": "29366:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 990,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 944,
																					"src": "29370:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "29366:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29357:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 993,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "29356:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29381:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "29356:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29347:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 997,
														"nodeType": "ExpressionStatement",
														"src": "29347:35:0"
													},
													{
														"expression": {
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 998,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "29396:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 999,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "29406:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1000,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 931,
																					"src": "29415:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1001,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 944,
																					"src": "29419:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "29415:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29406:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1004,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "29405:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29430:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "29405:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29396:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1008,
														"nodeType": "ExpressionStatement",
														"src": "29396:35:0"
													},
													{
														"expression": {
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1009,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "29445:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1010,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "29455:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1011,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 931,
																					"src": "29464:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1012,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 944,
																					"src": "29468:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "29464:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29455:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1015,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "29454:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29479:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "29454:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29445:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1019,
														"nodeType": "ExpressionStatement",
														"src": "29445:35:0"
													},
													{
														"expression": {
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1020,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "29494:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1021,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "29504:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1024,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1022,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 931,
																					"src": "29513:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1023,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 944,
																					"src": "29517:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "29513:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29504:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1026,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "29503:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29528:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "29503:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29494:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1030,
														"nodeType": "ExpressionStatement",
														"src": "29494:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1032,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "29554:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1033,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 931,
																		"src": "29562:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1034,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "29566:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "29562:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1031,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "29550:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29550:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 935,
														"id": 1037,
														"nodeType": "Return",
														"src": "29543:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "27714:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "27951:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "27964:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "27956:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27955:11:0"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "27990:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27989:9:0"
									},
									"scope": 1551,
									"src": "27942:1648:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1074,
										"nodeType": "Block",
										"src": "29766:164:0",
										"statements": [
											{
												"id": 1073,
												"nodeType": "UncheckedBlock",
												"src": "29776:148:0",
												"statements": [
													{
														"assignments": [
															1052
														],
														"declarations": [
															{
																"constant": false,
																"id": 1052,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "29808:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1073,
																"src": "29800:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1051,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29800:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1056,
														"initialValue": {
															"arguments": [
																{
																	"id": 1054,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "29822:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1053,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1040,
																	1075
																],
																"referencedDeclaration": 1040,
																"src": "29817:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29817:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29800:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1057,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "29845:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1059,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1046,
																						"src": "29872:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$508",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$508",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1058,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1550,
																					"src": "29855:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$508_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1060,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "29855:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1063,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1061,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1052,
																						"src": "29885:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1062,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1052,
																						"src": "29894:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "29885:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1064,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1043,
																					"src": "29903:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "29885:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "29855:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1068,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29911:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "29855:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29907:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1070,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "29854:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "29845:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1050,
														"id": 1072,
														"nodeType": "Return",
														"src": "29838:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "29596:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "29699:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "29712:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "29704:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "29724:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "29715:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$508",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1045,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1044,
														"name": "Rounding",
														"nameLocations": [
															"29715:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 508,
														"src": "29715:8:0"
													},
													"referencedDeclaration": 508,
													"src": "29715:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$508",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29703:30:0"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "29757:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29756:9:0"
									},
									"scope": 1551,
									"src": "29690:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "30121:922:0",
										"statements": [
											{
												"assignments": [
													1084
												],
												"declarations": [
													{
														"constant": false,
														"id": 1084,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "30139:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1206,
														"src": "30131:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1083,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30131:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1086,
												"initialValue": {
													"hexValue": "30",
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "30148:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30131:18:0"
											},
											{
												"id": 1203,
												"nodeType": "UncheckedBlock",
												"src": "30159:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1087,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "30187:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30196:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "30187:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30202:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30187:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1101,
														"nodeType": "IfStatement",
														"src": "30183:99:0",
														"trueBody": {
															"id": 1100,
															"nodeType": "Block",
															"src": "30205:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1092,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1078,
																			"src": "30223:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30233:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "30223:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1095,
																	"nodeType": "ExpressionStatement",
																	"src": "30223:13:0"
																},
																{
																	"expression": {
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1096,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1084,
																			"src": "30254:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30264:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "30254:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1099,
																	"nodeType": "ExpressionStatement",
																	"src": "30254:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1102,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "30299:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30308:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "30299:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30313:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30299:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1116,
														"nodeType": "IfStatement",
														"src": "30295:96:0",
														"trueBody": {
															"id": 1115,
															"nodeType": "Block",
															"src": "30316:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1107,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1078,
																			"src": "30334:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30344:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "30334:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1110,
																	"nodeType": "ExpressionStatement",
																	"src": "30334:12:0"
																},
																{
																	"expression": {
																		"id": 1113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1111,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1084,
																			"src": "30364:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30374:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "30364:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1114,
																	"nodeType": "ExpressionStatement",
																	"src": "30364:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1117,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "30408:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30417:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "30408:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30422:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30408:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1131,
														"nodeType": "IfStatement",
														"src": "30404:96:0",
														"trueBody": {
															"id": 1130,
															"nodeType": "Block",
															"src": "30425:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1122,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1078,
																			"src": "30443:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30453:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "30443:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1125,
																	"nodeType": "ExpressionStatement",
																	"src": "30443:12:0"
																},
																{
																	"expression": {
																		"id": 1128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1126,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1084,
																			"src": "30473:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30483:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "30473:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1129,
																	"nodeType": "ExpressionStatement",
																	"src": "30473:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1132,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "30517:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30526:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "30517:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30531:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30517:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1146,
														"nodeType": "IfStatement",
														"src": "30513:96:0",
														"trueBody": {
															"id": 1145,
															"nodeType": "Block",
															"src": "30534:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1137,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1078,
																			"src": "30552:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30562:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "30552:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1140,
																	"nodeType": "ExpressionStatement",
																	"src": "30552:12:0"
																},
																{
																	"expression": {
																		"id": 1143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1141,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1084,
																			"src": "30582:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30592:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "30582:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1144,
																	"nodeType": "ExpressionStatement",
																	"src": "30582:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1147,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "30626:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30635:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "30626:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30639:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30626:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1161,
														"nodeType": "IfStatement",
														"src": "30622:93:0",
														"trueBody": {
															"id": 1160,
															"nodeType": "Block",
															"src": "30642:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1152,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1078,
																			"src": "30660:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30670:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "30660:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1155,
																	"nodeType": "ExpressionStatement",
																	"src": "30660:11:0"
																},
																{
																	"expression": {
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1156,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1084,
																			"src": "30689:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30699:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "30689:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1159,
																	"nodeType": "ExpressionStatement",
																	"src": "30689:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1162,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "30732:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30741:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "30732:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30745:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30732:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1176,
														"nodeType": "IfStatement",
														"src": "30728:93:0",
														"trueBody": {
															"id": 1175,
															"nodeType": "Block",
															"src": "30748:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1167,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1078,
																			"src": "30766:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30776:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "30766:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1170,
																	"nodeType": "ExpressionStatement",
																	"src": "30766:11:0"
																},
																{
																	"expression": {
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1171,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1084,
																			"src": "30795:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30805:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "30795:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1174,
																	"nodeType": "ExpressionStatement",
																	"src": "30795:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1177,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "30838:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30847:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "30838:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30851:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30838:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1191,
														"nodeType": "IfStatement",
														"src": "30834:93:0",
														"trueBody": {
															"id": 1190,
															"nodeType": "Block",
															"src": "30854:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1182,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1078,
																			"src": "30872:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30882:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "30872:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1185,
																	"nodeType": "ExpressionStatement",
																	"src": "30872:11:0"
																},
																{
																	"expression": {
																		"id": 1188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1186,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1084,
																			"src": "30901:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30911:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "30901:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1189,
																	"nodeType": "ExpressionStatement",
																	"src": "30901:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1192,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "30944:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30953:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "30944:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30957:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "30944:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1202,
														"nodeType": "IfStatement",
														"src": "30940:64:0",
														"trueBody": {
															"id": 1201,
															"nodeType": "Block",
															"src": "30960:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1197,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1084,
																			"src": "30978:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30988:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "30978:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1200,
																	"nodeType": "ExpressionStatement",
																	"src": "30978:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1204,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1084,
													"src": "31030:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1082,
												"id": 1205,
												"nodeType": "Return",
												"src": "31023:13:0"
											}
										]
									},
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "29936:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "30069:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30082:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "30074:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30073:15:0"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "30112:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30112:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30111:9:0"
									},
									"scope": 1551,
									"src": "30060:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "31276:168:0",
										"statements": [
											{
												"id": 1240,
												"nodeType": "UncheckedBlock",
												"src": "31286:152:0",
												"statements": [
													{
														"assignments": [
															1219
														],
														"declarations": [
															{
																"constant": false,
																"id": 1219,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "31318:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1240,
																"src": "31310:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1218,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31310:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1223,
														"initialValue": {
															"arguments": [
																{
																	"id": 1221,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1210,
																	"src": "31332:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1220,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1207,
																	1242
																],
																"referencedDeclaration": 1207,
																"src": "31327:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31327:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "31310:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1224,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "31359:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1226,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1213,
																						"src": "31386:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$508",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$508",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1225,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1550,
																					"src": "31369:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$508_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "31369:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1232,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1230,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1228,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "31399:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1229,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1219,
																						"src": "31404:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "31399:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1231,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1210,
																					"src": "31413:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31399:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "31369:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31425:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "31369:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31421:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1237,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "31368:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "31359:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1217,
														"id": 1239,
														"nodeType": "Return",
														"src": "31352:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "31049:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "31205:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31218:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "31210:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "31234:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "31225:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$508",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1212,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1211,
														"name": "Rounding",
														"nameLocations": [
															"31225:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 508,
														"src": "31225:8:0"
													},
													"referencedDeclaration": 508,
													"src": "31225:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$508",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31209:34:0"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "31267:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31266:9:0"
									},
									"scope": 1551,
									"src": "31196:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "31637:854:0",
										"statements": [
											{
												"assignments": [
													1251
												],
												"declarations": [
													{
														"constant": false,
														"id": 1251,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "31655:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1370,
														"src": "31647:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1250,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31647:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1253,
												"initialValue": {
													"hexValue": "30",
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "31664:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31647:18:0"
											},
											{
												"id": 1367,
												"nodeType": "UncheckedBlock",
												"src": "31675:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1254,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "31703:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31712:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31718:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "31712:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "31703:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1270,
														"nodeType": "IfStatement",
														"src": "31699:103:0",
														"trueBody": {
															"id": 1269,
															"nodeType": "Block",
															"src": "31722:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1259,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1245,
																			"src": "31740:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1260,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31749:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1261,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31755:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "31749:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "31740:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1264,
																	"nodeType": "ExpressionStatement",
																	"src": "31740:17:0"
																},
																{
																	"expression": {
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1265,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "31775:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31785:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "31775:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1268,
																	"nodeType": "ExpressionStatement",
																	"src": "31775:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1271,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "31819:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31828:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31834:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "31828:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "31819:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1287,
														"nodeType": "IfStatement",
														"src": "31815:103:0",
														"trueBody": {
															"id": 1286,
															"nodeType": "Block",
															"src": "31838:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1276,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1245,
																			"src": "31856:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1277,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31865:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1278,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31871:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "31865:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "31856:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1281,
																	"nodeType": "ExpressionStatement",
																	"src": "31856:17:0"
																},
																{
																	"expression": {
																		"id": 1284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1282,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "31891:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31901:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "31891:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1285,
																	"nodeType": "ExpressionStatement",
																	"src": "31891:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1288,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "31935:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31944:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31950:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "31944:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "31935:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1304,
														"nodeType": "IfStatement",
														"src": "31931:103:0",
														"trueBody": {
															"id": 1303,
															"nodeType": "Block",
															"src": "31954:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1293,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1245,
																			"src": "31972:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1294,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31981:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1295,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31987:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "31981:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "31972:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1298,
																	"nodeType": "ExpressionStatement",
																	"src": "31972:17:0"
																},
																{
																	"expression": {
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1299,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "32007:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32017:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "32007:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1302,
																	"nodeType": "ExpressionStatement",
																	"src": "32007:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1305,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "32051:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32060:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32066:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "32060:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "32051:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1321,
														"nodeType": "IfStatement",
														"src": "32047:100:0",
														"trueBody": {
															"id": 1320,
															"nodeType": "Block",
															"src": "32069:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1310,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1245,
																			"src": "32087:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1311,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32096:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1312,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32102:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "32096:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "32087:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1315,
																	"nodeType": "ExpressionStatement",
																	"src": "32087:16:0"
																},
																{
																	"expression": {
																		"id": 1318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1316,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "32121:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32131:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "32121:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1319,
																	"nodeType": "ExpressionStatement",
																	"src": "32121:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1322,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "32164:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32173:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32179:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "32173:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "32164:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1338,
														"nodeType": "IfStatement",
														"src": "32160:100:0",
														"trueBody": {
															"id": 1337,
															"nodeType": "Block",
															"src": "32182:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1327,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1245,
																			"src": "32200:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32209:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32215:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "32209:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "32200:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1332,
																	"nodeType": "ExpressionStatement",
																	"src": "32200:16:0"
																},
																{
																	"expression": {
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1333,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "32234:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32244:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "32234:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1336,
																	"nodeType": "ExpressionStatement",
																	"src": "32234:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1339,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "32277:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32286:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32292:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "32286:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "32277:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1355,
														"nodeType": "IfStatement",
														"src": "32273:100:0",
														"trueBody": {
															"id": 1354,
															"nodeType": "Block",
															"src": "32295:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1344,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1245,
																			"src": "32313:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32322:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1346,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32328:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "32322:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "32313:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1349,
																	"nodeType": "ExpressionStatement",
																	"src": "32313:16:0"
																},
																{
																	"expression": {
																		"id": 1352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1350,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "32347:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32357:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "32347:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1353,
																	"nodeType": "ExpressionStatement",
																	"src": "32347:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1356,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "32390:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32399:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32405:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "32399:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "32390:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1366,
														"nodeType": "IfStatement",
														"src": "32386:66:0",
														"trueBody": {
															"id": 1365,
															"nodeType": "Block",
															"src": "32408:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1361,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "32426:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32436:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "32426:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1364,
																	"nodeType": "ExpressionStatement",
																	"src": "32426:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1368,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1251,
													"src": "32478:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1249,
												"id": 1369,
												"nodeType": "Return",
												"src": "32471:13:0"
											}
										]
									},
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "31450:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "31584:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31598:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "31590:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31589:15:0"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "31628:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31627:9:0"
									},
									"scope": 1551,
									"src": "31575:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "32726:170:0",
										"statements": [
											{
												"id": 1404,
												"nodeType": "UncheckedBlock",
												"src": "32736:154:0",
												"statements": [
													{
														"assignments": [
															1383
														],
														"declarations": [
															{
																"constant": false,
																"id": 1383,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "32768:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1404,
																"src": "32760:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1382,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "32760:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1387,
														"initialValue": {
															"arguments": [
																{
																	"id": 1385,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "32783:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1384,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1371,
																	1406
																],
																"referencedDeclaration": 1371,
																"src": "32777:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32777:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "32760:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1388,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1383,
																"src": "32810:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1390,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1377,
																						"src": "32837:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$508",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$508",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1389,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1550,
																					"src": "32820:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$508_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "32820:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1394,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1392,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "32850:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1393,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1383,
																						"src": "32856:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "32850:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1395,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1374,
																					"src": "32865:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "32850:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "32820:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32877:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "32820:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32873:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1401,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "32819:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "32810:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1381,
														"id": 1403,
														"nodeType": "Return",
														"src": "32803:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "32497:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "32654:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32668:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "32660:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "32684:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "32675:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$508",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1376,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1375,
														"name": "Rounding",
														"nameLocations": [
															"32675:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 508,
														"src": "32675:8:0"
													},
													"referencedDeclaration": 508,
													"src": "32675:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$508",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32659:34:0"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "32717:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32716:9:0"
									},
									"scope": 1551,
									"src": "32645:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "33216:600:0",
										"statements": [
											{
												"assignments": [
													1415
												],
												"declarations": [
													{
														"constant": false,
														"id": 1415,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "33234:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "33226:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1414,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33226:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1417,
												"initialValue": {
													"hexValue": "30",
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "33243:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33226:18:0"
											},
											{
												"id": 1489,
												"nodeType": "UncheckedBlock",
												"src": "33254:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1418,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "33282:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33291:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "33282:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33282:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1432,
														"nodeType": "IfStatement",
														"src": "33278:98:0",
														"trueBody": {
															"id": 1431,
															"nodeType": "Block",
															"src": "33300:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1423,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1409,
																			"src": "33318:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33328:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "33318:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1426,
																	"nodeType": "ExpressionStatement",
																	"src": "33318:13:0"
																},
																{
																	"expression": {
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1427,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "33349:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33359:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "33349:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1430,
																	"nodeType": "ExpressionStatement",
																	"src": "33349:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1433,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "33393:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33402:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "33393:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33407:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33393:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1447,
														"nodeType": "IfStatement",
														"src": "33389:95:0",
														"trueBody": {
															"id": 1446,
															"nodeType": "Block",
															"src": "33410:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1438,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1409,
																			"src": "33428:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33438:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "33428:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1441,
																	"nodeType": "ExpressionStatement",
																	"src": "33428:12:0"
																},
																{
																	"expression": {
																		"id": 1444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1442,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "33458:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33468:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "33458:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1445,
																	"nodeType": "ExpressionStatement",
																	"src": "33458:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1448,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "33501:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33510:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "33501:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33515:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33501:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1462,
														"nodeType": "IfStatement",
														"src": "33497:95:0",
														"trueBody": {
															"id": 1461,
															"nodeType": "Block",
															"src": "33518:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1453,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1409,
																			"src": "33536:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33546:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "33536:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1456,
																	"nodeType": "ExpressionStatement",
																	"src": "33536:12:0"
																},
																{
																	"expression": {
																		"id": 1459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1457,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "33566:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33576:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "33566:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1460,
																	"nodeType": "ExpressionStatement",
																	"src": "33566:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1463,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "33609:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33618:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "33609:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33623:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33609:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1477,
														"nodeType": "IfStatement",
														"src": "33605:95:0",
														"trueBody": {
															"id": 1476,
															"nodeType": "Block",
															"src": "33626:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1468,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1409,
																			"src": "33644:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33654:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "33644:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1471,
																	"nodeType": "ExpressionStatement",
																	"src": "33644:12:0"
																},
																{
																	"expression": {
																		"id": 1474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1472,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "33674:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33684:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "33674:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1475,
																	"nodeType": "ExpressionStatement",
																	"src": "33674:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1478,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "33717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33726:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "33717:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33730:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "33717:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1488,
														"nodeType": "IfStatement",
														"src": "33713:64:0",
														"trueBody": {
															"id": 1487,
															"nodeType": "Block",
															"src": "33733:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1483,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "33751:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33761:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "33751:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1486,
																	"nodeType": "ExpressionStatement",
																	"src": "33751:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1490,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1415,
													"src": "33803:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1413,
												"id": 1491,
												"nodeType": "Return",
												"src": "33796:13:0"
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "32902:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "33162:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33177:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "33169:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33168:15:0"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "33207:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33207:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33206:9:0"
									},
									"scope": 1551,
									"src": "33153:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "34053:177:0",
										"statements": [
											{
												"id": 1529,
												"nodeType": "UncheckedBlock",
												"src": "34063:161:0",
												"statements": [
													{
														"assignments": [
															1505
														],
														"declarations": [
															{
																"constant": false,
																"id": 1505,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "34095:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1529,
																"src": "34087:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1504,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "34087:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1509,
														"initialValue": {
															"arguments": [
																{
																	"id": 1507,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1496,
																	"src": "34111:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1506,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1493,
																	1531
																],
																"referencedDeclaration": 1493,
																"src": "34104:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34104:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "34087:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1510,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "34138:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1512,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1499,
																						"src": "34165:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$508",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$508",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1511,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1550,
																					"src": "34148:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$508_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1513,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "34148:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1521,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1519,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1514,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "34178:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1517,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1515,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1505,
																									"src": "34184:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1516,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "34194:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "34184:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1518,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "34183:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "34178:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1520,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1496,
																					"src": "34199:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "34178:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "34148:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "34211:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "34148:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "34207:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1526,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "34147:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "34138:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1503,
														"id": 1528,
														"nodeType": "Return",
														"src": "34131:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "33822:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "33980:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33995:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "33987:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "34011:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "34002:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$508",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1498,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1497,
														"name": "Rounding",
														"nameLocations": [
															"34002:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 508,
														"src": "34002:8:0"
													},
													"referencedDeclaration": 508,
													"src": "34002:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$508",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33986:34:0"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "34044:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34044:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34043:9:0"
									},
									"scope": 1551,
									"src": "33971:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1549,
										"nodeType": "Block",
										"src": "34428:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1542,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "34451:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$508",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$508",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34445:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1540,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "34445:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34445:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34463:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "34445:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34468:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "34445:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1539,
												"id": 1548,
												"nodeType": "Return",
												"src": "34438:31:0"
											}
										]
									},
									"documentation": {
										"id": 1532,
										"nodeType": "StructuredDocumentation",
										"src": "34236:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "34363:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "34389:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "34380:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$508",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1534,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1533,
														"name": "Rounding",
														"nameLocations": [
															"34380:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 508,
														"src": "34380:8:0"
													},
													"referencedDeclaration": 508,
													"src": "34380:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$508",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34379:19:0"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "34422:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1537,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34422:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34421:6:0"
									},
									"scope": 1551,
									"src": "34354:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "19558:14920:0",
							"usedErrors": [
								503
							],
							"usedEvents": []
						},
						{
							"id": 1552,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "34625:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1553,
								"nodeType": "StructuredDocumentation",
								"src": "34651:80:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1655,
							"linearizedBaseContracts": [
								1655
							],
							"name": "SignedMath",
							"nameLocation": "34740:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "34892:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1563,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "34909:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1564,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "34913:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "34909:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1567,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1558,
														"src": "34921:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "34909:13:0",
													"trueExpression": {
														"id": 1566,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1556,
														"src": "34917:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1562,
												"id": 1569,
												"nodeType": "Return",
												"src": "34902:20:0"
											}
										]
									},
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "34757:66:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "34837:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "34848:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "34841:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1555,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34841:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34858:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "34851:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1557,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34851:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34840:20:0"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "34884:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1560,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34884:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34883:8:0"
									},
									"scope": 1655,
									"src": "34828:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "35071:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1581,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "35088:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1582,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "35092:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "35088:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1585,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1576,
														"src": "35100:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "35088:13:0",
													"trueExpression": {
														"id": 1584,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "35096:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1580,
												"id": 1587,
												"nodeType": "Return",
												"src": "35081:20:0"
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "34935:67:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "35016:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "35027:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "35020:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1573,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "35020:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "35037:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "35030:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1575,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "35030:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35019:20:0"
									},
									"returnParameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "35063:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1578,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "35063:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35062:8:0"
									},
									"scope": 1655,
									"src": "35007:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "35313:162:0",
										"statements": [
											{
												"assignments": [
													1600
												],
												"declarations": [
													{
														"constant": false,
														"id": 1600,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "35382:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 1632,
														"src": "35375:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1599,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "35375:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1613,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1601,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "35387:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1602,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "35391:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "35387:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1604,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "35386:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1605,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1592,
																				"src": "35398:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1606,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1594,
																				"src": "35402:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "35398:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1608,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "35397:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35408:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "35397:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1611,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "35396:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "35386:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35375:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1614,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "35427:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1619,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1600,
																						"src": "35447:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1618,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "35439:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1617,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "35439:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1620,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "35439:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1621,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "35453:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "35439:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "35432:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1615,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "35432:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35432:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1624,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1592,
																				"src": "35461:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1625,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1594,
																				"src": "35465:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "35461:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1627,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "35460:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "35432:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1629,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "35431:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "35427:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1598,
												"id": 1631,
												"nodeType": "Return",
												"src": "35420:48:0"
											}
										]
									},
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "35114:126:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "35254:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "35269:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "35262:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1591,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "35262:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "35279:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "35272:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1593,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "35272:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35261:20:0"
									},
									"returnParameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "35305:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1596,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "35305:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35304:8:0"
									},
									"scope": 1655,
									"src": "35245:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "35619:158:0",
										"statements": [
											{
												"id": 1652,
												"nodeType": "UncheckedBlock",
												"src": "35629:142:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1643,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1636,
																			"src": "35744:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "35749:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "35744:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "35757:2:0",
																		"subExpression": {
																			"id": 1647,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1636,
																			"src": "35758:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "35744:15:0",
																	"trueExpression": {
																		"id": 1646,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1636,
																		"src": "35753:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35736:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1641,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "35736:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35736:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1640,
														"id": 1651,
														"nodeType": "Return",
														"src": "35729:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "35481:78:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "35573:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "35584:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "35577:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1635,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "35577:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35576:10:0"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "35610:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35610:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35609:9:0"
									},
									"scope": 1655,
									"src": "35564:213:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "34732:1047:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1656,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "35910:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1657,
								"nodeType": "StructuredDocumentation",
								"src": "35937:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1905,
							"linearizedBaseContracts": [
								1905
							],
							"name": "Strings",
							"nameLocation": "35980:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1660,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "36019:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1905,
									"src": "35994:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1658,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "35994:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1659,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "36032:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1663,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "36079:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1905,
									"src": "36056:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1661,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "36056:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1662,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "36096:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1664,
										"nodeType": "StructuredDocumentation",
										"src": "36105:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1670,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "36197:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "36234:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "36226:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "36249:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "36241:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36225:31:0"
									},
									"src": "36191:66:0"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "36429:627:0",
										"statements": [
											{
												"id": 1716,
												"nodeType": "UncheckedBlock",
												"src": "36439:611:0",
												"statements": [
													{
														"assignments": [
															1679
														],
														"declarations": [
															{
																"constant": false,
																"id": 1679,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "36471:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1716,
																"src": "36463:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1678,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "36463:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1686,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1682,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1673,
																		"src": "36491:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1680,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1551,
																		"src": "36480:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1551_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "36485:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1371,
																	"src": "36480:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36480:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "36500:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "36480:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "36463:38:0"
													},
													{
														"assignments": [
															1688
														],
														"declarations": [
															{
																"constant": false,
																"id": 1688,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "36529:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1716,
																"src": "36515:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1687,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "36515:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1693,
														"initialValue": {
															"arguments": [
																{
																	"id": 1691,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "36549:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "36538:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1689,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "36542:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36538:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "36515:41:0"
													},
													{
														"assignments": [
															1695
														],
														"declarations": [
															{
																"constant": false,
																"id": 1695,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "36578:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1716,
																"src": "36570:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1694,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "36570:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1696,
														"nodeType": "VariableDeclarationStatement",
														"src": "36570:11:0"
													},
													{
														"AST": {
															"nativeSrc": "36651:67:0",
															"nodeType": "YulBlock",
															"src": "36651:67:0",
															"statements": [
																{
																	"nativeSrc": "36669:35:0",
																	"nodeType": "YulAssignment",
																	"src": "36669:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "36680:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "36680:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "36692:2:0",
																						"nodeType": "YulLiteral",
																						"src": "36692:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "36696:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "36696:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "36688:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "36688:3:0"
																				},
																				"nativeSrc": "36688:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "36688:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "36676:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "36676:3:0"
																		},
																		"nativeSrc": "36676:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "36676:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "36669:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "36669:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1688,
																"isOffset": false,
																"isSlot": false,
																"src": "36680:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1679,
																"isOffset": false,
																"isSlot": false,
																"src": "36696:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1695,
																"isOffset": false,
																"isSlot": false,
																"src": "36669:3:0",
																"valueSize": 1
															}
														],
														"id": 1697,
														"nodeType": "InlineAssembly",
														"src": "36642:76:0"
													},
													{
														"body": {
															"id": 1712,
															"nodeType": "Block",
															"src": "36744:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 1700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "36762:5:0",
																		"subExpression": {
																			"id": 1699,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1695,
																			"src": "36762:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1701,
																	"nodeType": "ExpressionStatement",
																	"src": "36762:5:0"
																},
																{
																	"AST": {
																		"nativeSrc": "36845:86:0",
																		"nodeType": "YulBlock",
																		"src": "36845:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "36875:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "36875:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "36889:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "36889:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "36896:2:0",
																											"nodeType": "YulLiteral",
																											"src": "36896:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "36885:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "36885:3:0"
																									},
																									"nativeSrc": "36885:14:0",
																									"nodeType": "YulFunctionCall",
																									"src": "36885:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "36901:10:0",
																									"nodeType": "YulIdentifier",
																									"src": "36901:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "36880:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "36880:4:0"
																							},
																							"nativeSrc": "36880:32:0",
																							"nodeType": "YulFunctionCall",
																							"src": "36880:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "36867:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "36867:7:0"
																					},
																					"nativeSrc": "36867:46:0",
																					"nodeType": "YulFunctionCall",
																					"src": "36867:46:0"
																				},
																				"nativeSrc": "36867:46:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "36867:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1660,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "36901:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1695,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "36875:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1673,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "36889:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 1702,
																	"nodeType": "InlineAssembly",
																	"src": "36836:95:0"
																},
																{
																	"expression": {
																		"id": 1705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1703,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1673,
																			"src": "36948:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36957:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "36948:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1706,
																	"nodeType": "ExpressionStatement",
																	"src": "36948:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1707,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1673,
																			"src": "36981:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1708,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "36990:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "36981:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1711,
																	"nodeType": "IfStatement",
																	"src": "36977:21:0",
																	"trueBody": {
																		"id": 1710,
																		"nodeType": "Break",
																		"src": "36993:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36738:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1713,
														"nodeType": "WhileStatement",
														"src": "36731:282:0"
													},
													{
														"expression": {
															"id": 1714,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "37033:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1677,
														"id": 1715,
														"nodeType": "Return",
														"src": "37026:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "36263:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "36367:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "36384:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "36376:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36375:15:0"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "36414:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1675,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "36414:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36413:15:0"
									},
									"scope": 1905,
									"src": "36358:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1743,
										"nodeType": "Block",
										"src": "37232:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1729,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "37263:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37271:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "37263:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37281:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "37263:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37275:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1738,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1721,
																			"src": "37309:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1736,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1655,
																			"src": "37294:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$1655_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "37305:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1654,
																		"src": "37294:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37294:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1735,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1718,
																"src": "37285:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37285:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "37249:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1726,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "37249:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "37256:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "37249:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37249:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1725,
												"id": 1742,
												"nodeType": "Return",
												"src": "37242:75:0"
											}
										]
									},
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "37062:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "37165:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "37187:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "37180:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1720,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "37180:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37179:14:0"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "37217:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1723,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37217:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37216:15:0"
									},
									"scope": 1905,
									"src": "37156:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "37503:100:0",
										"statements": [
											{
												"id": 1762,
												"nodeType": "UncheckedBlock",
												"src": "37513:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1753,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1747,
																	"src": "37556:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1756,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1747,
																				"src": "37575:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1754,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1551,
																				"src": "37563:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1551_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "37568:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1493,
																			"src": "37563:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37563:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "37584:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "37563:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1752,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1764,
																	1847,
																	1867
																],
																"referencedDeclaration": 1847,
																"src": "37544:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37544:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1751,
														"id": 1761,
														"nodeType": "Return",
														"src": "37537:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1745,
										"nodeType": "StructuredDocumentation",
										"src": "37330:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "37438:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "37458:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "37450:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37449:15:0"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "37488:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1749,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37488:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37487:15:0"
									},
									"scope": 1905,
									"src": "37429:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1846,
										"nodeType": "Block",
										"src": "37816:435:0",
										"statements": [
											{
												"assignments": [
													1775
												],
												"declarations": [
													{
														"constant": false,
														"id": 1775,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "37834:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1846,
														"src": "37826:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1774,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37826:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1777,
												"initialValue": {
													"id": 1776,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1767,
													"src": "37847:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37826:26:0"
											},
											{
												"assignments": [
													1779
												],
												"declarations": [
													{
														"constant": false,
														"id": 1779,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "37875:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1846,
														"src": "37862:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1778,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "37862:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1788,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37894:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1783,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1769,
																	"src": "37898:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37894:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37907:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "37894:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "37884:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1780,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "37888:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37884:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37862:47:0"
											},
											{
												"expression": {
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1789,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "37919:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1791,
														"indexExpression": {
															"hexValue": "30",
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37926:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37919:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "37931:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "37919:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1794,
												"nodeType": "ExpressionStatement",
												"src": "37919:15:0"
											},
											{
												"expression": {
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1795,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "37944:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1797,
														"indexExpression": {
															"hexValue": "31",
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37944:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "37956:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "37944:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "37944:15:0"
											},
											{
												"body": {
													"id": 1829,
													"nodeType": "Block",
													"src": "38014:95:0",
													"statements": [
														{
															"expression": {
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1815,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1779,
																		"src": "38028:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1817,
																	"indexExpression": {
																		"id": 1816,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1802,
																		"src": "38035:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "38028:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1818,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1660,
																		"src": "38040:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1822,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1819,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1775,
																			"src": "38051:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "38064:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "38051:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "38040:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "38028:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1824,
															"nodeType": "ExpressionStatement",
															"src": "38028:40:0"
														},
														{
															"expression": {
																"id": 1827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1825,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1775,
																	"src": "38082:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38097:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "38082:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1828,
															"nodeType": "ExpressionStatement",
															"src": "38082:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1809,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1802,
														"src": "38002:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1810,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38006:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "38002:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1830,
												"initializationExpression": {
													"assignments": [
														1802
													],
													"declarations": [
														{
															"constant": false,
															"id": 1802,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "37982:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1830,
															"src": "37974:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1801,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "37974:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1808,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37986:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1804,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1769,
																"src": "37990:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37986:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37999:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "37986:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "37974:26:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "38009:3:0",
														"subExpression": {
															"id": 1812,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1802,
															"src": "38011:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1814,
													"nodeType": "ExpressionStatement",
													"src": "38009:3:0"
												},
												"nodeType": "ForStatement",
												"src": "37969:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1831,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1775,
														"src": "38122:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38136:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "38122:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1840,
												"nodeType": "IfStatement",
												"src": "38118:96:0",
												"trueBody": {
													"id": 1839,
													"nodeType": "Block",
													"src": "38139:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1835,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1767,
																		"src": "38189:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1836,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1769,
																		"src": "38196:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1834,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1670,
																	"src": "38160:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38160:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1838,
															"nodeType": "RevertStatement",
															"src": "38153:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1843,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1779,
															"src": "38237:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "38230:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1841,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "38230:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38230:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1773,
												"id": 1845,
												"nodeType": "Return",
												"src": "38223:21:0"
											}
										]
									},
									"documentation": {
										"id": 1765,
										"nodeType": "StructuredDocumentation",
										"src": "37609:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "37735:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "37755:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "37747:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "37770:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "37762:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37746:31:0"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "37801:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1771,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37801:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37800:15:0"
									},
									"scope": 1905,
									"src": "37726:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1866,
										"nodeType": "Block",
										"src": "38483:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1860,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1850,
																			"src": "38528:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "38520:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1858,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "38520:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "38520:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38512:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1856,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "38512:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38512:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1863,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1663,
															"src": "38536:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1855,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1764,
															1847,
															1867
														],
														"referencedDeclaration": 1847,
														"src": "38500:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38500:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1854,
												"id": 1865,
												"nodeType": "Return",
												"src": "38493:58:0"
											}
										]
									},
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "38257:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "38419:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "38439:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1867,
												"src": "38431:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38431:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38430:14:0"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1867,
												"src": "38468:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1852,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38468:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38467:15:0"
									},
									"scope": 1905,
									"src": "38410:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1903,
										"nodeType": "Block",
										"src": "38713:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1879,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "38736:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "38730:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1877,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "38730:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38730:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "38739:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "38730:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1884,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1872,
																		"src": "38755:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "38749:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1882,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "38749:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38749:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "38758:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "38749:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "38730:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1891,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1870,
																			"src": "38784:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "38778:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1889,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "38778:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "38778:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1888,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "38768:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38768:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1897,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1872,
																			"src": "38807:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "38801:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1895,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "38801:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "38801:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1894,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "38791:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38791:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "38768:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "38730:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1876,
												"id": 1902,
												"nodeType": "Return",
												"src": "38723:87:0"
											}
										]
									},
									"documentation": {
										"id": 1868,
										"nodeType": "StructuredDocumentation",
										"src": "38564:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "38644:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "38664:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "38650:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1869,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38650:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "38681:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "38667:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1871,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38667:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38649:34:0"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1904,
												"src": "38707:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1874,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38707:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38706:6:0"
									},
									"scope": 1905,
									"src": "38635:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "35972:2847:0",
							"usedErrors": [
								1670
							],
							"usedEvents": []
						},
						{
							"id": 1906,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "38962:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1908,
										"name": "Context",
										"nameLocations": [
											"39269:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "39269:7:0"
									},
									"id": 1909,
									"nodeType": "InheritanceSpecifier",
									"src": "39269:7:0"
								},
								{
									"baseName": {
										"id": 1910,
										"name": "ERC165",
										"nameLocations": [
											"39278:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 498,
										"src": "39278:6:0"
									},
									"id": 1911,
									"nodeType": "InheritanceSpecifier",
									"src": "39278:6:0"
								},
								{
									"baseName": {
										"id": 1912,
										"name": "IERC721",
										"nameLocations": [
											"39286:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 435,
										"src": "39286:7:0"
									},
									"id": 1913,
									"nodeType": "InheritanceSpecifier",
									"src": "39286:7:0"
								},
								{
									"baseName": {
										"id": 1914,
										"name": "IERC721Metadata",
										"nameLocations": [
											"39295:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 460,
										"src": "39295:15:0"
									},
									"id": 1915,
									"nodeType": "InheritanceSpecifier",
									"src": "39295:15:0"
								},
								{
									"baseName": {
										"id": 1916,
										"name": "IERC721Errors",
										"nameLocations": [
											"39312:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 263,
										"src": "39312:13:0"
									},
									"id": 1917,
									"nodeType": "InheritanceSpecifier",
									"src": "39312:13:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1907,
								"nodeType": "StructuredDocumentation",
								"src": "38994:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 2898,
							"linearizedBaseContracts": [
								2898,
								263,
								460,
								435,
								498,
								321,
								29
							],
							"name": "ERC721",
							"nameLocation": "39259:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1920,
									"libraryName": {
										"id": 1918,
										"name": "Strings",
										"nameLocations": [
											"39338:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1905,
										"src": "39338:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "39332:26:0",
									"typeName": {
										"id": 1919,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "39350:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1922,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "39397:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2898,
									"src": "39382:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1921,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "39382:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1924,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "39444:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2898,
									"src": "39429:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1923,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "39429:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1928,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "39502:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2898,
									"src": "39458:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1927,
										"keyName": "tokenId",
										"keyNameLocation": "39474:7:0",
										"keyType": {
											"id": 1925,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "39466:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "39458:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1926,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "39485:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1932,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "39558:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2898,
									"src": "39516:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1931,
										"keyName": "owner",
										"keyNameLocation": "39532:5:0",
										"keyType": {
											"id": 1929,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "39524:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "39516:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1930,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "39541:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1936,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "39618:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2898,
									"src": "39574:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1935,
										"keyName": "tokenId",
										"keyNameLocation": "39590:7:0",
										"keyType": {
											"id": 1933,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "39582:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "39574:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1934,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "39601:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1942,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "39708:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2898,
									"src": "39640:86:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1941,
										"keyName": "owner",
										"keyNameLocation": "39656:5:0",
										"keyType": {
											"id": 1937,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "39648:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "39640:59:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1940,
											"keyName": "operator",
											"keyNameLocation": "39681:8:0",
											"keyType": {
												"id": 1938,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "39673:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "39665:33:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1939,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "39693:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "39902:57:0",
										"statements": [
											{
												"expression": {
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1950,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1922,
														"src": "39912:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1951,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1945,
														"src": "39920:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "39912:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1953,
												"nodeType": "ExpressionStatement",
												"src": "39912:13:0"
											},
											{
												"expression": {
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1954,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1924,
														"src": "39935:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1955,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1947,
														"src": "39945:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "39935:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "39935:17:0"
											}
										]
									},
									"documentation": {
										"id": 1943,
										"nodeType": "StructuredDocumentation",
										"src": "39733:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 1959,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "39872:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "39858:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1944,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39858:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "39893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "39879:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1946,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39879:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39857:44:0"
									},
									"returnParameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39902:0:0"
									},
									"scope": 2898,
									"src": "39846:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										320,
										497
									],
									"body": {
										"id": 1989,
										"nodeType": "Block",
										"src": "40134:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1970,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "40163:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1972,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "40183:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$435_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$435_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 1971,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "40178:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "40178:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$435",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "40192:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "40178:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "40163:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1976,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "40219:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1978,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "40239:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$460_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$460_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 1977,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "40234:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "40234:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$460",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "40256:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "40234:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "40219:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "40163:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1985,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "40307:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1983,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "40283:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$2898_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "40289:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 497,
															"src": "40283:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40283:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "40163:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1969,
												"id": 1988,
												"nodeType": "Return",
												"src": "40144:175:0"
											}
										]
									},
									"documentation": {
										"id": 1960,
										"nodeType": "StructuredDocumentation",
										"src": "39965:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "40035:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1966,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1964,
												"name": "ERC165",
												"nameLocations": [
													"40102:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 498,
												"src": "40102:6:0"
											},
											{
												"id": 1965,
												"name": "IERC165",
												"nameLocations": [
													"40110:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 321,
												"src": "40110:7:0"
											}
										],
										"src": "40093:25:0"
									},
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "40060:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "40053:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1961,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "40053:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40052:20:0"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "40128:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1967,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40127:6:0"
									},
									"scope": 2898,
									"src": "40026:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										360
									],
									"body": {
										"id": 2017,
										"nodeType": "Block",
										"src": "40457:136:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1998,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1993,
														"src": "40471:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "40488:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "40480:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1999,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "40480:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2002,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40480:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "40471:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2012,
												"nodeType": "IfStatement",
												"src": "40467:87:0",
												"trueBody": {
													"id": 2011,
													"nodeType": "Block",
													"src": "40492:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "40540:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "40532:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2005,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "40532:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "40532:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2004,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 221,
																	"src": "40513:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40513:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2010,
															"nodeType": "RevertStatement",
															"src": "40506:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2013,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1932,
														"src": "40570:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2015,
													"indexExpression": {
														"id": 2014,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1993,
														"src": "40580:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "40570:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1997,
												"id": 2016,
												"nodeType": "Return",
												"src": "40563:23:0"
											}
										]
									},
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "40332:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 2018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "40394:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "40412:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "40404:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40403:15:0"
									},
									"returnParameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "40448:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40448:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40447:9:0"
									},
									"scope": 2898,
									"src": "40385:208:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										368
									],
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "40722:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2027,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "40753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2026,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2833,
														"src": "40739:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40739:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2025,
												"id": 2029,
												"nodeType": "Return",
												"src": "40732:29:0"
											}
										]
									},
									"documentation": {
										"id": 2019,
										"nodeType": "StructuredDocumentation",
										"src": "40599:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "40659:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "40667:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40666:17:0"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "40713:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40712:9:0"
									},
									"scope": 2898,
									"src": "40650:118:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										445
									],
									"body": {
										"id": 2039,
										"nodeType": "Block",
										"src": "40890:29:0",
										"statements": [
											{
												"expression": {
													"id": 2037,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1922,
													"src": "40907:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2036,
												"id": 2038,
												"nodeType": "Return",
												"src": "40900:12:0"
											}
										]
									},
									"documentation": {
										"id": 2032,
										"nodeType": "StructuredDocumentation",
										"src": "40774:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 2040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "40839:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40843:2:0"
									},
									"returnParameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "40875:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2034,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40875:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40874:15:0"
									},
									"scope": 2898,
									"src": "40830:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										451
									],
									"body": {
										"id": 2048,
										"nodeType": "Block",
										"src": "41045:31:0",
										"statements": [
											{
												"expression": {
													"id": 2046,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1924,
													"src": "41062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2045,
												"id": 2047,
												"nodeType": "Return",
												"src": "41055:14:0"
											}
										]
									},
									"documentation": {
										"id": 2041,
										"nodeType": "StructuredDocumentation",
										"src": "40925:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 2049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "40992:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40998:2:0"
									},
									"returnParameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "41030:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2043,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41030:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41029:15:0"
									},
									"scope": 2898,
									"src": "40983:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										459
									],
									"body": {
										"id": 2084,
										"nodeType": "Block",
										"src": "41221:176:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2058,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2052,
															"src": "41245:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2057,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2833,
														"src": "41231:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41231:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2060,
												"nodeType": "ExpressionStatement",
												"src": "41231:22:0"
											},
											{
												"assignments": [
													2062
												],
												"declarations": [
													{
														"constant": false,
														"id": 2062,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "41278:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2084,
														"src": "41264:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2061,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "41264:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2065,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2063,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2094,
														"src": "41288:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41288:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41264:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2068,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2062,
																		"src": "41321:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "41315:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2066,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "41315:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41315:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "41330:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "41315:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41339:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "41315:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 2081,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "41388:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "41315:75:0",
													"trueExpression": {
														"arguments": [
															{
																"id": 2076,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2062,
																"src": "41357:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2077,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2052,
																		"src": "41366:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "41374:8:0",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1718,
																	"src": "41366:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 2079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41366:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "41343:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 2073,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "41343:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "41350:6:0",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "41343:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 2080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41343:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2056,
												"id": 2083,
												"nodeType": "Return",
												"src": "41308:82:0"
											}
										]
									},
									"documentation": {
										"id": 2050,
										"nodeType": "StructuredDocumentation",
										"src": "41082:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 2085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "41151:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41168:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "41160:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41159:17:0"
									},
									"returnParameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "41206:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2054,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41206:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41205:15:0"
									},
									"scope": 2898,
									"src": "41142:255:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2093,
										"nodeType": "Block",
										"src": "41705:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "41722:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 2090,
												"id": 2092,
												"nodeType": "Return",
												"src": "41715:9:0"
											}
										]
									},
									"documentation": {
										"id": 2086,
										"nodeType": "StructuredDocumentation",
										"src": "41403:231:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 2094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "41648:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41656:2:0"
									},
									"returnParameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "41690:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2088,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41690:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41689:15:0"
									},
									"scope": 2898,
									"src": "41639:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										408
									],
									"body": {
										"id": 2109,
										"nodeType": "Block",
										"src": "41849:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2103,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2097,
															"src": "41868:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2104,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2099,
															"src": "41872:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2105,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "41881:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41881:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2102,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2701,
															2767
														],
														"referencedDeclaration": 2701,
														"src": "41859:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41859:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2108,
												"nodeType": "ExpressionStatement",
												"src": "41859:35:0"
											}
										]
									},
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "41737:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 2110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "41797:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41813:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "41805:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2099,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41825:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "41817:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41804:29:0"
									},
									"returnParameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41849:0:0"
									},
									"scope": 2898,
									"src": "41788:113:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										424
									],
									"body": {
										"id": 2126,
										"nodeType": "Block",
										"src": "42038:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2119,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2113,
															"src": "42062:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2118,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2833,
														"src": "42048:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42048:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2121,
												"nodeType": "ExpressionStatement",
												"src": "42048:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2123,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2113,
															"src": "42101:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2122,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2276,
														"src": "42088:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42088:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2117,
												"id": 2125,
												"nodeType": "Return",
												"src": "42081:28:0"
											}
										]
									},
									"documentation": {
										"id": 2111,
										"nodeType": "StructuredDocumentation",
										"src": "41907:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 2127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "41971:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41991:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "41983:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41982:17:0"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "42029:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42028:9:0"
									},
									"scope": 2898,
									"src": "41962:154:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										416
									],
									"body": {
										"id": 2142,
										"nodeType": "Block",
										"src": "42258:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2136,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "42287:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42287:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2138,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "42301:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2139,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2132,
															"src": "42311:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2135,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2804,
														"src": "42268:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42268:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2141,
												"nodeType": "ExpressionStatement",
												"src": "42268:52:0"
											}
										]
									},
									"documentation": {
										"id": 2128,
										"nodeType": "StructuredDocumentation",
										"src": "42122:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 2143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "42192:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "42218:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "42210:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "42233:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2143,
												"src": "42228:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42228:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42209:33:0"
									},
									"returnParameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42258:0:0"
									},
									"scope": 2898,
									"src": "42183:144:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										434
									],
									"body": {
										"id": 2159,
										"nodeType": "Block",
										"src": "42487:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2153,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "42504:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 2155,
														"indexExpression": {
															"id": 2154,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2146,
															"src": "42523:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "42504:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2157,
													"indexExpression": {
														"id": 2156,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2148,
														"src": "42530:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "42504:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2152,
												"id": 2158,
												"nodeType": "Return",
												"src": "42497:42:0"
											}
										]
									},
									"documentation": {
										"id": 2144,
										"nodeType": "StructuredDocumentation",
										"src": "42333:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "42402:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "42427:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "42419:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42419:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "42442:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "42434:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42434:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42418:33:0"
									},
									"returnParameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "42481:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "42481:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42480:6:0"
									},
									"scope": 2898,
									"src": "42393:153:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										400
									],
									"body": {
										"id": 2205,
										"nodeType": "Block",
										"src": "42688:498:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2170,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2165,
														"src": "42702:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "42716:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "42708:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2171,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "42708:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42708:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "42702:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2184,
												"nodeType": "IfStatement",
												"src": "42698:87:0",
												"trueBody": {
													"id": 2183,
													"nodeType": "Block",
													"src": "42720:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "42771:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "42763:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2177,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "42763:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42763:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2176,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 245,
																	"src": "42741:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42741:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2182,
															"nodeType": "RevertStatement",
															"src": "42734:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2186
												],
												"declarations": [
													{
														"constant": false,
														"id": 2186,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "43011:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2205,
														"src": "43003:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2185,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "43003:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2193,
												"initialValue": {
													"arguments": [
														{
															"id": 2188,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2165,
															"src": "43035:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2189,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "43039:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2190,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "43048:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43048:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2187,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2455,
														"src": "43027:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43027:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43003:58:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2194,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2186,
														"src": "43075:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2195,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2163,
														"src": "43092:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "43075:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2204,
												"nodeType": "IfStatement",
												"src": "43071:109:0",
												"trueBody": {
													"id": 2203,
													"nodeType": "Block",
													"src": "43098:82:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2198,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2163,
																		"src": "43140:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2199,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2167,
																		"src": "43146:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2200,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2186,
																		"src": "43155:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2197,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "43119:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43119:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2202,
															"nodeType": "RevertStatement",
															"src": "43112:57:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2161,
										"nodeType": "StructuredDocumentation",
										"src": "42552:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 2206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "42617:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "42638:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "42630:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42630:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42652:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "42644:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2206,
												"src": "42656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42629:43:0"
									},
									"returnParameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42688:0:0"
									},
									"scope": 2898,
									"src": "42608:578:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										390
									],
									"body": {
										"id": 2223,
										"nodeType": "Block",
										"src": "43328:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2217,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2209,
															"src": "43355:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2218,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "43361:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2219,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2213,
															"src": "43365:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43374:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2216,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2224,
															2250
														],
														"referencedDeclaration": 2250,
														"src": "43338:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43338:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2222,
												"nodeType": "ExpressionStatement",
												"src": "43338:39:0"
											}
										]
									},
									"documentation": {
										"id": 2207,
										"nodeType": "StructuredDocumentation",
										"src": "43192:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 2224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "43261:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "43286:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "43278:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43300:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "43292:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "43312:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "43304:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43304:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43277:43:0"
									},
									"returnParameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43328:0:0"
									},
									"scope": 2898,
									"src": "43252:132:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										380
									],
									"body": {
										"id": 2249,
										"nodeType": "Block",
										"src": "43553:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2237,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2227,
															"src": "43576:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2238,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "43582:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2239,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2231,
															"src": "43586:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2236,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2206,
														"src": "43563:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43563:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2241,
												"nodeType": "ExpressionStatement",
												"src": "43563:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2243,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2227,
															"src": "43627:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2244,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "43633:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2245,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2231,
															"src": "43637:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2246,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2233,
															"src": "43646:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2242,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2897,
														"src": "43604:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43604:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2248,
												"nodeType": "ExpressionStatement",
												"src": "43604:47:0"
											}
										]
									},
									"documentation": {
										"id": 2225,
										"nodeType": "StructuredDocumentation",
										"src": "43390:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 2250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "43459:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "43484:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "43476:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43476:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43498:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "43490:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "43510:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "43502:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "43532:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "43519:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2232,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43519:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43475:62:0"
									},
									"returnParameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43553:0:0"
									},
									"scope": 2898,
									"src": "43450:208:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "44247:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2258,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1928,
														"src": "44264:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2260,
													"indexExpression": {
														"id": 2259,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2253,
														"src": "44272:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "44264:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2257,
												"id": 2261,
												"nodeType": "Return",
												"src": "44257:23:0"
											}
										]
									},
									"documentation": {
										"id": 2251,
										"nodeType": "StructuredDocumentation",
										"src": "43664:503:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "44181:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44198:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "44190:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44189:17:0"
									},
									"returnParameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "44238:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44238:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44237:9:0"
									},
									"scope": 2898,
									"src": "44172:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2275,
										"nodeType": "Block",
										"src": "44482:48:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2271,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "44499:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2273,
													"indexExpression": {
														"id": 2272,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2266,
														"src": "44515:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "44499:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2270,
												"id": 2274,
												"nodeType": "Return",
												"src": "44492:31:0"
											}
										]
									},
									"documentation": {
										"id": 2264,
										"nodeType": "StructuredDocumentation",
										"src": "44293:105:0",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 2276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "44412:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44433:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "44425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44424:17:0"
									},
									"returnParameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2276,
												"src": "44473:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44472:9:0"
									},
									"scope": 2898,
									"src": "44403:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2311,
										"nodeType": "Block",
										"src": "44950:163:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2288,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "44979:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44998:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "44990:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2289,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "44990:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44990:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "44979:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2294,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2279,
																			"src": "45017:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2295,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2281,
																			"src": "45026:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "45017:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2298,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2279,
																				"src": "45054:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2299,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2281,
																				"src": "45061:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2297,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2160,
																			"src": "45037:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "45037:32:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "45017:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2303,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2283,
																				"src": "45086:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2302,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2276,
																			"src": "45073:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 2304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "45073:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2305,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2281,
																		"src": "45098:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "45073:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "45017:88:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2308,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "45016:90:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "44979:127:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2287,
												"id": 2310,
												"nodeType": "Return",
												"src": "44960:146:0"
											}
										]
									},
									"documentation": {
										"id": 2277,
										"nodeType": "StructuredDocumentation",
										"src": "44536:300:0",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 2312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "44850:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "44872:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "44864:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44864:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "44887:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "44879:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44879:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44904:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "44896:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44863:49:0"
									},
									"returnParameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "44944:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "44944:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44943:6:0"
									},
									"scope": 2898,
									"src": "44841:272:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2348,
										"nodeType": "Block",
										"src": "45644:271:0",
										"statements": [
											{
												"condition": {
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "45658:39:0",
													"subExpression": {
														"arguments": [
															{
																"id": 2323,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2315,
																"src": "45673:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2324,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2317,
																"src": "45680:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2325,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2319,
																"src": "45689:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2322,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2312,
															"src": "45659:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 2326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45659:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2347,
												"nodeType": "IfStatement",
												"src": "45654:255:0",
												"trueBody": {
													"id": 2346,
													"nodeType": "Block",
													"src": "45699:210:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2328,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2315,
																	"src": "45717:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "45734:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "45726:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2329,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "45726:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "45726:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "45717:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2344,
																"nodeType": "Block",
																"src": "45815:84:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2340,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2317,
																					"src": "45867:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2341,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2319,
																					"src": "45876:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2339,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 252,
																				"src": "45840:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 2342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "45840:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2343,
																		"nodeType": "RevertStatement",
																		"src": "45833:51:0"
																	}
																]
															},
															"id": 2345,
															"nodeType": "IfStatement",
															"src": "45713:186:0",
															"trueBody": {
																"id": 2338,
																"nodeType": "Block",
																"src": "45738:71:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2335,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2319,
																					"src": "45786:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2334,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 226,
																				"src": "45763:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 2336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "45763:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2337,
																		"nodeType": "RevertStatement",
																		"src": "45756:38:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2313,
										"nodeType": "StructuredDocumentation",
										"src": "45119:423:0",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 2349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "45556:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "45581:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "45573:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45573:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "45596:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "45588:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45588:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "45613:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "45605:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45605:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45572:49:0"
									},
									"returnParameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45644:0:0"
									},
									"scope": 2898,
									"src": "45547:368:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2364,
										"nodeType": "Block",
										"src": "46632:78:0",
										"statements": [
											{
												"id": 2363,
												"nodeType": "UncheckedBlock",
												"src": "46642:62:0",
												"statements": [
													{
														"expression": {
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2357,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1932,
																	"src": "46666:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2359,
																"indexExpression": {
																	"id": 2358,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2352,
																	"src": "46676:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "46666:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2360,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2354,
																"src": "46688:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "46666:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2362,
														"nodeType": "ExpressionStatement",
														"src": "46666:27:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2350,
										"nodeType": "StructuredDocumentation",
										"src": "45921:631:0",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 2365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "46566:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "46591:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "46583:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "46608:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "46600:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2353,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "46600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46582:32:0"
									},
									"returnParameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46632:0:0"
									},
									"scope": 2898,
									"src": "46557:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2454,
										"nodeType": "Block",
										"src": "47398:700:0",
										"statements": [
											{
												"assignments": [
													2378
												],
												"declarations": [
													{
														"constant": false,
														"id": 2378,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "47416:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2454,
														"src": "47408:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2377,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "47408:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2382,
												"initialValue": {
													"arguments": [
														{
															"id": 2380,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2370,
															"src": "47432:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2379,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2263,
														"src": "47423:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47423:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47408:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2383,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2372,
														"src": "47500:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47516:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47508:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2384,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "47508:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47508:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47500:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2396,
												"nodeType": "IfStatement",
												"src": "47496:86:0",
												"trueBody": {
													"id": 2395,
													"nodeType": "Block",
													"src": "47520:62:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2390,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2378,
																		"src": "47551:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2391,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2372,
																		"src": "47557:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2392,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2370,
																		"src": "47563:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2389,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2349,
																	"src": "47534:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 2393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47534:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2394,
															"nodeType": "ExpressionStatement",
															"src": "47534:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2397,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2378,
														"src": "47626:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47642:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47634:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2398,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "47634:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47634:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47626:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2424,
												"nodeType": "IfStatement",
												"src": "47622:256:0",
												"trueBody": {
													"id": 2423,
													"nodeType": "Block",
													"src": "47646:232:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2406,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "47759:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "47751:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2404,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "47751:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "47751:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2408,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2370,
																		"src": "47763:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2411,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "47780:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "47772:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2409,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "47772:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "47772:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 2413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "47784:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2403,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2701,
																		2767
																	],
																	"referencedDeclaration": 2767,
																	"src": "47742:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47742:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2415,
															"nodeType": "ExpressionStatement",
															"src": "47742:48:0"
														},
														{
															"id": 2422,
															"nodeType": "UncheckedBlock",
															"src": "47805:63:0",
															"statements": [
																{
																	"expression": {
																		"id": 2420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2416,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1932,
																				"src": "47833:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2418,
																			"indexExpression": {
																				"id": 2417,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2378,
																				"src": "47843:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "47833:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47852:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "47833:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2421,
																	"nodeType": "ExpressionStatement",
																	"src": "47833:20:0"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2425,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2368,
														"src": "47892:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47906:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47898:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2426,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "47898:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47898:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47892:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2439,
												"nodeType": "IfStatement",
												"src": "47888:107:0",
												"trueBody": {
													"id": 2438,
													"nodeType": "Block",
													"src": "47910:85:0",
													"statements": [
														{
															"id": 2437,
															"nodeType": "UncheckedBlock",
															"src": "47924:61:0",
															"statements": [
																{
																	"expression": {
																		"id": 2435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2431,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1932,
																				"src": "47952:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2433,
																			"indexExpression": {
																				"id": 2432,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2368,
																				"src": "47962:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "47952:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47969:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "47952:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2436,
																	"nodeType": "ExpressionStatement",
																	"src": "47952:18:0"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 2444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2440,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1928,
															"src": "48005:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2442,
														"indexExpression": {
															"id": 2441,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2370,
															"src": "48013:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "48005:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2443,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2368,
														"src": "48024:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48005:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2445,
												"nodeType": "ExpressionStatement",
												"src": "48005:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2447,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2378,
															"src": "48051:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2448,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2368,
															"src": "48057:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2449,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2370,
															"src": "48061:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2446,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "48042:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48042:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2451,
												"nodeType": "EmitStatement",
												"src": "48037:32:0"
											},
											{
												"expression": {
													"id": 2452,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2378,
													"src": "48087:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2376,
												"id": 2453,
												"nodeType": "Return",
												"src": "48080:11:0"
											}
										]
									},
									"documentation": {
										"id": 2366,
										"nodeType": "StructuredDocumentation",
										"src": "46716:582:0",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 2455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "47312:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "47328:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "47320:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47320:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "47340:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "47332:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "47357:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "47349:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47349:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47319:43:0"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "47389:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47389:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47388:9:0"
									},
									"scope": 2898,
									"src": "47303:795:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2504,
										"nodeType": "Block",
										"src": "48473:274:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2463,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2458,
														"src": "48487:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48501:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "48493:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2464,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "48493:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48493:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48487:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2477,
												"nodeType": "IfStatement",
												"src": "48483:87:0",
												"trueBody": {
													"id": 2476,
													"nodeType": "Block",
													"src": "48505:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "48556:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "48548:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2470,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "48548:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "48548:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2469,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 245,
																	"src": "48526:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48526:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2475,
															"nodeType": "RevertStatement",
															"src": "48519:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2479
												],
												"declarations": [
													{
														"constant": false,
														"id": 2479,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "48587:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2504,
														"src": "48579:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2478,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "48579:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2488,
												"initialValue": {
													"arguments": [
														{
															"id": 2481,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2458,
															"src": "48611:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2482,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2460,
															"src": "48615:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48632:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "48624:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2483,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "48624:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48624:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2480,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2455,
														"src": "48603:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48603:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "48579:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2489,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2479,
														"src": "48649:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48674:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "48666:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2490,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "48666:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "48666:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48649:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2503,
												"nodeType": "IfStatement",
												"src": "48645:96:0",
												"trueBody": {
													"id": 2502,
													"nodeType": "Block",
													"src": "48678:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2498,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "48727:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "48719:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2496,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "48719:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "48719:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2495,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "48699:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48699:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2501,
															"nodeType": "RevertStatement",
															"src": "48692:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2456,
										"nodeType": "StructuredDocumentation",
										"src": "48104:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 2505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "48429:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "48443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "48435:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48435:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48455:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "48447:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48434:29:0"
									},
									"returnParameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48473:0:0"
									},
									"scope": 2898,
									"src": "48420:327:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2519,
										"nodeType": "Block",
										"src": "49155:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2514,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2508,
															"src": "49175:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2515,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2510,
															"src": "49179:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49188:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2513,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2520,
															2546
														],
														"referencedDeclaration": 2546,
														"src": "49165:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49165:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2518,
												"nodeType": "ExpressionStatement",
												"src": "49165:26:0"
											}
										]
									},
									"documentation": {
										"id": 2506,
										"nodeType": "StructuredDocumentation",
										"src": "48753:340:0",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "49107:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49125:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "49117:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49117:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49137:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2520,
												"src": "49129:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49129:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49116:29:0"
									},
									"returnParameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49155:0:0"
									},
									"scope": 2898,
									"src": "49098:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2545,
										"nodeType": "Block",
										"src": "49503:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2531,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2523,
															"src": "49519:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2532,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2525,
															"src": "49523:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2530,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2505,
														"src": "49513:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49513:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2534,
												"nodeType": "ExpressionStatement",
												"src": "49513:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49572:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49564:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49564:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49564:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2523,
															"src": "49576:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2541,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2525,
															"src": "49580:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2542,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2527,
															"src": "49589:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2535,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2897,
														"src": "49541:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49541:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2544,
												"nodeType": "ExpressionStatement",
												"src": "49541:53:0"
											}
										]
									},
									"documentation": {
										"id": 2521,
										"nodeType": "StructuredDocumentation",
										"src": "49204:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "49428:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2523,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49446:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "49438:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49458:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "49450:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2527,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "49480:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "49467:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "49467:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49437:48:0"
									},
									"returnParameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49503:0:0"
									},
									"scope": 2898,
									"src": "49419:182:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2578,
										"nodeType": "Block",
										"src": "49968:186:0",
										"statements": [
											{
												"assignments": [
													2553
												],
												"declarations": [
													{
														"constant": false,
														"id": 2553,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "49986:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2578,
														"src": "49978:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2552,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "49978:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2565,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2557,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50018:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "50010:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2555,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "50010:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50010:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2559,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2549,
															"src": "50022:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50039:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "50031:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2560,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "50031:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50031:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2554,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2455,
														"src": "50002:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50002:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49978:64:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2566,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2553,
														"src": "50056:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50073:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2567,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "50073:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50073:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50056:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2577,
												"nodeType": "IfStatement",
												"src": "50052:96:0",
												"trueBody": {
													"id": 2576,
													"nodeType": "Block",
													"src": "50085:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2573,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2549,
																		"src": "50129:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2572,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "50106:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50106:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2575,
															"nodeType": "RevertStatement",
															"src": "50099:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2547,
										"nodeType": "StructuredDocumentation",
										"src": "49607:315:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "49936:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49950:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2579,
												"src": "49942:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49942:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49941:17:0"
									},
									"returnParameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49968:0:0"
									},
									"scope": 2898,
									"src": "49927:227:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2638,
										"nodeType": "Block",
										"src": "50549:389:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2589,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2584,
														"src": "50563:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50577:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50569:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2590,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "50569:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50569:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50563:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2603,
												"nodeType": "IfStatement",
												"src": "50559:87:0",
												"trueBody": {
													"id": 2602,
													"nodeType": "Block",
													"src": "50581:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2598,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "50632:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "50624:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2596,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "50624:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "50624:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2595,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 245,
																	"src": "50602:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50602:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2601,
															"nodeType": "RevertStatement",
															"src": "50595:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2605
												],
												"declarations": [
													{
														"constant": false,
														"id": 2605,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "50663:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2638,
														"src": "50655:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2604,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "50655:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2614,
												"initialValue": {
													"arguments": [
														{
															"id": 2607,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2584,
															"src": "50687:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2608,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2586,
															"src": "50691:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50708:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "50700:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2609,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "50700:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50700:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2606,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2455,
														"src": "50679:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50679:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50655:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2615,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2605,
														"src": "50725:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50750:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50742:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2616,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "50742:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50742:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50725:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2626,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2605,
															"src": "50827:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2627,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2582,
															"src": "50844:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "50827:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2636,
													"nodeType": "IfStatement",
													"src": "50823:109:0",
													"trueBody": {
														"id": 2635,
														"nodeType": "Block",
														"src": "50850:82:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 2630,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "50892:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2631,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2586,
																			"src": "50898:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2632,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2605,
																			"src": "50907:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2629,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 235,
																		"src": "50871:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 2633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "50871:50:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2634,
																"nodeType": "RevertStatement",
																"src": "50864:57:0"
															}
														]
													}
												},
												"id": 2637,
												"nodeType": "IfStatement",
												"src": "50721:211:0",
												"trueBody": {
													"id": 2625,
													"nodeType": "Block",
													"src": "50754:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2622,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "50798:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2621,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "50775:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50775:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2624,
															"nodeType": "RevertStatement",
															"src": "50768:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2580,
										"nodeType": "StructuredDocumentation",
										"src": "50160:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 2639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "50487:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "50505:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "50497:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50497:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2584,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "50519:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "50511:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50531:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2639,
												"src": "50523:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50496:43:0"
									},
									"returnParameters": {
										"id": 2588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50549:0:0"
									},
									"scope": 2898,
									"src": "50478:460:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2656,
										"nodeType": "Block",
										"src": "51946:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2650,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2642,
															"src": "51970:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2651,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2644,
															"src": "51976:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2652,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2646,
															"src": "51980:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51989:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2649,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2657,
															2683
														],
														"referencedDeclaration": 2683,
														"src": "51956:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51956:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2655,
												"nodeType": "ExpressionStatement",
												"src": "51956:36:0"
											}
										]
									},
									"documentation": {
										"id": 2640,
										"nodeType": "StructuredDocumentation",
										"src": "50944:922:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "51880:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "51902:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "51894:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "51916:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "51908:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "51928:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "51920:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51893:43:0"
									},
									"returnParameters": {
										"id": 2648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51946:0:0"
									},
									"scope": 2898,
									"src": "51871:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2682,
										"nodeType": "Block",
										"src": "52338:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2670,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2660,
															"src": "52358:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2671,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2662,
															"src": "52364:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2672,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2664,
															"src": "52368:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2669,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2639,
														"src": "52348:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52348:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2674,
												"nodeType": "ExpressionStatement",
												"src": "52348:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2676,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2660,
															"src": "52409:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2677,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2662,
															"src": "52415:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2678,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2664,
															"src": "52419:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2679,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2666,
															"src": "52428:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2675,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2897,
														"src": "52386:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52386:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2681,
												"nodeType": "ExpressionStatement",
												"src": "52386:47:0"
											}
										]
									},
									"documentation": {
										"id": 2658,
										"nodeType": "StructuredDocumentation",
										"src": "52005:226:0",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "52245:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "52267:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "52259:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "52281:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "52273:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52273:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "52293:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "52285:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52285:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "52315:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "52302:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2665,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "52302:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52258:62:0"
									},
									"returnParameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52338:0:0"
									},
									"scope": 2898,
									"src": "52236:204:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2700,
										"nodeType": "Block",
										"src": "52953:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2694,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2686,
															"src": "52972:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2695,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2688,
															"src": "52976:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2696,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2690,
															"src": "52985:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52991:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2693,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2701,
															2767
														],
														"referencedDeclaration": 2767,
														"src": "52963:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 2698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52963:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2699,
												"nodeType": "ExpressionStatement",
												"src": "52963:33:0"
											}
										]
									},
									"documentation": {
										"id": 2684,
										"nodeType": "StructuredDocumentation",
										"src": "52446:432:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 2701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "52892:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "52909:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "52901:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "52921:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "52913:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "52938:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "52930:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52900:43:0"
									},
									"returnParameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52953:0:0"
									},
									"scope": 2898,
									"src": "52883:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2766,
										"nodeType": "Block",
										"src": "53279:568:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2713,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2710,
														"src": "53345:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2714,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2708,
															"src": "53358:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53374:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "53366:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2715,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "53366:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53366:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "53358:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "53345:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2759,
												"nodeType": "IfStatement",
												"src": "53341:460:0",
												"trueBody": {
													"id": 2758,
													"nodeType": "Block",
													"src": "53378:423:0",
													"statements": [
														{
															"assignments": [
																2722
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2722,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "53400:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2758,
																	"src": "53392:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2721,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "53392:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2726,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2724,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2706,
																		"src": "53422:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2723,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2833,
																	"src": "53408:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53408:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "53392:38:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2727,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2708,
																			"src": "53558:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2730,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "53574:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "53566:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2728,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "53566:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "53566:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "53558:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2733,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2722,
																			"src": "53580:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2734,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2708,
																			"src": "53589:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "53580:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "53558:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "53597:30:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 2738,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2722,
																				"src": "53615:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2739,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2708,
																				"src": "53622:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2737,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2160,
																			"src": "53598:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "53598:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "53558:69:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2748,
															"nodeType": "IfStatement",
															"src": "53554:142:0",
															"trueBody": {
																"id": 2747,
																"nodeType": "Block",
																"src": "53629:67:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2744,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2708,
																					"src": "53676:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2743,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 257,
																				"src": "53654:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 2745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "53654:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2746,
																		"nodeType": "RevertStatement",
																		"src": "53647:34:0"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 2749,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2710,
																"src": "53714:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2757,
															"nodeType": "IfStatement",
															"src": "53710:81:0",
															"trueBody": {
																"id": 2756,
																"nodeType": "Block",
																"src": "53725:66:0",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 2751,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2722,
																					"src": "53757:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2752,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2704,
																					"src": "53764:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2753,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2706,
																					"src": "53768:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2750,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 343,
																				"src": "53748:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 2754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "53748:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2755,
																		"nodeType": "EmitStatement",
																		"src": "53743:33:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 2764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2760,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "53811:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2762,
														"indexExpression": {
															"id": 2761,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2706,
															"src": "53827:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "53811:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2763,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2704,
														"src": "53838:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53811:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2765,
												"nodeType": "ExpressionStatement",
												"src": "53811:29:0"
											}
										]
									},
									"documentation": {
										"id": 2702,
										"nodeType": "StructuredDocumentation",
										"src": "53009:171:0",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 2767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "53194:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2704,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "53211:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "53203:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "53223:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "53215:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "53240:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "53232:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53232:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2710,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "53251:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2767,
												"src": "53246:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2709,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "53246:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53202:59:0"
									},
									"returnParameters": {
										"id": 2712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53279:0:0"
									},
									"scope": 2898,
									"src": "53185:662:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2803,
										"nodeType": "Block",
										"src": "54149:219:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2777,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2772,
														"src": "54163:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54183:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "54175:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2778,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "54175:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54175:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54163:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2788,
												"nodeType": "IfStatement",
												"src": "54159:91:0",
												"trueBody": {
													"id": 2787,
													"nodeType": "Block",
													"src": "54187:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2784,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2772,
																		"src": "54230:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2783,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "54208:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54208:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2786,
															"nodeType": "RevertStatement",
															"src": "54201:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2789,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "54259:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2792,
															"indexExpression": {
																"id": 2790,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2770,
																"src": "54278:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "54259:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2793,
														"indexExpression": {
															"id": 2791,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2772,
															"src": "54285:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "54259:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2794,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2774,
														"src": "54297:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "54259:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2796,
												"nodeType": "ExpressionStatement",
												"src": "54259:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2798,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2770,
															"src": "54335:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2799,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2772,
															"src": "54342:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2800,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2774,
															"src": "54352:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2797,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "54320:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54320:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2802,
												"nodeType": "EmitStatement",
												"src": "54315:46:0"
											}
										]
									},
									"documentation": {
										"id": 2768,
										"nodeType": "StructuredDocumentation",
										"src": "53853:198:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 2804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "54065:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "54092:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "54084:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "54107:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "54099:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54099:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2774,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "54122:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2804,
												"src": "54117:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "54117:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54083:48:0"
									},
									"returnParameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54149:0:0"
									},
									"scope": 2898,
									"src": "54056:312:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2832,
										"nodeType": "Block",
										"src": "54675:169:0",
										"statements": [
											{
												"assignments": [
													2813
												],
												"declarations": [
													{
														"constant": false,
														"id": 2813,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "54693:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2832,
														"src": "54685:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2812,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "54685:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2817,
												"initialValue": {
													"arguments": [
														{
															"id": 2815,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2807,
															"src": "54710:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2814,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2263,
														"src": "54701:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54701:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "54685:33:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2818,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2813,
														"src": "54732:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54749:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "54741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2819,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "54741:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54741:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54732:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2829,
												"nodeType": "IfStatement",
												"src": "54728:88:0",
												"trueBody": {
													"id": 2828,
													"nodeType": "Block",
													"src": "54753:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2825,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2807,
																		"src": "54797:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2824,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "54774:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54774:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2827,
															"nodeType": "RevertStatement",
															"src": "54767:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2830,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2813,
													"src": "54832:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2811,
												"id": 2831,
												"nodeType": "Return",
												"src": "54825:12:0"
											}
										]
									},
									"documentation": {
										"id": 2805,
										"nodeType": "StructuredDocumentation",
										"src": "54374:224:0",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 2833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "54612:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "54634:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2833,
												"src": "54626:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54625:17:0"
									},
									"returnParameters": {
										"id": 2811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2833,
												"src": "54666:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54665:9:0"
									},
									"scope": 2898,
									"src": "54603:241:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2896,
										"nodeType": "Block",
										"src": "55485:680:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2845,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2838,
																"src": "55499:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "55502:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "55499:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55507:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "55499:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55516:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55499:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2895,
												"nodeType": "IfStatement",
												"src": "55495:664:0",
												"trueBody": {
													"id": 2894,
													"nodeType": "Block",
													"src": "55519:640:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2874,
																		"nodeType": "Block",
																		"src": "55633:162:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2867,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2863,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2861,
																						"src": "55655:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2864,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 477,
																								"src": "55665:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$477_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 2865,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "55681:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 476,
																							"src": "55665:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2866,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "55698:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "55665:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "55655:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2873,
																				"nodeType": "IfStatement",
																				"src": "55651:130:0",
																				"trueBody": {
																					"id": 2872,
																					"nodeType": "Block",
																					"src": "55708:73:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2869,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2838,
																										"src": "55759:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2868,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 245,
																									"src": "55737:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2870,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "55737:25:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2871,
																							"nodeType": "RevertStatement",
																							"src": "55730:32:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2875,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2862,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2861,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "55625:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2875,
																				"src": "55618:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2860,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "55618:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "55617:15:0"
																	},
																	"src": "55609:186:0"
																},
																{
																	"block": {
																		"id": 2891,
																		"nodeType": "Block",
																		"src": "55824:325:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2882,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2879,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2877,
																							"src": "55846:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2880,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "55853:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "55846:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2881,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "55863:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "55846:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2889,
																					"nodeType": "Block",
																					"src": "55945:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "56031:86:0",
																								"nodeType": "YulBlock",
																								"src": "56031:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "56068:2:0",
																															"nodeType": "YulLiteral",
																															"src": "56068:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "56072:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "56072:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "56064:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "56064:3:0"
																													},
																													"nativeSrc": "56064:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "56064:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "56087:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "56087:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "56081:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "56081:5:0"
																													},
																													"nativeSrc": "56081:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "56081:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "56057:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "56057:6:0"
																											},
																											"nativeSrc": "56057:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "56057:38:0"
																										},
																										"nativeSrc": "56057:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "56057:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 2877,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "56072:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2877,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "56087:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 2888,
																							"nodeType": "InlineAssembly",
																							"src": "56022:95:0"
																						}
																					]
																				},
																				"id": 2890,
																				"nodeType": "IfStatement",
																				"src": "55842:293:0",
																				"trueBody": {
																					"id": 2887,
																					"nodeType": "Block",
																					"src": "55866:73:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2884,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2838,
																										"src": "55917:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2883,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 245,
																									"src": "55895:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2885,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "55895:25:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2886,
																							"nodeType": "RevertStatement",
																							"src": "55888:32:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2892,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2878,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2877,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "55816:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2892,
																				"src": "55803:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2876,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "55803:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "55802:21:0"
																	},
																	"src": "55796:353:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2854,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "55574:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "55574:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2856,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2836,
																		"src": "55588:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2857,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2840,
																		"src": "55594:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2858,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2842,
																		"src": "55603:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2851,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2838,
																				"src": "55553:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2850,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 477,
																			"src": "55537:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$477_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 2852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "55537:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$477",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 2853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "55557:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 476,
																	"src": "55537:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55537:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2893,
															"nodeType": "TryStatement",
															"src": "55533:616:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2834,
										"nodeType": "StructuredDocumentation",
										"src": "54850:528:0",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 2897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "55392:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2836,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "55423:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "55415:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "55437:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "55429:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55429:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "55449:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "55441:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "55471:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2897,
												"src": "55458:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2841,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "55458:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55414:62:0"
									},
									"returnParameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55485:0:0"
									},
									"scope": 2898,
									"src": "55383:782:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3690,
							"src": "39241:16926:0",
							"usedErrors": [
								221,
								226,
								235,
								240,
								245,
								252,
								257,
								262
							],
							"usedEvents": [
								334,
								343,
								352
							]
						},
						{
							"id": 2899,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "56354:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2901,
										"name": "IERC721",
										"nameLocations": [
											"56548:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 435,
										"src": "56548:7:0"
									},
									"id": 2902,
									"nodeType": "InheritanceSpecifier",
									"src": "56548:7:0"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2900,
								"nodeType": "StructuredDocumentation",
								"src": "56380:136:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 2927,
							"linearizedBaseContracts": [
								2927,
								435,
								321
							],
							"name": "IERC721Enumerable",
							"nameLocation": "56527:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2903,
										"nodeType": "StructuredDocumentation",
										"src": "56562:82:0",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 2908,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "56658:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56669:2:0"
									},
									"returnParameters": {
										"id": 2907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "56695:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56694:9:0"
									},
									"scope": 2927,
									"src": "56649:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2909,
										"nodeType": "StructuredDocumentation",
										"src": "56710:171:0",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 2918,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "56895:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "56923:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "56915:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "56938:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "56930:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56930:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56914:30:0"
									},
									"returnParameters": {
										"id": 2917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2918,
												"src": "56968:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56967:9:0"
									},
									"scope": 2927,
									"src": "56886:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2919,
										"nodeType": "StructuredDocumentation",
										"src": "56983:164:0",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 2926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "57161:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2921,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "57182:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "57174:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57173:15:0"
									},
									"returnParameters": {
										"id": 2925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "57212:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57211:9:0"
									},
									"scope": 2927,
									"src": "57152:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3690,
							"src": "56517:706:0",
							"usedErrors": [],
							"usedEvents": [
								334,
								343,
								352
							]
						},
						{
							"id": 2928,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "57408:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2930,
										"name": "ERC721",
										"nameLocations": [
											"57865:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2898,
										"src": "57865:6:0"
									},
									"id": 2931,
									"nodeType": "InheritanceSpecifier",
									"src": "57865:6:0"
								},
								{
									"baseName": {
										"id": 2932,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"57873:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2927,
										"src": "57873:17:0"
									},
									"id": 2933,
									"nodeType": "InheritanceSpecifier",
									"src": "57873:17:0"
								}
							],
							"canonicalName": "ERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2929,
								"nodeType": "StructuredDocumentation",
								"src": "57436:390:0",
								"text": " @dev This implements an optional extension of {ERC721} defined in the EIP that adds enumerability\n of all the token ids in the contract as well as all token ids owned by each account.\n CAUTION: `ERC721` extensions that implement custom `balanceOf` logic, such as `ERC721Consecutive`,\n interfere with enumerability and should not be used together with `ERC721Enumerable`."
							},
							"fullyImplemented": true,
							"id": 3304,
							"linearizedBaseContracts": [
								3304,
								2927,
								2898,
								263,
								460,
								435,
								498,
								321,
								29
							],
							"name": "ERC721Enumerable",
							"nameLocation": "57845:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2939,
									"mutability": "mutable",
									"name": "_ownedTokens",
									"nameLocation": "57965:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3304,
									"src": "57897:80:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 2938,
										"keyName": "owner",
										"keyNameLocation": "57913:5:0",
										"keyType": {
											"id": 2934,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "57905:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "57897:59:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2937,
											"keyName": "index",
											"keyNameLocation": "57938:5:0",
											"keyType": {
												"id": 2935,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "57930:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "57922:33:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2936,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "57947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2943,
									"mutability": "mutable",
									"name": "_ownedTokensIndex",
									"nameLocation": "58027:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 3304,
									"src": "57983:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2942,
										"keyName": "tokenId",
										"keyNameLocation": "57999:7:0",
										"keyType": {
											"id": 2940,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "57991:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "57983:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2941,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "58010:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2946,
									"mutability": "mutable",
									"name": "_allTokens",
									"nameLocation": "58069:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 3304,
									"src": "58051:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 2944,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "58051:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2945,
										"nodeType": "ArrayTypeName",
										"src": "58051:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2950,
									"mutability": "mutable",
									"name": "_allTokensIndex",
									"nameLocation": "58129:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3304,
									"src": "58085:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2949,
										"keyName": "tokenId",
										"keyNameLocation": "58101:7:0",
										"keyType": {
											"id": 2947,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "58093:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "58085:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2948,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "58112:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2951,
										"nodeType": "StructuredDocumentation",
										"src": "58151:168:0",
										"text": " @dev An `owner`'s token query was out of bounds for `index`.\n NOTE: The owner being `address(0)` indicates a global out of bounds index."
									},
									"errorSelector": "a57d13dc",
									"id": 2957,
									"name": "ERC721OutOfBoundsIndex",
									"nameLocation": "58330:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "58361:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2957,
												"src": "58353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2955,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "58376:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2957,
												"src": "58368:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58352:30:0"
									},
									"src": "58324:59:0"
								},
								{
									"documentation": {
										"id": 2958,
										"nodeType": "StructuredDocumentation",
										"src": "58389:50:0",
										"text": " @dev Batch mint is not allowed."
									},
									"errorSelector": "59171fc1",
									"id": 2960,
									"name": "ERC721EnumerableForbiddenBatchMint",
									"nameLocation": "58450:34:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58484:2:0"
									},
									"src": "58444:43:0"
								},
								{
									"baseFunctions": [
										320,
										1990
									],
									"body": {
										"id": 2983,
										"nodeType": "Block",
										"src": "58662:114:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2971,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2963,
															"src": "58679:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2973,
																		"name": "IERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2927,
																		"src": "58699:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$2927_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$2927_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	],
																	"id": 2972,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "58694:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58694:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$2927",
																	"typeString": "type(contract IERC721Enumerable)"
																}
															},
															"id": 2975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "58718:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "58694:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "58679:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 2979,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2963,
																"src": "58757:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2977,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "58733:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$3304_$",
																	"typeString": "type(contract super ERC721Enumerable)"
																}
															},
															"id": 2978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58739:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1990,
															"src": "58733:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 2980,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "58733:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "58679:90:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2970,
												"id": 2982,
												"nodeType": "Return",
												"src": "58672:97:0"
											}
										]
									},
									"documentation": {
										"id": 2961,
										"nodeType": "StructuredDocumentation",
										"src": "58493:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "58563:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2967,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2965,
												"name": "IERC165",
												"nameLocations": [
													"58630:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 321,
												"src": "58630:7:0"
											},
											{
												"id": 2966,
												"name": "ERC721",
												"nameLocations": [
													"58639:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2898,
												"src": "58639:6:0"
											}
										],
										"src": "58621:25:0"
									},
									"parameters": {
										"id": 2964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2963,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "58588:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2984,
												"src": "58581:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2962,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "58581:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58580:20:0"
									},
									"returnParameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2984,
												"src": "58656:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2968,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "58656:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58655:6:0"
									},
									"scope": 3304,
									"src": "58554:222:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2918
									],
									"body": {
										"id": 3012,
										"nodeType": "Block",
										"src": "58952:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2994,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2989,
														"src": "58966:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [
															{
																"id": 2996,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2987,
																"src": "58985:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2995,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "58975:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 2997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "58975:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "58966:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3005,
												"nodeType": "IfStatement",
												"src": "58962:99:0",
												"trueBody": {
													"id": 3004,
													"nodeType": "Block",
													"src": "58993:68:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3000,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2987,
																		"src": "59037:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3001,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2989,
																		"src": "59044:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2999,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2957,
																	"src": "59014:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 3002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59014:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3003,
															"nodeType": "RevertStatement",
															"src": "59007:43:0"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 3006,
															"name": "_ownedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2939,
															"src": "59077:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 3008,
														"indexExpression": {
															"id": 3007,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2987,
															"src": "59090:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "59077:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 3010,
													"indexExpression": {
														"id": 3009,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2989,
														"src": "59097:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "59077:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2993,
												"id": 3011,
												"nodeType": "Return",
												"src": "59070:33:0"
											}
										]
									},
									"documentation": {
										"id": 2985,
										"nodeType": "StructuredDocumentation",
										"src": "58782:68:0",
										"text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
									},
									"functionSelector": "2f745c59",
									"id": 3013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "58864:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2987,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "58892:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3013,
												"src": "58884:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2989,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "58907:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3013,
												"src": "58899:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58883:30:0"
									},
									"returnParameters": {
										"id": 2993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3013,
												"src": "58943:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58942:9:0"
									},
									"scope": 3304,
									"src": "58855:255:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2908
									],
									"body": {
										"id": 3022,
										"nodeType": "Block",
										"src": "59242:41:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3019,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2946,
														"src": "59259:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 3020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "59270:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "59259:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3018,
												"id": 3021,
												"nodeType": "Return",
												"src": "59252:24:0"
											}
										]
									},
									"documentation": {
										"id": 3014,
										"nodeType": "StructuredDocumentation",
										"src": "59116:60:0",
										"text": " @dev See {IERC721Enumerable-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 3023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "59190:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59201:2:0"
									},
									"returnParameters": {
										"id": 3018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3023,
												"src": "59233:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59232:9:0"
									},
									"scope": 3304,
									"src": "59181:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2926
									],
									"body": {
										"id": 3049,
										"nodeType": "Block",
										"src": "59430:151:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3031,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3026,
														"src": "59444:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3032,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3023,
															"src": "59453:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 3033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "59453:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "59444:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3044,
												"nodeType": "IfStatement",
												"src": "59440:101:0",
												"trueBody": {
													"id": 3043,
													"nodeType": "Block",
													"src": "59468:73:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3038,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "59520:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "59512:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3036,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "59512:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "59512:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3040,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3026,
																		"src": "59524:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3035,
																	"name": "ERC721OutOfBoundsIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2957,
																	"src": "59489:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 3041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59489:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3042,
															"nodeType": "RevertStatement",
															"src": "59482:48:0"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 3045,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2946,
														"src": "59557:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 3047,
													"indexExpression": {
														"id": 3046,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3026,
														"src": "59568:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "59557:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3030,
												"id": 3048,
												"nodeType": "Return",
												"src": "59550:24:0"
											}
										]
									},
									"documentation": {
										"id": 3024,
										"nodeType": "StructuredDocumentation",
										"src": "59289:61:0",
										"text": " @dev See {IERC721Enumerable-tokenByIndex}."
									},
									"functionSelector": "4f6ccce7",
									"id": 3050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "59364:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3026,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "59385:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3050,
												"src": "59377:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59376:15:0"
									},
									"returnParameters": {
										"id": 3030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3050,
												"src": "59421:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59420:9:0"
									},
									"scope": 3304,
									"src": "59355:226:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2455
									],
									"body": {
										"id": 3118,
										"nodeType": "Block",
										"src": "59741:521:0",
										"statements": [
											{
												"assignments": [
													3064
												],
												"declarations": [
													{
														"constant": false,
														"id": 3064,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "59759:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 3118,
														"src": "59751:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3063,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "59751:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3071,
												"initialValue": {
													"arguments": [
														{
															"id": 3067,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3053,
															"src": "59789:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3068,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3055,
															"src": "59793:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3069,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3057,
															"src": "59802:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3065,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "59775:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$3304_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 3066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59781:7:0",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2455,
														"src": "59775:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 3070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59775:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59751:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3072,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3064,
														"src": "59822:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "59847:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "59839:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3073,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "59839:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "59839:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "59822:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 3085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3083,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3064,
															"src": "59926:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 3084,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3053,
															"src": "59943:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "59926:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 3092,
													"nodeType": "IfStatement",
													"src": "59922:106:0",
													"trueBody": {
														"id": 3091,
														"nodeType": "Block",
														"src": "59947:81:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 3087,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3064,
																			"src": "59994:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 3088,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3055,
																			"src": "60009:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3086,
																		"name": "_removeTokenFromOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3230,
																		"src": "59961:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 3089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "59961:56:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 3090,
																"nodeType": "ExpressionStatement",
																"src": "59961:56:0"
															}
														]
													}
												},
												"id": 3093,
												"nodeType": "IfStatement",
												"src": "59818:210:0",
												"trueBody": {
													"id": 3082,
													"nodeType": "Block",
													"src": "59851:65:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3079,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3055,
																		"src": "59897:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3078,
																	"name": "_addTokenToAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3170,
																	"src": "59865:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 3080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59865:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3081,
															"nodeType": "ExpressionStatement",
															"src": "59865:40:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3094,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3053,
														"src": "60041:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "60055:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "60047:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3095,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "60047:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "60047:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "60041:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 3107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3105,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3064,
															"src": "60139:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 3106,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3053,
															"src": "60156:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "60139:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 3114,
													"nodeType": "IfStatement",
													"src": "60135:90:0",
													"trueBody": {
														"id": 3113,
														"nodeType": "Block",
														"src": "60160:65:0",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 3109,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3053,
																			"src": "60202:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 3110,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3055,
																			"src": "60206:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3108,
																		"name": "_addTokenToOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3150,
																		"src": "60174:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 3111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "60174:40:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 3112,
																"nodeType": "ExpressionStatement",
																"src": "60174:40:0"
															}
														]
													}
												},
												"id": 3115,
												"nodeType": "IfStatement",
												"src": "60037:188:0",
												"trueBody": {
													"id": 3104,
													"nodeType": "Block",
													"src": "60059:70:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3101,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3055,
																		"src": "60110:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3100,
																	"name": "_removeTokenFromAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3278,
																	"src": "60073:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 3102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60073:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3103,
															"nodeType": "ExpressionStatement",
															"src": "60073:45:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3116,
													"name": "previousOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3064,
													"src": "60242:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3062,
												"id": 3117,
												"nodeType": "Return",
												"src": "60235:20:0"
											}
										]
									},
									"documentation": {
										"id": 3051,
										"nodeType": "StructuredDocumentation",
										"src": "59587:45:0",
										"text": " @dev See {ERC721-_update}."
									},
									"id": 3119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "59646:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3059,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "59714:8:0"
									},
									"parameters": {
										"id": 3058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3053,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "59662:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3119,
												"src": "59654:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3055,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "59674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3119,
												"src": "59666:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3057,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "59691:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3119,
												"src": "59683:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59653:43:0"
									},
									"returnParameters": {
										"id": 3062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3119,
												"src": "59732:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59731:9:0"
									},
									"scope": 3304,
									"src": "59637:625:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3149,
										"nodeType": "Block",
										"src": "60630:140:0",
										"statements": [
											{
												"assignments": [
													3128
												],
												"declarations": [
													{
														"constant": false,
														"id": 3128,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "60648:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3149,
														"src": "60640:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3127,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "60640:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3134,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 3130,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3122,
																"src": "60667:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3129,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "60657:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 3131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "60657:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 3132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "60673:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "60657:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "60640:34:0"
											},
											{
												"expression": {
													"id": 3141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3135,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2939,
																"src": "60684:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 3138,
															"indexExpression": {
																"id": 3136,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3122,
																"src": "60697:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "60684:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3139,
														"indexExpression": {
															"id": 3137,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3128,
															"src": "60701:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "60684:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3140,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3124,
														"src": "60711:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "60684:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3142,
												"nodeType": "ExpressionStatement",
												"src": "60684:34:0"
											},
											{
												"expression": {
													"id": 3147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3143,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2943,
															"src": "60728:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3145,
														"indexExpression": {
															"id": 3144,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3124,
															"src": "60746:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "60728:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3146,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3128,
														"src": "60757:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "60728:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3148,
												"nodeType": "ExpressionStatement",
												"src": "60728:35:0"
											}
										]
									},
									"documentation": {
										"id": 3120,
										"nodeType": "StructuredDocumentation",
										"src": "60268:283:0",
										"text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
									},
									"id": 3150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToOwnerEnumeration",
									"nameLocation": "60565:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3122,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "60601:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "60593:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3124,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "60613:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3150,
												"src": "60605:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60605:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60592:29:0"
									},
									"returnParameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60630:0:0"
									},
									"scope": 3304,
									"src": "60556:214:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3169,
										"nodeType": "Block",
										"src": "61031:95:0",
										"statements": [
											{
												"expression": {
													"id": 3161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3156,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2950,
															"src": "61041:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3158,
														"indexExpression": {
															"id": 3157,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3153,
															"src": "61057:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "61041:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3159,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2946,
															"src": "61068:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 3160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "61079:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "61068:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "61041:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3162,
												"nodeType": "ExpressionStatement",
												"src": "61041:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3166,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3153,
															"src": "61111:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3163,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2946,
															"src": "61095:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 3165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "61106:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "61095:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 3167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61095:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3168,
												"nodeType": "ExpressionStatement",
												"src": "61095:24:0"
											}
										]
									},
									"documentation": {
										"id": 3151,
										"nodeType": "StructuredDocumentation",
										"src": "60776:184:0",
										"text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
									},
									"id": 3170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToAllTokensEnumeration",
									"nameLocation": "60974:31:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "61014:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3170,
												"src": "61006:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61005:17:0"
									},
									"returnParameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61031:0:0"
									},
									"scope": 3304,
									"src": "60965:161:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3229,
										"nodeType": "Block",
										"src": "61824:878:0",
										"statements": [
											{
												"assignments": [
													3179
												],
												"declarations": [
													{
														"constant": false,
														"id": 3179,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "62013:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 3229,
														"src": "62005:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3178,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "62005:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3183,
												"initialValue": {
													"arguments": [
														{
															"id": 3181,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3173,
															"src": "62040:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3180,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2018,
														"src": "62030:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 3182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62030:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "62005:40:0"
											},
											{
												"assignments": [
													3185
												],
												"declarations": [
													{
														"constant": false,
														"id": 3185,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "62063:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 3229,
														"src": "62055:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3184,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "62055:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3189,
												"initialValue": {
													"baseExpression": {
														"id": 3186,
														"name": "_ownedTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2943,
														"src": "62076:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 3188,
													"indexExpression": {
														"id": 3187,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3175,
														"src": "62094:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "62076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "62055:47:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3190,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3185,
														"src": "62206:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3191,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3179,
														"src": "62220:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "62206:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3216,
												"nodeType": "IfStatement",
												"src": "62202:323:0",
												"trueBody": {
													"id": 3215,
													"nodeType": "Block",
													"src": "62236:289:0",
													"statements": [
														{
															"assignments": [
																3194
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3194,
																	"mutability": "mutable",
																	"name": "lastTokenId",
																	"nameLocation": "62258:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3215,
																	"src": "62250:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3193,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "62250:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3200,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 3195,
																		"name": "_ownedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2939,
																		"src": "62272:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 3197,
																	"indexExpression": {
																		"id": 3196,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3173,
																		"src": "62285:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "62272:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 3199,
																"indexExpression": {
																	"id": 3198,
																	"name": "lastTokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3179,
																	"src": "62291:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "62272:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "62250:56:0"
														},
														{
															"expression": {
																"id": 3207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 3201,
																			"name": "_ownedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2939,
																			"src": "62321:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 3204,
																		"indexExpression": {
																			"id": 3202,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3173,
																			"src": "62334:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "62321:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 3205,
																	"indexExpression": {
																		"id": 3203,
																		"name": "tokenIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3185,
																		"src": "62340:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "62321:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3206,
																	"name": "lastTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3194,
																	"src": "62354:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "62321:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3208,
															"nodeType": "ExpressionStatement",
															"src": "62321:44:0"
														},
														{
															"expression": {
																"id": 3213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3209,
																		"name": "_ownedTokensIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2943,
																		"src": "62437:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 3211,
																	"indexExpression": {
																		"id": 3210,
																		"name": "lastTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3194,
																		"src": "62455:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "62437:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3212,
																	"name": "tokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3185,
																	"src": "62470:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "62437:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3214,
															"nodeType": "ExpressionStatement",
															"src": "62437:43:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "62611:33:0",
													"subExpression": {
														"baseExpression": {
															"id": 3217,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2943,
															"src": "62618:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3219,
														"indexExpression": {
															"id": 3218,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3175,
															"src": "62636:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "62618:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3221,
												"nodeType": "ExpressionStatement",
												"src": "62611:33:0"
											},
											{
												"expression": {
													"id": 3227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "62654:41:0",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 3222,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2939,
																"src": "62661:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 3224,
															"indexExpression": {
																"id": 3223,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3173,
																"src": "62674:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "62661:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3226,
														"indexExpression": {
															"id": 3225,
															"name": "lastTokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3179,
															"src": "62680:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "62661:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3228,
												"nodeType": "ExpressionStatement",
												"src": "62654:41:0"
											}
										]
									},
									"documentation": {
										"id": 3171,
										"nodeType": "StructuredDocumentation",
										"src": "61132:606:0",
										"text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
									},
									"id": 3230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromOwnerEnumeration",
									"nameLocation": "61752:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3173,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "61793:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3230,
												"src": "61785:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3175,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "61807:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3230,
												"src": "61799:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61784:31:0"
									},
									"returnParameters": {
										"id": 3177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61824:0:0"
									},
									"scope": 3304,
									"src": "61743:959:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3277,
										"nodeType": "Block",
										"src": "63061:990:0",
										"statements": [
											{
												"assignments": [
													3237
												],
												"declarations": [
													{
														"constant": false,
														"id": 3237,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "63247:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 3277,
														"src": "63239:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3236,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "63239:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3242,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3238,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2946,
															"src": "63264:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 3239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "63275:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "63264:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 3240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "63284:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "63264:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "63239:46:0"
											},
											{
												"assignments": [
													3244
												],
												"declarations": [
													{
														"constant": false,
														"id": 3244,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "63303:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 3277,
														"src": "63295:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "63295:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3248,
												"initialValue": {
													"baseExpression": {
														"id": 3245,
														"name": "_allTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2950,
														"src": "63316:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 3247,
													"indexExpression": {
														"id": 3246,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3233,
														"src": "63332:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "63316:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "63295:45:0"
											},
											{
												"assignments": [
													3250
												],
												"declarations": [
													{
														"constant": false,
														"id": 3250,
														"mutability": "mutable",
														"name": "lastTokenId",
														"nameLocation": "63670:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 3277,
														"src": "63662:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "63662:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3254,
												"initialValue": {
													"baseExpression": {
														"id": 3251,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2946,
														"src": "63684:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 3253,
													"indexExpression": {
														"id": 3252,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3237,
														"src": "63695:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "63684:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "63662:48:0"
											},
											{
												"expression": {
													"id": 3259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3255,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2946,
															"src": "63721:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 3257,
														"indexExpression": {
															"id": 3256,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3244,
															"src": "63732:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "63721:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3258,
														"name": "lastTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3250,
														"src": "63746:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "63721:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3260,
												"nodeType": "ExpressionStatement",
												"src": "63721:36:0"
											},
											{
												"expression": {
													"id": 3265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3261,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2950,
															"src": "63825:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3263,
														"indexExpression": {
															"id": 3262,
															"name": "lastTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3250,
															"src": "63841:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "63825:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3264,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3244,
														"src": "63856:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "63825:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3266,
												"nodeType": "ExpressionStatement",
												"src": "63825:41:0"
											},
											{
												"expression": {
													"id": 3270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "63987:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 3267,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2950,
															"src": "63994:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3269,
														"indexExpression": {
															"id": 3268,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3233,
															"src": "64010:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "63994:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3271,
												"nodeType": "ExpressionStatement",
												"src": "63987:31:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3272,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2946,
															"src": "64028:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 3274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "64039:3:0",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "64028:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 3275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "64028:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3276,
												"nodeType": "ExpressionStatement",
												"src": "64028:16:0"
											}
										]
									},
									"documentation": {
										"id": 3231,
										"nodeType": "StructuredDocumentation",
										"src": "62708:277:0",
										"text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"
									},
									"id": 3278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromAllTokensEnumeration",
									"nameLocation": "62999:36:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3233,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "63044:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3278,
												"src": "63036:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63036:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63035:17:0"
									},
									"returnParameters": {
										"id": 3235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "63061:0:0"
									},
									"scope": 3304,
									"src": "62990:1061:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2365
									],
									"body": {
										"id": 3302,
										"nodeType": "Block",
										"src": "64253:149:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 3289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3287,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3283,
														"src": "64267:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3288,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "64276:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "64267:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3294,
												"nodeType": "IfStatement",
												"src": "64263:84:0",
												"trueBody": {
													"id": 3293,
													"nodeType": "Block",
													"src": "64279:68:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3290,
																	"name": "ERC721EnumerableForbiddenBatchMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2960,
																	"src": "64300:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 3291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "64300:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3292,
															"nodeType": "RevertStatement",
															"src": "64293:43:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3298,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3281,
															"src": "64379:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3299,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3283,
															"src": "64388:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 3295,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "64356:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$3304_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 3297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "64362:16:0",
														"memberName": "_increaseBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2365,
														"src": "64356:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$",
															"typeString": "function (address,uint128)"
														}
													},
													"id": 3300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "64356:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3301,
												"nodeType": "ExpressionStatement",
												"src": "64356:39:0"
											}
										]
									},
									"documentation": {
										"id": 3279,
										"nodeType": "StructuredDocumentation",
										"src": "64057:106:0",
										"text": " See {ERC721-_increaseBalance}. We need that to account tokens that were minted in batch"
									},
									"id": 3303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "64177:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3285,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "64244:8:0"
									},
									"parameters": {
										"id": 3284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3281,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "64202:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3303,
												"src": "64194:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64194:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3283,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "64219:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3303,
												"src": "64211:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3282,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "64211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64193:33:0"
									},
									"returnParameters": {
										"id": 3286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "64253:0:0"
									},
									"scope": 3304,
									"src": "64168:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "57827:6577:0",
							"usedErrors": [
								221,
								226,
								235,
								240,
								245,
								252,
								257,
								262,
								2957,
								2960
							],
							"usedEvents": [
								334,
								343,
								352
							]
						},
						{
							"id": 3305,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "64537:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3307,
										"name": "Context",
										"nameLocations": [
											"65033:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "65033:7:0"
									},
									"id": 3308,
									"nodeType": "InheritanceSpecifier",
									"src": "65033:7:0"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3306,
								"nodeType": "StructuredDocumentation",
								"src": "64563:439:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 3418,
							"linearizedBaseContracts": [
								3418,
								29
							],
							"name": "Pausable",
							"nameLocation": "65021:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3310,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "65060:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3418,
									"src": "65047:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 3309,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "65047:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3311,
										"nodeType": "StructuredDocumentation",
										"src": "65074:73:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 3315,
									"name": "Paused",
									"nameLocation": "65158:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3313,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "65173:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3315,
												"src": "65165:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "65165:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65164:17:0"
									},
									"src": "65152:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3316,
										"nodeType": "StructuredDocumentation",
										"src": "65188:70:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 3320,
									"name": "Unpaused",
									"nameLocation": "65269:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3318,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "65286:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3320,
												"src": "65278:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "65278:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65277:17:0"
									},
									"src": "65263:32:0"
								},
								{
									"documentation": {
										"id": 3321,
										"nodeType": "StructuredDocumentation",
										"src": "65301:76:0",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 3323,
									"name": "EnforcedPause",
									"nameLocation": "65388:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65401:2:0"
									},
									"src": "65382:22:0"
								},
								{
									"documentation": {
										"id": 3324,
										"nodeType": "StructuredDocumentation",
										"src": "65410:80:0",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 3326,
									"name": "ExpectedPause",
									"nameLocation": "65501:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65514:2:0"
									},
									"src": "65495:22:0"
								},
								{
									"body": {
										"id": 3334,
										"nodeType": "Block",
										"src": "65609:32:0",
										"statements": [
											{
												"expression": {
													"id": 3332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3330,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3310,
														"src": "65619:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "65629:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "65619:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3333,
												"nodeType": "ExpressionStatement",
												"src": "65619:15:0"
											}
										]
									},
									"documentation": {
										"id": 3327,
										"nodeType": "StructuredDocumentation",
										"src": "65523:67:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 3335,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65606:2:0"
									},
									"returnParameters": {
										"id": 3329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65609:0:0"
									},
									"scope": 3418,
									"src": "65595:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3342,
										"nodeType": "Block",
										"src": "65852:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3338,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3372,
														"src": "65862:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 3339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "65862:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3340,
												"nodeType": "ExpressionStatement",
												"src": "65862:19:0"
											},
											{
												"id": 3341,
												"nodeType": "PlaceholderStatement",
												"src": "65891:1:0"
											}
										]
									},
									"documentation": {
										"id": 3336,
										"nodeType": "StructuredDocumentation",
										"src": "65647:175:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 3343,
									"name": "whenNotPaused",
									"nameLocation": "65836:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65849:2:0"
									},
									"src": "65827:72:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3350,
										"nodeType": "Block",
										"src": "66099:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3346,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3385,
														"src": "66109:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 3347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "66109:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3348,
												"nodeType": "ExpressionStatement",
												"src": "66109:16:0"
											},
											{
												"id": 3349,
												"nodeType": "PlaceholderStatement",
												"src": "66135:1:0"
											}
										]
									},
									"documentation": {
										"id": 3344,
										"nodeType": "StructuredDocumentation",
										"src": "65905:167:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 3351,
									"name": "whenPaused",
									"nameLocation": "66086:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "66096:2:0"
									},
									"src": "66077:66:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3359,
										"nodeType": "Block",
										"src": "66291:31:0",
										"statements": [
											{
												"expression": {
													"id": 3357,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3310,
													"src": "66308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3356,
												"id": 3358,
												"nodeType": "Return",
												"src": "66301:14:0"
											}
										]
									},
									"documentation": {
										"id": 3352,
										"nodeType": "StructuredDocumentation",
										"src": "66149:84:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 3360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "66247:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "66253:2:0"
									},
									"returnParameters": {
										"id": 3356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3360,
												"src": "66285:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "66285:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66284:6:0"
									},
									"scope": 3418,
									"src": "66238:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3371,
										"nodeType": "Block",
										"src": "66441:77:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3364,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3360,
														"src": "66455:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 3365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "66455:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3370,
												"nodeType": "IfStatement",
												"src": "66451:61:0",
												"trueBody": {
													"id": 3369,
													"nodeType": "Block",
													"src": "66465:47:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3366,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3323,
																	"src": "66486:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 3367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "66486:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3368,
															"nodeType": "RevertStatement",
															"src": "66479:22:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3361,
										"nodeType": "StructuredDocumentation",
										"src": "66328:57:0",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 3372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "66399:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "66416:2:0"
									},
									"returnParameters": {
										"id": 3363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "66441:0:0"
									},
									"scope": 3418,
									"src": "66390:128:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3384,
										"nodeType": "Block",
										"src": "66638:78:0",
										"statements": [
											{
												"condition": {
													"id": 3378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "66652:9:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3376,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3360,
															"src": "66653:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 3377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "66653:8:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3383,
												"nodeType": "IfStatement",
												"src": "66648:62:0",
												"trueBody": {
													"id": 3382,
													"nodeType": "Block",
													"src": "66663:47:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3379,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3326,
																	"src": "66684:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 3380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "66684:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3381,
															"nodeType": "RevertStatement",
															"src": "66677:22:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3373,
										"nodeType": "StructuredDocumentation",
										"src": "66524:61:0",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 3385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "66599:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "66613:2:0"
									},
									"returnParameters": {
										"id": 3375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "66638:0:0"
									},
									"scope": 3418,
									"src": "66590:126:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3400,
										"nodeType": "Block",
										"src": "66900:66:0",
										"statements": [
											{
												"expression": {
													"id": 3393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3391,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3310,
														"src": "66910:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "66920:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "66910:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3394,
												"nodeType": "ExpressionStatement",
												"src": "66910:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3396,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "66946:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "66946:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3395,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3315,
														"src": "66939:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "66939:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3399,
												"nodeType": "EmitStatement",
												"src": "66934:25:0"
											}
										]
									},
									"documentation": {
										"id": 3386,
										"nodeType": "StructuredDocumentation",
										"src": "66722:124:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 3401,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3389,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3388,
												"name": "whenNotPaused",
												"nameLocations": [
													"66886:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3343,
												"src": "66886:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "66886:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "66860:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "66866:2:0"
									},
									"returnParameters": {
										"id": 3390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "66900:0:0"
									},
									"scope": 3418,
									"src": "66851:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3416,
										"nodeType": "Block",
										"src": "67146:69:0",
										"statements": [
											{
												"expression": {
													"id": 3409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3407,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3310,
														"src": "67156:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 3408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "67166:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "67156:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3410,
												"nodeType": "ExpressionStatement",
												"src": "67156:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3412,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "67195:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 3413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "67195:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3411,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3320,
														"src": "67186:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "67186:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3415,
												"nodeType": "EmitStatement",
												"src": "67181:27:0"
											}
										]
									},
									"documentation": {
										"id": 3402,
										"nodeType": "StructuredDocumentation",
										"src": "66972:121:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 3417,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3405,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3404,
												"name": "whenPaused",
												"nameLocations": [
													"67135:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3351,
												"src": "67135:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "67135:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "67107:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "67115:2:0"
									},
									"returnParameters": {
										"id": 3406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "67146:0:0"
									},
									"scope": 3418,
									"src": "67098:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "65003:2214:0",
							"usedErrors": [
								3323,
								3326
							],
							"usedEvents": [
								3315,
								3320
							]
						},
						{
							"id": 3419,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "67398:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3421,
										"name": "ERC721",
										"nameLocations": [
											"68150:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2898,
										"src": "68150:6:0"
									},
									"id": 3422,
									"nodeType": "InheritanceSpecifier",
									"src": "68150:6:0"
								},
								{
									"baseName": {
										"id": 3423,
										"name": "Pausable",
										"nameLocations": [
											"68158:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3418,
										"src": "68158:8:0"
									},
									"id": 3424,
									"nodeType": "InheritanceSpecifier",
									"src": "68158:8:0"
								}
							],
							"canonicalName": "ERC721Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3420,
								"nodeType": "StructuredDocumentation",
								"src": "67425:688:0",
								"text": " @dev ERC721 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 3448,
							"linearizedBaseContracts": [
								3448,
								3418,
								2898,
								263,
								460,
								435,
								498,
								321,
								29
							],
							"name": "ERC721Pausable",
							"nameLocation": "68132:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2455
									],
									"body": {
										"id": 3446,
										"nodeType": "Block",
										"src": "68448:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3441,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3427,
															"src": "68479:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3442,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3429,
															"src": "68483:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3443,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3431,
															"src": "68492:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3439,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "68465:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Pausable_$3448_$",
																"typeString": "type(contract super ERC721Pausable)"
															}
														},
														"id": 3440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "68471:7:0",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2455,
														"src": "68465:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 3444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "68465:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3438,
												"id": 3445,
												"nodeType": "Return",
												"src": "68458:39:0"
											}
										]
									},
									"documentation": {
										"id": 3425,
										"nodeType": "StructuredDocumentation",
										"src": "68173:122:0",
										"text": " @dev See {ERC721-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 3447,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3435,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3434,
												"name": "whenNotPaused",
												"nameLocations": [
													"68416:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3343,
												"src": "68416:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "68416:13:0"
										}
									],
									"name": "_update",
									"nameLocation": "68309:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3433,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "68407:8:0"
									},
									"parameters": {
										"id": 3432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "68334:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "68326:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "68326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "68354:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "68346:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "68346:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3431,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "68379:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "68371:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "68371:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68316:73:0"
									},
									"returnParameters": {
										"id": 3438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "68439:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "68439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68438:9:0"
									},
									"scope": 3448,
									"src": "68300:204:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3690,
							"src": "68114:392:0",
							"usedErrors": [
								221,
								226,
								235,
								240,
								245,
								252,
								257,
								262,
								3323,
								3326
							],
							"usedEvents": [
								334,
								343,
								352,
								3315,
								3320
							]
						},
						{
							"id": 3449,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "68537:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3450,
										"name": "ERC721",
										"nameLocations": [
											"68585:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2898,
										"src": "68585:6:0"
									},
									"id": 3451,
									"nodeType": "InheritanceSpecifier",
									"src": "68585:6:0"
								},
								{
									"baseName": {
										"id": 3452,
										"name": "ERC721Enumerable",
										"nameLocations": [
											"68593:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3304,
										"src": "68593:16:0"
									},
									"id": 3453,
									"nodeType": "InheritanceSpecifier",
									"src": "68593:16:0"
								},
								{
									"baseName": {
										"id": 3454,
										"name": "ERC721Pausable",
										"nameLocations": [
											"68611:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3448,
										"src": "68611:14:0"
									},
									"id": 3455,
									"nodeType": "InheritanceSpecifier",
									"src": "68611:14:0"
								},
								{
									"baseName": {
										"id": 3456,
										"name": "Ownable",
										"nameLocations": [
											"68627:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 174,
										"src": "68627:7:0"
									},
									"id": 3457,
									"nodeType": "InheritanceSpecifier",
									"src": "68627:7:0"
								}
							],
							"canonicalName": "DatHieuBin",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3689,
							"linearizedBaseContracts": [
								3689,
								174,
								3448,
								3418,
								3304,
								2927,
								2898,
								263,
								460,
								435,
								498,
								321,
								29
							],
							"name": "DatHieuBin",
							"nameLocation": "68571:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3459,
									"mutability": "mutable",
									"name": "_nextTokenId",
									"nameLocation": "68657:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3689,
									"src": "68641:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3458,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "68641:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3462,
									"mutability": "mutable",
									"name": "maxSupply",
									"nameLocation": "68683:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3689,
									"src": "68675:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3460,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "68675:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 3461,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "68695:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "bcc9ca5b",
									"id": 3465,
									"mutability": "mutable",
									"name": "publicMintOpen",
									"nameLocation": "68716:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 3689,
									"src": "68704:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 3463,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "68704:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 3464,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "68733:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c5b8bbb9",
									"id": 3468,
									"mutability": "mutable",
									"name": "allowistMintOpen",
									"nameLocation": "68756:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 3689,
									"src": "68744:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 3466,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "68744:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 3467,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "68775:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2848aeaf",
									"id": 3472,
									"mutability": "mutable",
									"name": "allowList",
									"nameLocation": "68819:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3689,
									"src": "68787:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 3471,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3469,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "68795:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "68787:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3470,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "68806:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3484,
										"nodeType": "Block",
										"src": "68938:2:0",
										"statements": []
									},
									"id": 3485,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4461744869657542696e",
													"id": 3477,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "68883:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_09ea39cc07a5b01e92cd41d4ab203411f001ff6f9d6f9c2d83bc26868090aa8c",
														"typeString": "literal_string \"DatHieuBin\""
													},
													"value": "DatHieuBin"
												},
												{
													"hexValue": "444842",
													"id": 3478,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "68897:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_5729f1b5343b14345f5dfde26898294813dd0bb7ca130c40fbca4252822d0c36",
														"typeString": "literal_string \"DHB\""
													},
													"value": "DHB"
												}
											],
											"id": 3479,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3476,
												"name": "ERC721",
												"nameLocations": [
													"68876:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2898,
												"src": "68876:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "68876:27:0"
										},
										{
											"arguments": [
												{
													"id": 3481,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3474,
													"src": "68920:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3482,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3480,
												"name": "Ownable",
												"nameLocations": [
													"68912:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 174,
												"src": "68912:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "68912:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3474,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "68854:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 3485,
												"src": "68846:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "68846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68845:22:0"
									},
									"returnParameters": {
										"id": 3483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "68938:0:0"
									},
									"scope": 3689,
									"src": "68834:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2094
									],
									"body": {
										"id": 3493,
										"nodeType": "Block",
										"src": "69013:129:0",
										"statements": [
											{
												"expression": {
													"hexValue": "68747470733a2f2f656d6572616c642d776f6f64656e2d67616d65666f776c2d3437322e6d7970696e6174612e636c6f75642f697066732f516d63726e794c5a723479357448637a31576d4b474c57435972555445644332475566646b62425768436e3531772f",
													"id": 3491,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "69030:105:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_78f91a9492fea23a7cf472b247f10dfd8e130e7ba967cdcca1eb528e0da13077",
														"typeString": "literal_string \"https://emerald-wooden-gamefowl-472.mypinata.cloud/ipfs/QmcrnyLZr4y5tHcz1WmKGLWCYrUTEdC2GUfdkbBWhCn51w/\""
													},
													"value": "https://emerald-wooden-gamefowl-472.mypinata.cloud/ipfs/QmcrnyLZr4y5tHcz1WmKGLWCYrUTEdC2GUfdkbBWhCn51w/"
												},
												"functionReturnParameters": 3490,
												"id": 3492,
												"nodeType": "Return",
												"src": "69023:112:0"
											}
										]
									},
									"id": 3494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "68955:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3487,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "68980:8:0"
									},
									"parameters": {
										"id": 3486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "68963:2:0"
									},
									"returnParameters": {
										"id": 3490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3494,
												"src": "68998:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3488,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "68998:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68997:15:0"
									},
									"scope": 3689,
									"src": "68946:196:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3502,
										"nodeType": "Block",
										"src": "69182:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3499,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3401,
														"src": "69192:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69192:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3501,
												"nodeType": "ExpressionStatement",
												"src": "69192:8:0"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 3503,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3497,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3496,
												"name": "onlyOwner",
												"nameLocations": [
													"69172:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "69172:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "69172:9:0"
										}
									],
									"name": "pause",
									"nameLocation": "69157:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69162:2:0"
									},
									"returnParameters": {
										"id": 3498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69182:0:0"
									},
									"scope": 3689,
									"src": "69148:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3511,
										"nodeType": "Block",
										"src": "69249:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3508,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3417,
														"src": "69259:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69259:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3510,
												"nodeType": "ExpressionStatement",
												"src": "69259:10:0"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 3512,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3506,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3505,
												"name": "onlyOwner",
												"nameLocations": [
													"69239:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "69239:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "69239:9:0"
										}
									],
									"name": "unpause",
									"nameLocation": "69222:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69229:2:0"
									},
									"returnParameters": {
										"id": 3507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69249:0:0"
									},
									"scope": 3689,
									"src": "69213:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3541,
										"nodeType": "Block",
										"src": "69381:118:0",
										"statements": [
											{
												"body": {
													"id": 3539,
													"nodeType": "Block",
													"src": "69438:55:0",
													"statements": [
														{
															"expression": {
																"id": 3537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3531,
																		"name": "allowList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3472,
																		"src": "69452:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 3535,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 3532,
																			"name": "addresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3515,
																			"src": "69462:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 3534,
																		"indexExpression": {
																			"id": 3533,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3521,
																			"src": "69472:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "69462:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "69452:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 3536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "69478:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "69452:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3538,
															"nodeType": "ExpressionStatement",
															"src": "69452:30:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3524,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3521,
														"src": "69411:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3525,
															"name": "addresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3515,
															"src": "69415:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 3526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "69425:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "69415:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "69411:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3540,
												"initializationExpression": {
													"assignments": [
														3521
													],
													"declarations": [
														{
															"constant": false,
															"id": 3521,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "69404:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 3540,
															"src": "69396:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3520,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "69396:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3523,
													"initialValue": {
														"hexValue": "30",
														"id": 3522,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "69408:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "69396:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "69433:3:0",
														"subExpression": {
															"id": 3528,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3521,
															"src": "69433:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3530,
													"nodeType": "ExpressionStatement",
													"src": "69433:3:0"
												},
												"nodeType": "ForStatement",
												"src": "69391:102:0"
											}
										]
									},
									"functionSelector": "6447c35d",
									"id": 3542,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3518,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3517,
												"name": "onlyOwner",
												"nameLocations": [
													"69371:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "69371:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "69371:9:0"
										}
									],
									"name": "setAllowList",
									"nameLocation": "69319:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3515,
												"mutability": "mutable",
												"name": "addresses",
												"nameLocation": "69351:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 3542,
												"src": "69332:28:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3513,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "69332:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3514,
													"nodeType": "ArrayTypeName",
													"src": "69332:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69331:30:0"
									},
									"returnParameters": {
										"id": 3519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69381:0:0"
									},
									"scope": 3689,
									"src": "69310:189:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3559,
										"nodeType": "Block",
										"src": "69617:96:0",
										"statements": [
											{
												"expression": {
													"id": 3553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3551,
														"name": "publicMintOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3465,
														"src": "69627:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3552,
														"name": "_publicMintOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3544,
														"src": "69644:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "69627:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3554,
												"nodeType": "ExpressionStatement",
												"src": "69627:32:0"
											},
											{
												"expression": {
													"id": 3557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3555,
														"name": "allowistMintOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3468,
														"src": "69669:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3556,
														"name": "_allowistMintOpen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3546,
														"src": "69688:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "69669:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3558,
												"nodeType": "ExpressionStatement",
												"src": "69669:36:0"
											}
										]
									},
									"functionSelector": "2f48de79",
									"id": 3560,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3549,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3548,
												"name": "onlyOwner",
												"nameLocations": [
													"69607:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 85,
												"src": "69607:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "69607:9:0"
										}
									],
									"name": "editMintWindows",
									"nameLocation": "69514:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3544,
												"mutability": "mutable",
												"name": "_publicMintOpen",
												"nameLocation": "69544:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 3560,
												"src": "69539:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3543,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "69539:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3546,
												"mutability": "mutable",
												"name": "_allowistMintOpen",
												"nameLocation": "69574:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 3560,
												"src": "69569:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3545,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "69569:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69529:68:0"
									},
									"returnParameters": {
										"id": 3550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69617:0:0"
									},
									"scope": 3689,
									"src": "69505:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3579,
										"nodeType": "Block",
										"src": "69805:145:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3564,
															"name": "publicMintOpen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3465,
															"src": "69823:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5075626c6963204d696e7420436c6f736564",
															"id": 3565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "69839:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61cfb3f8f290d71745242e1d6d2c8c8eb692c2a985bf3b95041ff77b8a87add1",
																"typeString": "literal_string \"Public Mint Closed\""
															},
															"value": "Public Mint Closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61cfb3f8f290d71745242e1d6d2c8c8eb692c2a985bf3b95041ff77b8a87add1",
																"typeString": "literal_string \"Public Mint Closed\""
															}
														],
														"id": 3563,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "69815:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69815:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3567,
												"nodeType": "ExpressionStatement",
												"src": "69815:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3569,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "69878:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "69882:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "69878:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "302e3032",
																"id": 3571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "69891:10:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20000000000000000_by_1",
																	"typeString": "int_const 20000000000000000"
																},
																"value": "0.02"
															},
															"src": "69878:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b686f6e67206475207469656e",
															"id": 3573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "69903:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a86de37de099325fdba98bd973ee353863620b1b9e5689a27bb937f240986db1",
																"typeString": "literal_string \"Khong du tien\""
															},
															"value": "Khong du tien"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a86de37de099325fdba98bd973ee353863620b1b9e5689a27bb937f240986db1",
																"typeString": "literal_string \"Khong du tien\""
															}
														],
														"id": 3568,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "69870:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69870:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3575,
												"nodeType": "ExpressionStatement",
												"src": "69870:49:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3576,
														"name": "internalMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3631,
														"src": "69929:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69929:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3578,
												"nodeType": "ExpressionStatement",
												"src": "69929:14:0"
											}
										]
									},
									"functionSelector": "26092b83",
									"id": 3580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "publicMint",
									"nameLocation": "69777:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69787:2:0"
									},
									"returnParameters": {
										"id": 3562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69805:0:0"
									},
									"scope": 3689,
									"src": "69768:182:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3607,
										"nodeType": "Block",
										"src": "70057:214:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3584,
															"name": "allowistMintOpen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3468,
															"src": "70075:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c6f77697374204d696e7420436c6f736564",
															"id": 3585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "70093:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bc0e333509ab750e7eef18b674ce3a3ec259182436c6d413981d959da546bafc",
																"typeString": "literal_string \"Allowist Mint Closed\""
															},
															"value": "Allowist Mint Closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bc0e333509ab750e7eef18b674ce3a3ec259182436c6d413981d959da546bafc",
																"typeString": "literal_string \"Allowist Mint Closed\""
															}
														],
														"id": 3583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "70067:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70067:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3587,
												"nodeType": "ExpressionStatement",
												"src": "70067:49:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3589,
																"name": "allowList",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3472,
																"src": "70134:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 3592,
															"indexExpression": {
																"expression": {
																	"id": 3590,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "70144:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "70148:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "70144:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "70134:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42616e206b686f6e6720636f20717579656e21",
															"id": 3593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "70157:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fbae475842e005629bc2b35231dc8b6e9845355bc9fdd97ff31d41bafdc9ce2b",
																"typeString": "literal_string \"Ban khong co quyen!\""
															},
															"value": "Ban khong co quyen!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fbae475842e005629bc2b35231dc8b6e9845355bc9fdd97ff31d41bafdc9ce2b",
																"typeString": "literal_string \"Ban khong co quyen!\""
															}
														],
														"id": 3588,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "70126:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70126:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3595,
												"nodeType": "ExpressionStatement",
												"src": "70126:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3597,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "70197:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "70201:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "70197:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "302e30303032",
																"id": 3599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "70210:12:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_200000000000000_by_1",
																	"typeString": "int_const 200000000000000"
																},
																"value": "0.0002"
															},
															"src": "70197:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b686f6e67206475207469656e",
															"id": 3601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "70224:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a86de37de099325fdba98bd973ee353863620b1b9e5689a27bb937f240986db1",
																"typeString": "literal_string \"Khong du tien\""
															},
															"value": "Khong du tien"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a86de37de099325fdba98bd973ee353863620b1b9e5689a27bb937f240986db1",
																"typeString": "literal_string \"Khong du tien\""
															}
														],
														"id": 3596,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "70189:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70189:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3603,
												"nodeType": "ExpressionStatement",
												"src": "70189:51:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3604,
														"name": "internalMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3631,
														"src": "70250:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70250:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3606,
												"nodeType": "ExpressionStatement",
												"src": "70250:14:0"
											}
										]
									},
									"functionSelector": "2e9b82f2",
									"id": 3608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowistMint",
									"nameLocation": "70027:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "70039:2:0"
									},
									"returnParameters": {
										"id": 3582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "70057:0:0"
									},
									"scope": 3689,
									"src": "70018:253:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3630,
										"nodeType": "Block",
										"src": "70310:151:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3612,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3023,
																	"src": "70328:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 3613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "70328:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 3614,
																"name": "maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3462,
																"src": "70344:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "70328:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b686f6e6720636f6e204e465421",
															"id": 3616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "70355:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7c04249364a04dff6b55ac8edcf495f23fd180f6458f000171cd9318f06be5c6",
																"typeString": "literal_string \"Khong con NFT!\""
															},
															"value": "Khong con NFT!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7c04249364a04dff6b55ac8edcf495f23fd180f6458f000171cd9318f06be5c6",
																"typeString": "literal_string \"Khong con NFT!\""
															}
														],
														"id": 3611,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "70320:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70320:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3618,
												"nodeType": "ExpressionStatement",
												"src": "70320:52:0"
											},
											{
												"assignments": [
													3620
												],
												"declarations": [
													{
														"constant": false,
														"id": 3620,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "70390:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3630,
														"src": "70382:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3619,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "70382:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3623,
												"initialValue": {
													"id": 3622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "70400:14:0",
													"subExpression": {
														"id": 3621,
														"name": "_nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3459,
														"src": "70400:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "70382:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3625,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "70434:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "70438:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "70434:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3627,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3620,
															"src": "70446:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3624,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2520,
															2546
														],
														"referencedDeclaration": 2520,
														"src": "70424:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70424:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3629,
												"nodeType": "ExpressionStatement",
												"src": "70424:30:0"
											}
										]
									},
									"id": 3631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "internalMint",
									"nameLocation": "70286:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "70298:2:0"
									},
									"returnParameters": {
										"id": 3610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "70310:0:0"
									},
									"scope": 3689,
									"src": "70277:184:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2455,
										3119,
										3447
									],
									"body": {
										"id": 3653,
										"nodeType": "Block",
										"src": "70703:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3648,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3633,
															"src": "70734:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3649,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3635,
															"src": "70738:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3650,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3637,
															"src": "70747:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3646,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "70720:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_DatHieuBin_$3689_$",
																"typeString": "type(contract super DatHieuBin)"
															}
														},
														"id": 3647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "70726:7:0",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3447,
														"src": "70720:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 3651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70720:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3645,
												"id": 3652,
												"nodeType": "Return",
												"src": "70713:39:0"
											}
										]
									},
									"id": 3654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "70546:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3642,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3639,
												"name": "ERC721",
												"nameLocations": [
													"70631:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2898,
												"src": "70631:6:0"
											},
											{
												"id": 3640,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"70639:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3304,
												"src": "70639:16:0"
											},
											{
												"id": 3641,
												"name": "ERC721Pausable",
												"nameLocations": [
													"70657:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3448,
												"src": "70657:14:0"
											}
										],
										"src": "70622:50:0"
									},
									"parameters": {
										"id": 3638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3633,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "70562:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3654,
												"src": "70554:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70554:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3635,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "70574:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3654,
												"src": "70566:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "70566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3637,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "70591:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3654,
												"src": "70583:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70553:43:0"
									},
									"returnParameters": {
										"id": 3645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3654,
												"src": "70690:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70689:9:0"
									},
									"scope": 3689,
									"src": "70537:222:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2365,
										3303
									],
									"body": {
										"id": 3671,
										"nodeType": "Block",
										"src": "70887:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3667,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3656,
															"src": "70920:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3658,
															"src": "70929:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"expression": {
															"id": 3664,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "70897:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_DatHieuBin_$3689_$",
																"typeString": "type(contract super DatHieuBin)"
															}
														},
														"id": 3666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "70903:16:0",
														"memberName": "_increaseBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3303,
														"src": "70897:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint128_$returns$__$",
															"typeString": "function (address,uint128)"
														}
													},
													"id": 3669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70897:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3670,
												"nodeType": "ExpressionStatement",
												"src": "70897:38:0"
											}
										]
									},
									"id": 3672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "70774:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3662,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3660,
												"name": "ERC721",
												"nameLocations": [
													"70857:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2898,
												"src": "70857:6:0"
											},
											{
												"id": 3661,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"70865:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3304,
												"src": "70865:16:0"
											}
										],
										"src": "70848:34:0"
									},
									"parameters": {
										"id": 3659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3656,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "70799:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3672,
												"src": "70791:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3658,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "70816:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3672,
												"src": "70808:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3657,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "70808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70790:32:0"
									},
									"returnParameters": {
										"id": 3663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "70887:0:0"
									},
									"scope": 3689,
									"src": "70765:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1990,
										2984
									],
									"body": {
										"id": 3687,
										"nodeType": "Block",
										"src": "71093:60:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3684,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3674,
															"src": "71134:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 3682,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "71110:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_DatHieuBin_$3689_$",
																"typeString": "type(contract super DatHieuBin)"
															}
														},
														"id": 3683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "71116:17:0",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2984,
														"src": "71110:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 3685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "71110:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3681,
												"id": 3686,
												"nodeType": "Return",
												"src": "71103:43:0"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 3688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "70957:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3678,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3676,
												"name": "ERC721",
												"nameLocations": [
													"71040:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2898,
												"src": "71040:6:0"
											},
											{
												"id": 3677,
												"name": "ERC721Enumerable",
												"nameLocations": [
													"71048:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3304,
												"src": "71048:16:0"
											}
										],
										"src": "71031:34:0"
									},
									"parameters": {
										"id": 3675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3674,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "70982:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 3688,
												"src": "70975:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3673,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "70975:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70974:20:0"
									},
									"returnParameters": {
										"id": 3681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3688,
												"src": "71083:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "71083:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71082:6:0"
									},
									"scope": 3689,
									"src": "70948:205:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3690,
							"src": "68562:2593:0",
							"usedErrors": [
								40,
								45,
								221,
								226,
								235,
								240,
								245,
								252,
								257,
								262,
								2957,
								2960,
								3323,
								3326
							],
							"usedEvents": [
								51,
								334,
								343,
								352,
								3315,
								3320
							]
						}
					],
					"src": "227:70929:0"
				},
				"id": 0
			}
		}
	}
}