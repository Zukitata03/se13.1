/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DHACrowdSale,
  DHACrowdSaleInterface,
} from "../../../contracts/DHACrowdsale.sol/DHACrowdSale";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bnb_rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "t1_rate",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "icotoken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BuyTokenByBNB",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BuyTokenByT1",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "SetBNBRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "SetT1Rate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "SetT1Token",
    type: "event",
  },
  {
    inputs: [],
    name: "BNB_rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "T1_rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_wallet",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyTokenByBNB",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "T1Amount",
        type: "uint256",
      },
    ],
    name: "buyTokenByT1",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "BNBAmount",
        type: "uint256",
      },
    ],
    name: "getTokenAmountBNB",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "T1Amount",
        type: "uint256",
      },
    ],
    name: "getTokenAmountT1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "new_rate",
        type: "uint256",
      },
    ],
    name: "setBNBRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "new_rate",
        type: "uint256",
      },
    ],
    name: "setT1Rate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_address",
        type: "address",
      },
    ],
    name: "setT1Token",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "t1Token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawErc20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200207438038062002074833981810160405281019062000037919062000287565b6000620000496200018160201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350836002819055508260038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050620002f9565b600033905090565b600080fd5b6000819050919050565b620001a3816200018e565b8114620001af57600080fd5b50565b600081519050620001c38162000198565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f682620001c9565b9050919050565b6200020881620001e9565b81146200021457600080fd5b50565b6000815190506200022881620001fd565b92915050565b60006200023b82620001c9565b9050919050565b60006200024f826200022e565b9050919050565b620002618162000242565b81146200026d57600080fd5b50565b600081519050620002818162000256565b92915050565b60008060008060808587031215620002a457620002a362000189565b5b6000620002b487828801620001b2565b9450506020620002c787828801620001b2565b9350506040620002da8782880162000217565b9250506060620002ed8782880162000270565b91505092959194509250565b611d6b80620003096000396000f3fe6080604052600436106100fe5760003560e01c8063715018a61161009557806396a4b8231161006457806396a4b82314610297578063acb03d43146102d4578063f2fde38b14610311578063fc0c546a1461033a578063fe8ce36a14610365576100fe565b8063715018a614610210578063775db1cf1461022757806384c09b19146102435780638da5cb5b1461026c576100fe565b806331927737116100d157806331927737146101ad5780633ccfd60b146101b75780633e3f2359146101ce578063610757e4146101e5576100fe565b806303754fcb1461010357806314888cb91461012e578063157fc821146101595780632be8629914610184575b600080fd5b34801561010f57600080fd5b5061011861038e565b60405161012591906114f8565b60405180910390f35b34801561013a57600080fd5b50610143610394565b6040516101509190611592565b60405180910390f35b34801561016557600080fd5b5061016e6103ba565b60405161017b91906114f8565b60405180910390f35b34801561019057600080fd5b506101ab60048036038101906101a691906115de565b6103c0565b005b6101b561047d565b005b3480156101c357600080fd5b506101cc6106dd565b005b3480156101da57600080fd5b506101e36107a2565b005b3480156101f157600080fd5b506101fa61095c565b604051610207919061162c565b60405180910390f35b34801561021c57600080fd5b50610225610982565b005b610241600480360381019061023c91906115de565b610abc565b005b34801561024f57600080fd5b5061026a60048036038101906102659190611697565b610d82565b005b34801561027857600080fd5b50610281610e79565b60405161028e91906116d3565b60405180910390f35b3480156102a357600080fd5b506102be60048036038101906102b991906115de565b610ea2565b6040516102cb91906114f8565b60405180910390f35b3480156102e057600080fd5b506102fb60048036038101906102f691906115de565b610eb9565b60405161030891906114f8565b60405180910390f35b34801561031d57600080fd5b506103386004803603810190610333919061171a565b610ed0565b005b34801561034657600080fd5b5061034f611078565b60405161035c9190611592565b60405180910390f35b34801561037157600080fd5b5061038c600480360381019061038791906115de565b61109e565b005b60035481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b6103c861115b565b73ffffffffffffffffffffffffffffffffffffffff166103e6610e79565b73ffffffffffffffffffffffffffffffffffffffff161461043c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610433906117a4565b60405180910390fd5b806002819055507fb0cc740bbbfcd5af22ee3956c6b44d2d6f499e2a86cb11d915fcce88dca2113a8160405161047291906114f8565b60405180910390a150565b6000349050600061048d82610eb9565b9050600081116104d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c990611810565b60405180910390fd5b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161052e91906116d3565b602060405180830381865afa15801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f9190611845565b10156105b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a7906118be565b60405180910390fd5b813373ffffffffffffffffffffffffffffffffffffffff1631101561060a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610601906118be565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610672573d6000803e3d6000fd5b506106a0600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383611163565b7ff695091b71a5c3ea41510251da89a66470bbcf1ee118f820a1bab8739e29ea5033826040516106d19291906118de565b60405180910390a15050565b6106e561115b565b73ffffffffffffffffffffffffffffffffffffffff16610703610e79565b73ffffffffffffffffffffffffffffffffffffffff1614610759576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610750906117a4565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561079f573d6000803e3d6000fd5b50565b6107aa61115b565b73ffffffffffffffffffffffffffffffffffffffff166107c8610e79565b73ffffffffffffffffffffffffffffffffffffffff161461081e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610815906117a4565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108b891906116d3565b602060405180830381865afa1580156108d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f99190611845565b6040518363ffffffff1660e01b81526004016109169291906118de565b6020604051808303816000875af1158015610935573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610959919061193f565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61098a61115b565b73ffffffffffffffffffffffffffffffffffffffff166109a8610e79565b73ffffffffffffffffffffffffffffffffffffffff16146109fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f5906117a4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610ac782610ea2565b905081600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610b2591906116d3565b602060405180830381865afa158015610b42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b669190611845565b1015610ba7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9e906118be565b60405180910390fd5b60008111610bea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be190611810565b60405180910390fd5b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c4691906116d3565b602060405180830381865afa158015610c63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c879190611845565b1015610cc8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbf906118be565b60405180910390fd5b610d18600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856111e9565b610d45600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383611163565b7f106c5fd4a3e90b144a8f6d9ed4678b0928c3a72a5f7f70397f8ef08bd9eb26163382604051610d769291906118de565b60405180910390a15050565b610d8a61115b565b73ffffffffffffffffffffffffffffffffffffffff16610da8610e79565b73ffffffffffffffffffffffffffffffffffffffff1614610dfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df5906117a4565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f48e81c05413f5fbd303030b650f8e367d6a771a275ca8435b998767d4c1afe9b81604051610e6e9190611592565b60405180910390a150565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060035482610eb2919061199b565b9050919050565b600060025482610ec9919061199b565b9050919050565b610ed861115b565b73ffffffffffffffffffffffffffffffffffffffff16610ef6610e79565b73ffffffffffffffffffffffffffffffffffffffff1614610f4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f43906117a4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610fbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb290611a4f565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6110a661115b565b73ffffffffffffffffffffffffffffffffffffffff166110c4610e79565b73ffffffffffffffffffffffffffffffffffffffff161461111a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611111906117a4565b60405180910390fd5b806003819055507fe54240f1e4baf5bae8b108703dc8237ae3738d4239393a8c839980784c1877c28160405161115091906114f8565b60405180910390a150565b600033905090565b6111e48363a9059cbb60e01b84846040516024016111829291906118de565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611272565b505050565b61126c846323b872dd60e01b85858560405160240161120a93929190611a6f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611272565b50505050565b60006112d4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166113399092919063ffffffff16565b905060008151111561133457808060200190518101906112f4919061193f565b611333576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132a90611b18565b60405180910390fd5b5b505050565b60606113488484600085611351565b90509392505050565b606082471015611396576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138d90611baa565b60405180910390fd5b61139f85611465565b6113de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d590611c16565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516114079190611ca7565b60006040518083038185875af1925050503d8060008114611444576040519150601f19603f3d011682016040523d82523d6000602084013e611449565b606091505b5091509150611459828286611478565b92505050949350505050565b600080823b905060008111915050919050565b60608315611488578290506114d8565b60008351111561149b5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114cf9190611d13565b60405180910390fd5b9392505050565b6000819050919050565b6114f2816114df565b82525050565b600060208201905061150d60008301846114e9565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061155861155361154e84611513565b611533565b611513565b9050919050565b600061156a8261153d565b9050919050565b600061157c8261155f565b9050919050565b61158c81611571565b82525050565b60006020820190506115a76000830184611583565b92915050565b600080fd5b6115bb816114df565b81146115c657600080fd5b50565b6000813590506115d8816115b2565b92915050565b6000602082840312156115f4576115f36115ad565b5b6000611602848285016115c9565b91505092915050565b600061161682611513565b9050919050565b6116268161160b565b82525050565b6000602082019050611641600083018461161d565b92915050565b600061165282611513565b9050919050565b600061166482611647565b9050919050565b61167481611659565b811461167f57600080fd5b50565b6000813590506116918161166b565b92915050565b6000602082840312156116ad576116ac6115ad565b5b60006116bb84828501611682565b91505092915050565b6116cd81611647565b82525050565b60006020820190506116e860008301846116c4565b92915050565b6116f781611647565b811461170257600080fd5b50565b600081359050611714816116ee565b92915050565b6000602082840312156117305761172f6115ad565b5b600061173e84828501611705565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061178e602083611747565b915061179982611758565b602082019050919050565b600060208201905081810360008301526117bd81611781565b9050919050565b7f416d6f756e74206973207a65726f000000000000000000000000000000000000600082015250565b60006117fa600e83611747565b9150611805826117c4565b602082019050919050565b60006020820190508181036000830152611829816117ed565b9050919050565b60008151905061183f816115b2565b92915050565b60006020828403121561185b5761185a6115ad565b5b600061186984828501611830565b91505092915050565b7f496e73756666696369656e74206163636f756e742062616c616e636500000000600082015250565b60006118a8601c83611747565b91506118b382611872565b602082019050919050565b600060208201905081810360008301526118d78161189b565b9050919050565b60006040820190506118f360008301856116c4565b61190060208301846114e9565b9392505050565b60008115159050919050565b61191c81611907565b811461192757600080fd5b50565b60008151905061193981611913565b92915050565b600060208284031215611955576119546115ad565b5b60006119638482850161192a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119a6826114df565b91506119b1836114df565b92508282026119bf816114df565b915082820484148315176119d6576119d561196c565b5b5092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611a39602683611747565b9150611a44826119dd565b604082019050919050565b60006020820190508181036000830152611a6881611a2c565b9050919050565b6000606082019050611a8460008301866116c4565b611a9160208301856116c4565b611a9e60408301846114e9565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000611b02602a83611747565b9150611b0d82611aa6565b604082019050919050565b60006020820190508181036000830152611b3181611af5565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611b94602683611747565b9150611b9f82611b38565b604082019050919050565b60006020820190508181036000830152611bc381611b87565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611c00601d83611747565b9150611c0b82611bca565b602082019050919050565b60006020820190508181036000830152611c2f81611bf3565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611c6a578082015181840152602081019050611c4f565b60008484015250505050565b6000611c8182611c36565b611c8b8185611c41565b9350611c9b818560208601611c4c565b80840191505092915050565b6000611cb38284611c76565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000611ce582611cbe565b611cef8185611747565b9350611cff818560208601611c4c565b611d0881611cc9565b840191505092915050565b60006020820190508181036000830152611d2d8184611cda565b90509291505056fea264697066735822122016ff02390323b4ae247e8218d76a54fef4d3d2a2a04420f88b7cd3974e08183c64736f6c63430008130033";

type DHACrowdSaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DHACrowdSaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DHACrowdSale__factory extends ContractFactory {
  constructor(...args: DHACrowdSaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    bnb_rate: BigNumberish,
    t1_rate: BigNumberish,
    wallet: AddressLike,
    icotoken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      bnb_rate,
      t1_rate,
      wallet,
      icotoken,
      overrides || {}
    );
  }
  override deploy(
    bnb_rate: BigNumberish,
    t1_rate: BigNumberish,
    wallet: AddressLike,
    icotoken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      bnb_rate,
      t1_rate,
      wallet,
      icotoken,
      overrides || {}
    ) as Promise<
      DHACrowdSale & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DHACrowdSale__factory {
    return super.connect(runner) as DHACrowdSale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DHACrowdSaleInterface {
    return new Interface(_abi) as DHACrowdSaleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DHACrowdSale {
    return new Contract(address, _abi, runner) as unknown as DHACrowdSale;
  }
}
